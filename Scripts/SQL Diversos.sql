---- testes para trazer o tipo de solicitação e para validacao dos dados que irao para a fato_recursos_humanos


-- consulta para trazer quem saiu e quem solicitou   - select no select e select no from

           
  select 'select in select',a.pfis_numero, a.remp_chapa, b.nome as substituto, a.remp_chapa_subs, (select d.nome from dda_rh.pessoas_fisicas d where d.numero = a.remp_chapa)solicitante,c.descricao
  from DDA_RH.requisicoes a, dda_rh.pessoas_fisicas b, dda_rh.tipo_requisicoes c, dda_rh.comp_requisicoes e
   where a.remp_chapa_subs = b.numero 
   and a.TPRE_COD = c.cod
   and a.cod = e.reqi_cod
   and  remp_chapa_subs ='2017310'
   and c.descricao = upper('SUBSTITUIÇÃO')
--  order by a.hor_dt_ini_vig desc

union

  select 'select in from',a.pfis_numero, a.remp_chapa, b.nome as substituto, a.remp_chapa_subs, solicitante.nome, c.descricao 
  from DDA_RH.requisicoes a, dda_rh.pessoas_fisicas b, dda_rh.tipo_requisicoes c, dda_rh.comp_requisicoes e,
   (select d.nome, d.numero from dda_rh.pessoas_fisicas d )solicitante
   where a.remp_chapa_subs = b.numero 
   and a.TPRE_COD = c.cod
   and a.cod = e.reqi_cod
   and solicitante.numero = a.remp_chapa
   and  remp_chapa_subs ='2017310'
   and c.descricao = upper('SUBSTITUIÇÃO')
  --order by a.hor_dt_ini_vig desc


                      
                    
                    
-- REQUISIÇÕES  -- PARA SABER O TIPO DA REQUISIÇÃO  
                                         
select A.COD,
       c.descricao,       
       a.dt_requis  
from DDA_RH.requisicoes a, 
     dda_rh.tipo_requisicoes c 
where 1 = 1   
and a.TPRE_COD = c.cod   
AND  A.COD = 15147--7695 
order by a.hor_dt_ini_vig desc;

select * from dda_rh.requisicoes



 
-- traz data de admissao e demissao
select * from DDA_RH.REG_EMPREGOS   
where chapa =   '2017560'     


select * from DDA_RH.REG_RESCISOES    
where remp_chapa =   '2017560'                                   

-- consulta para trazer quem saiu e quem solicitou   - acredito que falta ajustar ainda - deprecated                
  select a.pfis_numero, a.remp_chapa, b.nome as substituto, a.remp_chapa_subs, (select d.nome from dda_rh.pessoas_fisicas d where d.numero = a.remp_chapa)solicitante,c.descricao
  from DDA_RH.requisicoes a, dda_rh.pessoas_fisicas b, dda_rh.tipo_requisicoes c, dda_rh.comp_requisicoes e
   where a.remp_chapa_subs = b.numero 
   and a.TPRE_COD = c.cod
   and a.cod = e.reqi_cod
   and  remp_chapa_subs ='2017310'
   and c.descricao = upper('SUBSTITUIÇÃO')
  order by a.hor_dt_ini_vig desc

-- busca matricula e nome do funcionario
select * from dda_rh.pessoas_fisicas where numero= 2007900
select * from dda_bi.dim_profissionais
-- 


select * from dda_iif.iif_requisicao_pessoal_out

select * from dda_rh.comp_requisicoes
order by reqi_cod desc

-- 
select * from dda_rh.requisicoes

-- tipos de desligamentos
select * from dda_rh.TIPOS_DESLIGAMENTOS t



-- rescisoes para identificar o motivo do desligamento

select * from dda_rh.REG_RESCISOES_DEF_CALC t

select * from dda_rh.REG_RESCISOES_REINTEGRACAO t

--identifica as demissoes voluntarias

select * from dda_rh.REG_RESCISOES where mapa_cod = 4

-- identifica os motivos de desligamentos
select distinct b1.TIDL_COD, a1.rrri_dt_rescisao,c1.descr, d1.nome,d1.numero
  from dda_rh.REG_RESCISOES_DEF_CALC    a1,
       dda_rh.REG_RESCISOES_reintegracao b1,
       dda_rh.tipos_desligamentos        c1,
       dda_rh.pessoas_fisicas d1
 where b1.tidl_cod = c1.cod
   and a1.rrri_remp_emp_cod = b1.remp_emp_cod
   and a1.rrri_remp_chapa = b1.remp_chapa
   and a1.rrri_dt_rescisao = b1.dt_rescisao
   and a1.rrri_remp_chapa = d1.numero
   and numero = 175684
   --and d1.nome like '
   order by rrri_dt_rescisao desc
   
-- tambem identifica os motivos de desligamentos - me parece mais correta   
select re.tidl_cod, dt_rescisao, descr, nome, numero 
from dda_rh.reg_empregos re, dda_rh.pessoas_fisicas pf, dda_rh.tipos_desligamentos td
where re.chapa = pf.numero
and   re.tidl_cod = td.cod
and   pf.numero = 175706

-- NOVA DIM DIM_MOTIVOS_DESLIGAMENTOS

select cod, descr, cod_caged, cod_fgts,cod_rais, dt_atliz from dda_rh.tipos_desligamentos
union
select 999,'ATIVO',0,'0',0,to_date('31-12-2999') from dual

-- LIGACAO DA DIM_DIMENSOES NA FAT_RECURSOS_HUMANOS
 
select nvl(tidl_cod,'999'),numero from
(select * 
from fat_recursos_humanos rh, 
                          (select re.tidl_cod/*, dt_rescisao, descr, nome*/, numero 
                          from dda_rh.reg_empregos re
                          , dda_rh.pessoas_fisicas pf
                          , dda_rh.tipos_desligamentos td
                          where re.chapa = pf.numero
                          and   re.tidl_cod = td.cod(+)
                          --and numero=175706
                         )tp_mov
where rh.dpro_id = tp_mov.numero
--and dtpmov_id in (1,4)
and   rh.dpro_id in (175706/*,181595*/)
)
  
-- carga da dimensao dim_motivos_DESLIGAMENTOS com SCD2

select count(*) into v_vazio from DIM_MOTIVOS_DESLIGAMENTOS;
if v_vazio = 0 then
INSERT into p_dim(P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA) values(0,0,'0','31-12-2999','31-12-2999');
end if;

MERGE INTO DIM_MOTIVOS_DESLIGAMENTOS p
USING ( SELECT DECODE(s.COD_OPERACAO,1,-6789,m.ID) as ID_REQ,
                   ID,
                   COD,
                   DESCRICAO
                   /*PRODUCT_ID,
                   PRODUCT_CATEGORY_ID,
                   PRODUCT_NAME,
                   PRODUCT_DESCRIPTION,
                   PRICE,
                   PRICE_EFFECTIVE_DATE,
                   LAST_MODIFIED_DATE,
                   CREATED_DATE,
                   m.scd_row_type_id*/
              FROM    (SELECT DP.ID,
                              SP.COD,
                              SP.DESCRICAO,/*dp.product_sid,
                              sp.PRODUCT_ID,
                              sp.PRODUCT_CATEGORY_ID,
                              sp.PRODUCT_NAME,
                              sp.PRODUCT_DESCRIPTION,
                              sp.PRICE,
                              sp.PRICE_EFFECTIVE_DATE,
                              sp.LAST_MODIFIED_DATE,
                              sp.CREATED_DATE,*/
                              CASE
                                 WHEN DP.COD IS NULL
                                 THEN
                                    1
                                 WHEN (DP.DESCRICAO != SP.DESCRICAO/*dp.product_category_id !=
                                          sp.product_category_id
                                       OR dp.product_name != sp.product_name
                                       OR DP.PRODUCT_DESCRIPTION !=
                                             sp.product_description
                                       OR dp.price != sp.price
                                       OR dp.price_effective_date !=
                                             sp.price_effective_date*/)
                                 THEN
                                    2
                                 ELSE
                                    0
                              END
                                 AS COD_OPERACAO
                         FROM    DDA_RH.TIPOS_DESLIGAMENTOS/*stg_product*/ sp -- TROCAR POR PARAMETRO
                              LEFT JOIN
                                 DDA_BI.DIM_MOTIVOS_DESLIGAMENTOS/*Dim_product*/ dp
                              ON (SP.COD = DP.COD and  dp.FLAG_ATUAL/*is_current_row*/ = 'S ')
                     ) m
                   JOIN  (select 1 AS COD_OPERACAO FROM DUAL UNION SELECT 2 FROm dual)
 /*scd_row_type*/ s
                   ON (s.COD_OPERACAO <= m.COD_OPERACAO)
                   ) mp
        ON  (p.ID = mp.ID_REQ)
when matched then
   update set P.DT_FIM_VIGENCIA = SYSDATE, FLAG_ATUAL = 'N'/*, updated_date = sysdate*/
when NOT matched then
insert (P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA)
 values (POPULA_DIMS_SEQ.nextval,mp.COD,mp.DESCRICAO,sysdate, SYSDATE);



-- query para ligar os demitidos na dimensao de profissionais do BI. Data_fim nula mas tem registros em rrri_dt_demissao.
-- Entender melhor  
select * from dda_bi.dim_profissionais dp, (select distinct b1.TIDL_COD, a1.rrri_dt_rescisao,c1.descr, d1.nome,d1.numero
                    from dda_rh.REG_RESCISOES_DEF_CALC    a1,
                         dda_rh.REG_RESCISOES_reintegracao b1,
                         dda_rh.tipos_desligamentos        c1,
                         dda_rh.pessoas_fisicas d1
                   where b1.tidl_cod = c1.cod
                     and a1.rrri_remp_emp_cod = b1.remp_emp_cod
                     and a1.rrri_remp_chapa = b1.remp_chapa
                     and a1.rrri_dt_rescisao = b1.dt_rescisao
                     and a1.rrri_remp_chapa = d1.numero
                     --and d1.nome like '
                     order by rrri_dt_rescisao desc) base
where dp.matricula = base.numero
and data_fim is null
a

-- situacao funcional
-- DIM DIM_SITUACOES_FUNCIONAIS
select * from dda_rh.SITUACOES_FUNCIONAIS t

select * from dda_rh.reg_afastamentos where rsit_remp_chapa = 175706

-- ligacao da situação funcional com o funcionario para chegar na fat_recursos_humanos
-- esta trazendo mais de 54 linhas para o user 175706 que é o que tem na fato.
select count(*) from (
select *--rsit_remp_chapa,rsit_sfun_cod 
from dda_rh.reg_afastamentos raf, dda_rh.pessoas_fisicas pf, dda_rh.SITUACOES_FUNCIONAIS t, fat_recursos_humanos rh
where raf.rsit_sfun_cod = t.cod
and raf.rsit_remp_chapa = pf.numero
and pf.numero = rh.dpro_id
and pf.numero = 175706
)

-- LIGACAO DA DIM_SITUACOES_FUNCIONAIS NA FAT_RECURSOS_HUMANOS

select count(*)
  from (select rsit_remp_chapa,
               rsit_sfun_cod/*,
               rsit_dt_mov,
               mapa_cod,
               dt_ini_vig,
               dias_afast,
               dias_abon,
               dt_fim_vig,
               horas_afast *//*, max(dt_ini_vig)*/
          from (select rsit_remp_chapa,rsit_sfun_cod /*as cod*/
                  from dda_rh.reg_afastamentos t
                 where t.dt_ini_vig =
                       (select max(dt_ini_vig)
                          from dda_rh.reg_afastamentos
                         where rsit_remp_chapa = 175706)
                   and rsit_remp_chapa = 175706) raf,
               dda_rh.pessoas_fisicas pf,
               dda_rh.situacoes_funcionais t,
               fat_recursos_humanos rh
         where raf.rsit_sfun_cod = t.cod
           and raf.rsit_remp_chapa = pf.numero
           and pf.numero = rh.dpro_id
           and pf.numero = 175706
        --group by rsit_remp_chapa,rsit_sfun_cod
        )



-- carga da dimensao dim_SITUACOES_FUNCIONAIS com SCD2

select count(*) into v_vazio from DIM_SITUACOES_FUNCIONAIS;
if v_vazio = 0 then
INSERT into p_dim(P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA) values(0,0,'0','31-12-2999','31-12-2999');
end if;

MERGE INTO DIM_SITUACOES_FUNCIONAIS p
USING ( SELECT DECODE(s.COD_OPERACAO,1,-6789,m.ID) as ID_REQ,
                   ID,
                   COD,
                   DESCRICAO
                   /*PRODUCT_ID,
                   PRODUCT_CATEGORY_ID,
                   PRODUCT_NAME,
                   PRODUCT_DESCRIPTION,
                   PRICE,
                   PRICE_EFFECTIVE_DATE,
                   LAST_MODIFIED_DATE,
                   CREATED_DATE,
                   m.scd_row_type_id*/
              FROM    (SELECT DP.ID,
                              SP.COD,
                              SP.DESCRICAO,/*dp.product_sid,
                              sp.PRODUCT_ID,
                              sp.PRODUCT_CATEGORY_ID,
                              sp.PRODUCT_NAME,
                              sp.PRODUCT_DESCRIPTION,
                              sp.PRICE,
                              sp.PRICE_EFFECTIVE_DATE,
                              sp.LAST_MODIFIED_DATE,
                              sp.CREATED_DATE,*/
                              CASE
                                 WHEN DP.COD IS NULL
                                 THEN
                                    1
                                 WHEN (DP.DESCRICAO != SP.DESCRICAO/*dp.product_category_id !=
                                          sp.product_category_id
                                       OR dp.product_name != sp.product_name
                                       OR DP.PRODUCT_DESCRIPTION !=
                                             sp.product_description
                                       OR dp.price != sp.price
                                       OR dp.price_effective_date !=
                                             sp.price_effective_date*/)
                                 THEN
                                    2
                                 ELSE
                                    0
                              END
                                 AS COD_OPERACAO
                         FROM    DDA_RH.SITUACOES_FUNCIONAIS/*stg_product*/ sp -- TROCAR POR PARAMETRO
                              LEFT JOIN
                                 DDA_BI.DIM_SITUACOES_FUNCIONAIS/*Dim_product*/ dp
                              ON (SP.COD = DP.COD and  dp.FLAG_ATUAL/*is_current_row*/ = 'S ')
                     ) m
                   JOIN  (select 1 AS COD_OPERACAO FROM DUAL UNION SELECT 2 FROm dual)
 /*scd_row_type*/ s
                   ON (s.COD_OPERACAO <= m.COD_OPERACAO)
                   ) mp
        ON  (p.ID = mp.ID_REQ)
when matched then
   update set P.DT_FIM_VIGENCIA = SYSDATE, FLAG_ATUAL = 'N'/*, updated_date = sysdate*/
when NOT matched then
insert (P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA)
 values (POPULA_DIMS_SEQ.nextval,mp.COD,mp.DESCRICAO,sysdate, SYSDATE);
  commit;


-- reumuneracoes
select * from dda_rh.REMUNERACOES t


-- proventos, descontos, etc.
select * from dda_rh.TIPOS_EVENTOS t
--
select * from dda_rh.EVENTOS t

select * from dda_rh.movimentos_calculados where remp_chapa = 2022520

-- horas extras

select frh.demp_id
        , frh.dpro_id
        , frh.dcarg_id
        , frh.dcr_lot_id
        , frh.duorg_lot_id
        , frh.dt_id
        , mc.even_cod
        , mc.dt_pag
        , mc.hrs
        , mc.qte
        , mc.vlr
     from dda_bi.fat_recursos_humanos frh
        , dda_rh.movimentos_calculados mc
    where 1 = 1
      and frh.dpro_id = mc.remp_chapa
      and frh.dtpmov_id = 5 --total de funcionarios
      and frh.dt_id = to_char(mc.dt_comp, 'YYYYMM')
      and to_char(mc.dt_comp, 'rrrr') = p_ano
      and to_char(mc.dt_comp, 'mm')   >= p_mes
      -- FILTRAS APENAS OS EVENTOS PARA CONTROLAR HORA EXTRA E CRUZAR COM O PONTO
/*         HORAS EXTRAS COM ACRESCIMO DE 50%
           HORAS EXTRAS COM ACRESCIMO DE 100%
           REPOUSO SOBRE AS HORAS EXTRAS*/
      and mc.even_cod in (24,25,26);
      


select * from dda_bi.fat_movimentos_calculados where dpro_id = 2022520

 select * from dda_bi.dim_empresas

-- possiveis eventos para levar para a fato movimentos calculados
select * from dda_rh.eventos where cod in (24,25,26,842,2250,3732,1,202)/*and finalidade like 'LIQ%'*/ order by cod 

-- adicionais para o relatorio de estrutura remuneratoria para o numero de empregados com adicionais
select * from dda_rh.eventos where cod in (806,807,825,834,836,847,961,888,841,845,850,853,854,856,857,859,863,865)

-- eventos a serem considerados para verificar se passou ou nao da faixa de valores dos cargos,
-- segundo email da Kazuko
select * from dda_rh.eventos where cod in (840,883,863,938)



-- designacoes para avaliacao de onde a pessoa esta lotada, independente do cargo atual
-- traz o cargo real
-- teoricamente nao precisa construir dimensao pois as informações estao na dim_cargos, seria somente levar o registro da dda_designacoes para a fato e criar a fk.
select * from dda_rh.reg_designacoes rd,dda_rh.pessoas_fisicas pf, dda_rh.cargos ca
where  rd.remp_chapa = pf.numero
--and   nome_completo like 'LUCIANA%CEOLIN'--'JULIANO%COLOMBO'
and rd.car_cod = ca.cod
--and DT_FIM_VIG is null
and rd.remp_chapa = 28422
order by DT_INI_VIG desc



-- query para encontrar Número de empregados extra quadro -  21 contra 22 do relatorio

select * from dda_rh.reg_designacoes rd,dda_rh.pessoas_fisicas pf, dda_rh.cargos ca
where  rd.remp_chapa = pf.numero
--and   nome_completo like 'LUCIANA%CEOLIN'--'JULIANO%COLOMBO'
and rd.car_cod = ca.cod
--and DT_FIM_VIG is null
and rd.car_cod<5000
--and rd.remp_chapa = 28422
order by DT_INI_VIG desc



-- ligacao do campo de car_cod da designacoes na fat_recursos_humanos
-- funciona so isso? considerar a data na carga da fato para garantir a alocacao correta em um eventual reprocessamento?
select rd.car_cod from dda_rh.reg_designacoes rd, fat_recursos_humanos rh1
where rd.remp_chapa = rh1.dpro_id
and remp_chapa = 28422


select * from dda_rh.reg_designacoes
where remp_chapa = 175331--28422

select * from dda_rh.cargos where cod = 9506--9511

-- verificar se é esse trecho da package de recursos humanos que popula o cargao atual de acordo coma data
Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u
               Where u.remp_chapa = emprg.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)


-- salarios

select * from dda_rh.REG_SALARIOS t where remp_chapa = 175331



-- faixas salariais
select * from dda_rh.faixas_salariais where 

select distinct /*tsal_*/cod from dda_rh.faixas_salariais

-- traz os cargos e pessoas
select * 
from dda_rh.reg_cargos rc, dda_rh.cargos cc, dda_rh.pessoas_fisicas pf
where rc.car_cod = cc.cod
and   rc.remp_chapa = pf.numero
--and   nome_completo like 'LIZIANE NOLASCO%'-- 'JULIANO%COLOMBO'--'LUCIANA%CEOLIN'--'PEDRO%MOSSMANN'----
order by DT_ULT_ATLZ desc

-- pessoas fisicas e salarios
select * from dda_rh.PESSOAS_FISICAS t1, dda_rh.reg_salarios s
where t1.numero = s.remp_chapa
and nome like 'LIZIANE NOLASCO%'-- 'JUCIMARA%'
order by rcar_dt_mov desc

-- funcionario, salario e eventos
select remp_emp_cod, remp_chapa, even_cod, e.finalidade, dt_comp, dt_pag, hrs,qte,vlr
from dda_rh.movimentos_calculados mc, dda_rh.EVENTOS e
where mc.even_cod = e.cod
and remp_chapa = 2022510--175331
and dt_pag is not null
--and Extract(year from dt_pag)||Extract(Month from dt_pag) = '20173'
--and remp_chapa
--and even_cod = '840'
--and even_cod in (840,883,863,938)
order by dt_pag desc

select * from dda_rh.eventos
where finalidade like '%SERVICO%'

select * from dda_bi.fat_recursos_humanos

-- carga horaria dos cargos

select * from dda_rh.reg_cargas_horarias_cargo rch, dda_rh.cargos c
where rch.car_cod = c.cod
--and dt_ativacao is not null
--and dt_desativacao is null
and carga_horaria <> '1,00'




-- horarios
select * from dda_rh.horarios

-- composicao dos horarios
select * from dda_rh.composicao_horarios

-- horarios funcionarios
select * from dda_rh.reg_horarios-- where remp_chapa = 181595

-- carga horaria das pessoas????
select *--nome, rh.hor_dt_ini_vig, /*minutos_jornada,*/ hrs_teor_mes, hr_extenso
from /*dda_rh.composicao_horarios ch,*/ dda_rh.reg_horarios rh, dda_rh.pessoas_fisicas pf, dda_rh.horarios h
where rh.remp_chapa = pf.numero
--and   ch.hor_cod = rh.hor_cod
and rh.hor_cod = h.cod
--and rh.remp_emp_cod = pf.
and pf.numero = 2014660--106038--175331--181595
order by rh.hor_dt_ini_vig desc 


select * from dda_rh.reg_empregos where chapa = 106038--181595

select * from fat_recursos_humanos



-- 5 linhas
select * from fat_movimentos_calculados where dpro_id = 2014660

-- horas trabalhadas pelos funcionarios e ligacao com a fat_movimentos_calculados
select *--nome, rh.hor_dt_ini_vig, /*minutos_jornada,*/ hrs_teor_mes, hr_extenso
from dda_bi.fat_movimentos_calculados mc,dda_rh.reg_horarios rh, dda_rh.pessoas_fisicas pf, dda_rh.horarios h
where rh.remp_chapa = pf.numero
and mc.dpro_id = rh.remp_chapa
and rh.hor_cod = h.cod
and mc.demp_id = rh.remp_emp_cod
and mc.demp_id = h.emp_cod
--and rh.remp_emp_cod = pf.
and pf.numero = 2014660--106038--175331--181595
order by rh.hor_dt_ini_vig desc 



-- dimensao de tipos de movimentos
select * from dim_tipo_mov_rh;

select distinct dtpmov_id, nome 
from dda_bi.fat_recursos_humanos rh1, dim_profissionais p
where rh1.dpro_id = p.matricula
and dpro_id = 175331

select * from dim_profissionais

-- encontrar o intervalo de faixas salariais dos cargos
select count(*) from (
select *--nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
         --     and a.fxsl_tsal_cod = 32
         --     and a.fxsl_cod = 16
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
   and dc.emp_cod =2--in (1, 2)
 --  and dc.cod = 9505
 --  and dc.fxsl_tsal_cod = 32
 --  and dc.fxsl_cod = 16
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in ('1','5')
   and dns.dt_ini_vig = mas.dt
   AND CAR_COD = 5006
   AND DC.COD = 9523
  -- and DNS.COD = 1
--group by nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real desc

)

----2969
select count(distinct remp_chapa) from dda_rh.reg_rescisoes where mapa_cod = 4

--demissoes voluntarias de colaboradores - colcoar flag na fato ou fazer dimensao?

select count(*) from dda_rh.reg_rescisoes where mapa_cod = 4 and dt_rescisao >= '01-jan-2017' 
select * from dda_rh.reg_rescisoes where mapa_cod = 4 and dt_rescisao >= '01-jan-2017'


-- identificar as descricos dos motivos de absenteismo par aa dim_motivos_absenteismo
select *  from dda_rh.MOTIVOS_ABSENTISMOS_PUNICOES rmap, dda_rh.reg_rescisoes rr, dda_rh.pessoas_fisicas rpf
where rmap.cod = rr.MAPA_COD
and   rr.REMP_CHAPA = rpf.numero
and dt_rescisao is null
and mapa_cod = 4


--50 registros
select count(*) from dda_bi.fat_recursos_humanos rh where rh.dpro_id = 31234

-- DIM_MOTIVOS_ABSENTEISMO

select cod, descr  from dda_rh.MOTIVOS_ABSENTISMOS_PUNICOES rmap-- + linha fake para fk na fato, dda_rh.reg_rescisoes rr
--where rmap.cod = rr.MAPA_COD
--and mapa_cod = 4
order by cod

-- ligar a dimensao motivos_absenteismo na fat_recursos_humanos

select *  
from /*dda_rh.MOTIVOS_ABSENTISMOS_PUNICOES rmap,*/ dda_rh.reg_rescisoes rr, dda_bi.fat_recursos_humanos frh
where frh.dpro_id = rr.REMP_CHAPA(+) 
--and    rmap.cod = rr.MAPA_COD
--and mapa_cod = 4
and frh.dpro_id = 31234
--and dt_rescisao is null


-- carga da dimensao dim_motivos_saida com SCD2

select count(*) into v_vazio from DIM_MOTIVOS_FALTA;
if v_vazio = 0 then
INSERT into p_dim(P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA) values(0,0,'0','31-12-2999','31-12-2999');
end if;

MERGE INTO DIM_MOTIVOS_FALTAS p
USING ( SELECT DECODE(s.COD_OPERACAO,1,-6789,m.ID) as ID_REQ,
                   ID,
                   COD,
                   DESCRICAO
                   /*PRODUCT_ID,
                   PRODUCT_CATEGORY_ID,
                   PRODUCT_NAME,
                   PRODUCT_DESCRIPTION,
                   PRICE,
                   PRICE_EFFECTIVE_DATE,
                   LAST_MODIFIED_DATE,
                   CREATED_DATE,
                   m.scd_row_type_id*/
              FROM    (SELECT DP.ID,
                              SP.COD,
                              SP.DESCRICAO,/*dp.product_sid,
                              sp.PRODUCT_ID,
                              sp.PRODUCT_CATEGORY_ID,
                              sp.PRODUCT_NAME,
                              sp.PRODUCT_DESCRIPTION,
                              sp.PRICE,
                              sp.PRICE_EFFECTIVE_DATE,
                              sp.LAST_MODIFIED_DATE,
                              sp.CREATED_DATE,*/
                              CASE
                                 WHEN DP.COD IS NULL
                                 THEN
                                    1
                                 WHEN (DP.DESCRICAO != SP.DESCRICAO/*dp.product_category_id !=
                                          sp.product_category_id
                                       OR dp.product_name != sp.product_name
                                       OR DP.PRODUCT_DESCRIPTION !=
                                             sp.product_description
                                       OR dp.price != sp.price
                                       OR dp.price_effective_date !=
                                             sp.price_effective_date*/)
                                 THEN
                                    2
                                 ELSE
                                    0
                              END
                                 AS COD_OPERACAO
                         FROM    DDA_RH.MOTIVOS_ABSENTEISMOS_PUNICOES/*stg_product*/ sp -- TROCAR POR PARAMETRO
                              LEFT JOIN
                                 DDA_BI.DIM_MOTIVOS_FALTAS/*Dim_product*/ dp
                              ON (SP.COD = DP.COD and  dp.FLAG_ATUAL/*is_current_row*/ = 'S ')
                     ) m
                   JOIN  (select 1 AS COD_OPERACAO FROM DUAL UNION SELECT 2 FROm dual)
 /*scd_row_type*/ s
                   ON (s.COD_OPERACAO <= m.COD_OPERACAO)
                   ) mp
        ON  (p.ID = mp.ID_REQ)
when matched then
   update set P.DT_FIM_VIGENCIA = SYSDATE, FLAG_ATUAL = 'N'/*, updated_date = sysdate*/
when NOT matched then
insert (P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA)
 values (POPULA_DIMS_SEQ.nextval,mp.COD,mp.DESCRICAO,sysdate, SYSDATE);
  commit;


-- traz os admitidos por substituicao juntamente com a descricao da tipo_requisicoes

SELECT UNID_ORGANIZ.UORG_COD / 100,
       REG_CARGOS.CAR_COD,
       REG_EMPREGOS.CHAPA,
       DOCS.COD,
       UNID_NEGOCIO.DESCR,
       REG_EMPREGOS.DT_ADMISSAO,
       REG_EMPREGOS.DT_RESCISAO,
       REG_FILIAIS.FIL_COD,
       UNID_ORGANIZ.FONE,
       CARGOS.NOME,
       PF.NOME,
       UNID_ORGANIZ.NOME,
       EMPRESAS.NOME_REDUZ,
       REG_CARGOS.NR_DOC,
       REG_UNIORGS.NR_DOC,
       FILIAIS.RAZAO_SOCIAL,
       UNI.UORG_COD,
       REG_UNIORGS.UORG_COD,
       dt.descricao,
       (TO_NUMBER(TO_CHAR(REG_EMPREGOS.DT_ADMISSAO, 'MM')))--,
 --      SUM(REG_SALARIOS.VLR_REMUNERACAO),
 --      SUM(REG_SALARIOS.VLR)
  FROM DDA_RH.CARGOS                   CARGOS,
       DDA_RH.DOCUMENTOS               DOCS,
       DDA_RH.EMPRESAS                 EMPRESAS,
       DDA_RH.FILIAIS                  FILIAIS,
       DDA_RH.PESSOAS_FISICAS          PF,
       DDA_RH.REG_CARGOS               REG_CARGOS,
       DDA_RH.REG_EMPREGOS             REG_EMPREGOS,
       DDA_RH.REG_SALARIOS             REG_SALARIOS,
       DDA_RH.REG_UNIORGS              REG_UNIORGS,
       DDA_RH.UNIDADES_NEGOCIO         UNID_NEGOCIO,
       DDA_RH.UNIDADES_ORGANIZACIONAIS UNID_ORGANIZ,
       DDA_RH.REG_UNIORGS              UNI,
       DDA_RH.REG_FILIAIS              REG_FILIAIS,
       dda_rh.requisicoes              dr ,
       dda_rh.tipo_requisicoes         dt
 WHERE ((CARGOS.EMP_COD = REG_CARGOS.CAR_EMP_COD AND
       CARGOS.COD = REG_CARGOS.CAR_COD) AND (EMPRESAS.COD = FILIAIS.EMP_COD) AND
       (EMPRESAS.COD = REG_EMPREGOS.EMP_COD) AND
       (FILIAIS.COD = REG_FILIAIS.FIL_COD AND
       FILIAIS.EMP_COD = REG_FILIAIS.FIL_EMP_COD) AND
       (PF.NUMERO = DOCS.PFIS_NUMERO(+)) AND
       (PF.NUMERO = REG_EMPREGOS.PFIS_NUMERO) AND
       (REG_EMPREGOS.EMP_COD = UNI.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = UNI.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_FILIAIS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_FILIAIS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_CARGOS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_CARGOS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_SALARIOS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_SALARIOS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_UNIORGS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_UNIORGS.REMP_CHAPA) AND
       (UNID_NEGOCIO.COD = UNID_ORGANIZ.UNEG_COD) AND
       (REG_UNIORGS.UORG_COD = UNID_ORGANIZ.COD))
   AND (UNID_ORGANIZ.EMP_COD = REG_EMPREGOS.EMP_COD)
   AND (REG_EMPREGOS.VINC_COD <> 9)
   AND (DOCS.TDOC_COD(+) = 7)
   AND (REG_SALARIOS.MMOV_COD = 1)
   AND (REG_CARGOS.MMOV_COD = 1 AND CARGOS.EMP_COD = REG_EMPREGOS.EMP_COD)
   AND (REG_UNIORGS.MMOV_COD = 1 AND UNID_ORGANIZ.EMP_COD IN ((1)))
   AND (REG_EMPREGOS.DT_RESCISAO >= '01-01-2015')--BETWEEN :"data inicio admissão" AND
   --    :"data fim admissão")
   AND CHAPA = 265209
   and dr.tpre_cod = dt.cod
   and dr.remp_chapa_subs = PF.numero
   AND UNI.DT_MOV IN
       (SELECT MAX(HH.DT_MOV)
          FROM DDA_RH.REG_UNIORGS HH
         WHERE HH.REMP_EMP_COD = UNI.REMP_EMP_COD
           AND HH.REMP_CHAPA = UNI.REMP_CHAPA
           AND UNI.REMP_EMP_COD > 0
           AND UNI.REMP_CHAPA > 0
         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
   AND REG_FILIAIS.DT_MOV IN
       (SELECT MAX(HH.DT_MOV)
          FROM DDA_RH.REG_FILIAIS HH
         WHERE HH.REMP_EMP_COD = REG_FILIAIS.REMP_EMP_COD
           AND HH.REMP_CHAPA = REG_FILIAIS.REMP_CHAPA
         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
/* GROUP BY UNID_ORGANIZ.UORG_COD / 100,
          REG_CARGOS.CAR_COD,
          REG_EMPREGOS.CHAPA,
          DOCS.COD,
          UNID_NEGOCIO.DESCR,
          REG_EMPREGOS.DT_ADMISSAO,
          REG_EMPREGOS.DT_RESCISAO,
          REG_FILIAIS.FIL_COD,
          UNID_ORGANIZ.FONE,
          CARGOS.NOME,
          PF.NOME,
          UNID_ORGANIZ.NOME,
          EMPRESAS.NOME_REDUZ,
          REG_CARGOS.NR_DOC,
          REG_UNIORGS.NR_DOC,
          FILIAIS.RAZAO_SOCIAL,
          UNI.UORG_COD,
          REG_UNIORGS.UORG_COD,
          (TO_NUMBER(TO_CHAR(REG_EMPREGOS.DT_ADMISSAO, 'MM')))*/
 ORDER BY REG_EMPREGOS.CHAPA ASC

--9 linhas
select * from dda_bi.fat_recursos_humanos frh where frh.dpro_id = 265209


-- DIM_TIPO_REQUISICOES
select * from dda_rh.tipo_requisicoes --+ linha fake

select * from dda_bi.dim_tipos_requisicoes


-- ligacao da dimensao com a fato fat_recursos_humanos

SELECT UNID_ORGANIZ.UORG_COD / 100,
       REG_CARGOS.CAR_COD,
       REG_EMPREGOS.CHAPA,
       DOCS.COD,
       UNID_NEGOCIO.DESCR,
       REG_EMPREGOS.DT_ADMISSAO,
       REG_EMPREGOS.DT_RESCISAO,
       REG_FILIAIS.FIL_COD,
       UNID_ORGANIZ.FONE,
       CARGOS.NOME,
       PF.NOME,
       UNID_ORGANIZ.NOME,
       EMPRESAS.NOME_REDUZ,
       REG_CARGOS.NR_DOC,
       REG_UNIORGS.NR_DOC,
       FILIAIS.RAZAO_SOCIAL,
       UNI.UORG_COD,
       REG_UNIORGS.UORG_COD,
       dt.descricao,
       (TO_NUMBER(TO_CHAR(REG_EMPREGOS.DT_ADMISSAO, 'MM')))--,
 --      SUM(REG_SALARIOS.VLR_REMUNERACAO),
 --      SUM(REG_SALARIOS.VLR)
  FROM DDA_RH.CARGOS                   CARGOS,
       DDA_RH.DOCUMENTOS               DOCS,
       DDA_RH.EMPRESAS                 EMPRESAS,
       DDA_RH.FILIAIS                  FILIAIS,
       DDA_RH.PESSOAS_FISICAS          PF,
       DDA_RH.REG_CARGOS               REG_CARGOS,
       DDA_RH.REG_EMPREGOS             REG_EMPREGOS,
       DDA_RH.REG_SALARIOS             REG_SALARIOS,
       DDA_RH.REG_UNIORGS              REG_UNIORGS,
       DDA_RH.UNIDADES_NEGOCIO         UNID_NEGOCIO,
       DDA_RH.UNIDADES_ORGANIZACIONAIS UNID_ORGANIZ,
       DDA_RH.REG_UNIORGS              UNI,
       DDA_RH.REG_FILIAIS              REG_FILIAIS,
       dda_rh.requisicoes              dr ,
       dda_rh.tipo_requisicoes         dt,
       dda_bi.fat_recursos_humanos     frh
 WHERE ((CARGOS.EMP_COD = REG_CARGOS.CAR_EMP_COD AND
       CARGOS.COD = REG_CARGOS.CAR_COD) AND (EMPRESAS.COD = FILIAIS.EMP_COD) AND
       (EMPRESAS.COD = REG_EMPREGOS.EMP_COD) AND
       (FILIAIS.COD = REG_FILIAIS.FIL_COD AND
       FILIAIS.EMP_COD = REG_FILIAIS.FIL_EMP_COD) AND
       (PF.NUMERO = DOCS.PFIS_NUMERO(+)) AND
       (PF.NUMERO = REG_EMPREGOS.PFIS_NUMERO) AND
       (REG_EMPREGOS.EMP_COD = UNI.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = UNI.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_FILIAIS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_FILIAIS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_CARGOS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_CARGOS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_SALARIOS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_SALARIOS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_UNIORGS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_UNIORGS.REMP_CHAPA) AND
       (UNID_NEGOCIO.COD = UNID_ORGANIZ.UNEG_COD) AND
       (REG_UNIORGS.UORG_COD = UNID_ORGANIZ.COD))
   AND (UNID_ORGANIZ.EMP_COD = REG_EMPREGOS.EMP_COD)
   AND (REG_EMPREGOS.VINC_COD <> 9)
   AND (DOCS.TDOC_COD(+) = 7)
   AND (REG_SALARIOS.MMOV_COD = 1)
   AND (REG_CARGOS.MMOV_COD = 1 AND CARGOS.EMP_COD = REG_EMPREGOS.EMP_COD)
   AND (REG_UNIORGS.MMOV_COD = 1 AND UNID_ORGANIZ.EMP_COD IN ((1)))
   AND (REG_EMPREGOS.DT_RESCISAO >= '01-01-2015')--BETWEEN :"data inicio admissão" AND
   --    :"data fim admissão")
   AND CHAPA = 265209
   and dr.tpre_cod = dt.cod
   and dr.remp_chapa_subs = PF.numero
   and dr.remp_chapa_subs = frh.dpro_id 
   AND UNI.DT_MOV IN
       (SELECT MAX(HH.DT_MOV)
          FROM DDA_RH.REG_UNIORGS HH
         WHERE HH.REMP_EMP_COD = UNI.REMP_EMP_COD
           AND HH.REMP_CHAPA = UNI.REMP_CHAPA
           AND UNI.REMP_EMP_COD > 0
           AND UNI.REMP_CHAPA > 0
         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
   AND REG_FILIAIS.DT_MOV IN
       (SELECT MAX(HH.DT_MOV)
          FROM DDA_RH.REG_FILIAIS HH
         WHERE HH.REMP_EMP_COD = REG_FILIAIS.REMP_EMP_COD
           AND HH.REMP_CHAPA = REG_FILIAIS.REMP_CHAPA
         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
/* GROUP BY UNID_ORGANIZ.UORG_COD / 100,
          REG_CARGOS.CAR_COD,
          REG_EMPREGOS.CHAPA,
          DOCS.COD,
          UNID_NEGOCIO.DESCR,
          REG_EMPREGOS.DT_ADMISSAO,
          REG_EMPREGOS.DT_RESCISAO,
          REG_FILIAIS.FIL_COD,
          UNID_ORGANIZ.FONE,
          CARGOS.NOME,
          PF.NOME,
          UNID_ORGANIZ.NOME,
          EMPRESAS.NOME_REDUZ,
          REG_CARGOS.NR_DOC,
          REG_UNIORGS.NR_DOC,
          FILIAIS.RAZAO_SOCIAL,
          UNI.UORG_COD,
          REG_UNIORGS.UORG_COD,
          (TO_NUMBER(TO_CHAR(REG_EMPREGOS.DT_ADMISSAO, 'MM')))*/
 ORDER BY REG_EMPREGOS.CHAPA ASC
 
 ---carga da dimensão com SCD2
 
select count(*) into v_vazio from DIM_TIPOS_REQUISICOES;
if v_vazio = 0 then
INSERT into p_dim(P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA) values(0,0,'0','31-12-2999','31-12-2999');
end if;
 
MERGE INTO DIM_TIPOS_REQUISICOES p
USING ( SELECT DECODE(s.COD_OPERACAO,1,-6789,m.ID) as ID_REQ,
                   ID,
                   COD,
                   DESCRICAO
                   /*PRODUCT_ID,
                   PRODUCT_CATEGORY_ID,
                   PRODUCT_NAME,
                   PRODUCT_DESCRIPTION,
                   PRICE,
                   PRICE_EFFECTIVE_DATE,
                   LAST_MODIFIED_DATE,
                   CREATED_DATE,
                   m.scd_row_type_id*/
              FROM    (SELECT DP.ID,
                              SP.COD,
                              SP.DESCRICAO,/*dp.product_sid,
                              sp.PRODUCT_ID,
                              sp.PRODUCT_CATEGORY_ID,
                              sp.PRODUCT_NAME,
                              sp.PRODUCT_DESCRIPTION,
                              sp.PRICE,
                              sp.PRICE_EFFECTIVE_DATE,
                              sp.LAST_MODIFIED_DATE,
                              sp.CREATED_DATE,*/
                              CASE
                                 WHEN DP.COD IS NULL
                                 THEN
                                    1
                                 WHEN (DP.DESCRICAO != SP.DESCRICAO/*dp.product_category_id !=
                                          sp.product_category_id
                                       OR dp.product_name != sp.product_name
                                       OR DP.PRODUCT_DESCRIPTION !=
                                             sp.product_description
                                       OR dp.price != sp.price
                                       OR dp.price_effective_date !=
                                             sp.price_effective_date*/)
                                 THEN
                                    2
                                 ELSE
                                    0
                              END
                                 AS COD_OPERACAO
                         FROM    DDA_RH.TIPO_REQUISICOES/*stg_product*/ sp -- TROCAR POR PARAMETRO
                              LEFT JOIN
                                 DDA_BI.DIM_TIPOS_REQUISICOES/*Dim_product*/ dp
                              ON (SP.COD = DP.COD and  dp.FLAG_ATUAL/*is_current_row*/ = 'S ')
                     ) m
                   JOIN  (select 1 AS COD_OPERACAO FROM DUAL UNION SELECT 2 FROm dual)
 /*scd_row_type*/ s
                   ON (s.COD_OPERACAO <= m.COD_OPERACAO)
                   ) mp
        ON  (p.ID = mp.ID_REQ)
when matched then
   update set P.DT_FIM_VIGENCIA = SYSDATE, FLAG_ATUAL = 'N'/*, updated_date = sysdate*/
when NOT matched then
insert (P.ID,P.COD, P.DESCRICAO, P.DT_INI_VIGENCIA, P.DT_FIM_VIGENCIA)
 values (POPULA_DIMS_SEQ.nextval,mp.COD,mp.DESCRICAO,sysdate, SYSDATE);
  commit;
 
 
 -- query flag admitidos por substituicao Kazuko OK, so colocar na fato

Select 'Admissão' tipo_mov,                     
               u.remp_chapa remp_chapa,                     
               u.dt_mov dt_mov ,
               decode(chapa, null, 'N','S') FLG_SUBSTITUICAO    
        From dda_rh.reg_uniorgs u ,
        
        (select distinct chapa from (
SELECT 
       REG_EMPREGOS.CHAPA as chapa
     
  FROM DDA_RH.CARGOS                   CARGOS,
       DDA_RH.DOCUMENTOS               DOCS,
       DDA_RH.EMPRESAS                 EMPRESAS,
       DDA_RH.FILIAIS                  FILIAIS,
       DDA_RH.PESSOAS_FISICAS          PF,
       DDA_RH.REG_CARGOS               REG_CARGOS,
       DDA_RH.REG_EMPREGOS             REG_EMPREGOS,
       DDA_RH.REG_SALARIOS             REG_SALARIOS,
       DDA_RH.REG_UNIORGS              REG_UNIORGS,
       DDA_RH.UNIDADES_NEGOCIO         UNID_NEGOCIO,
       DDA_RH.UNIDADES_ORGANIZACIONAIS UNID_ORGANIZ,
       DDA_RH.REG_UNIORGS              UNI,
       DDA_RH.REG_FILIAIS              REG_FILIAIS
 WHERE ((CARGOS.EMP_COD = REG_CARGOS.CAR_EMP_COD AND
       CARGOS.COD = REG_CARGOS.CAR_COD) AND (EMPRESAS.COD = FILIAIS.EMP_COD) AND
       (EMPRESAS.COD = REG_EMPREGOS.EMP_COD) AND
       (FILIAIS.COD = REG_FILIAIS.FIL_COD AND
       FILIAIS.EMP_COD = REG_FILIAIS.FIL_EMP_COD) AND
       (PF.NUMERO = DOCS.PFIS_NUMERO(+)) AND
       (PF.NUMERO = REG_EMPREGOS.PFIS_NUMERO) AND
       (REG_EMPREGOS.EMP_COD = UNI.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = UNI.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_FILIAIS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_FILIAIS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_CARGOS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_CARGOS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_SALARIOS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_SALARIOS.REMP_CHAPA) AND
       (REG_EMPREGOS.EMP_COD = REG_UNIORGS.REMP_EMP_COD AND
       REG_EMPREGOS.CHAPA = REG_UNIORGS.REMP_CHAPA) AND
       (UNID_NEGOCIO.COD = UNID_ORGANIZ.UNEG_COD) AND
       (REG_UNIORGS.UORG_COD = UNID_ORGANIZ.COD))
   AND (UNID_ORGANIZ.EMP_COD = REG_EMPREGOS.EMP_COD)
   AND (REG_EMPREGOS.VINC_COD <> 9)
   AND (DOCS.TDOC_COD(+) = 7)
   AND (REG_SALARIOS.MMOV_COD = 1)
   AND (REG_CARGOS.MMOV_COD = 1 AND CARGOS.EMP_COD = REG_EMPREGOS.EMP_COD)
 --  AND (REG_UNIORGS.MMOV_COD = 1 AND UNID_ORGANIZ.EMP_COD IN ((1)))
   AND (REG_EMPREGOS.DT_RESCISAO >= '01-01-1900')--BETWEEN :"data inicio admissão" AND

   AND UNI.DT_MOV IN
       (SELECT MAX(HH.DT_MOV)
          FROM DDA_RH.REG_UNIORGS HH
         WHERE HH.REMP_EMP_COD = UNI.REMP_EMP_COD
           AND HH.REMP_CHAPA = UNI.REMP_CHAPA
           AND UNI.REMP_EMP_COD > 0
           AND UNI.REMP_CHAPA > 0
         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
   AND REG_FILIAIS.DT_MOV IN
       (SELECT MAX(HH.DT_MOV)
          FROM DDA_RH.REG_FILIAIS HH
         WHERE HH.REMP_EMP_COD = REG_FILIAIS.REMP_EMP_COD
           AND HH.REMP_CHAPA = REG_FILIAIS.REMP_CHAPA
         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)

 ORDER BY REG_EMPREGOS.CHAPA ASC
 )) SUBS
                      
        Where u.dt_mov = (Select MIN(uni.dt_mov)                        
                          From dda_rh.reg_uniorgs uni                       
                          Where uni.remp_chapa = u.remp_chapa)                       
        and u.mmov_cod = 1  
        and  u.remp_chapa = SUBS.chapa(+)
        --and chapa is not null

 
 
 

-- ADMITIDOS  - carga da fat_recursos_humanos

Select 'Entrada' TIPO,             
       uniorg2.tipo_mov TIPO_MOV,             
       emprg.chapa CHAPA,             
       nvl(dcarg.id, -1) DCAR_ID,             
       uniorg.uorg_cod cct,             
       nvl(demp.id, -1) DEMP_ID,             
       nvl(dt.id, -1) DT_ID,             
       1 NUM_COLABORADORES,             
       0 Carga_Horaria,             
       uniorg.NR_DOC        
From   dda_rh.reg_empregos emprg,             
       dda_rh.reg_uniorgs uniorg,             
       DDA_BI.profissionais_vw vpro,             
       DDA_BI.ctb_centros_custos_vw cct,             
       dda_rh.reg_cargos rcarg,             
       DDA_BI.dim_empresas demp,             
       DDA_BI.dim_profissionais dpro,             
       DDA_BI.dim_cargos dcarg,             
       DDA_BI.dim_tempo dt,             
       DDA_BI.dim_centros_resp_lotacao dcr,             
       grupos_pessoas gps,             
       (Select 'Admissão' tipo_mov,                     
               u.remp_chapa remp_chapa,                     
               u.dt_mov dt_mov                
        From dda_rh.reg_uniorgs u               
        Where u.dt_mov = (Select MIN(uni.dt_mov)                        
                          From dda_rh.reg_uniorgs uni                       
                          Where uni.remp_chapa = u.remp_chapa)                       
        and u.mmov_cod = 1                
   
        --              
        Union              
        -- Movimentação Interna              
        Select 'Mov. Interna Admissão' tipo_mov,                     
               u.remp_chapa remp_chapa,                     
               u.dt_mov dt_mov                
        From dda_rh.reg_uniorgs u               
        Where u.dt_mov NOT IN  (Select MIN(uni.dt_mov)                        
                                From dda_rh.reg_uniorgs uni                       
                                Where uni.remp_chapa = u.remp_chapa)                           
                                Union              
                                -- Transferencia entre casas              
                                Select 'Transferencia' tipo_mov,                     
                                       u.remp_chapa remp_chapa,                     
                                       u.dt_mov dt_mov                
                                From dda_rh.reg_uniorgs u               
                                Where u.dt_mov = (Select MIN(uni.dt_mov)                        
                                                  From dda_rh.reg_uniorgs uni                       
                                                  Where uni.remp_chapa = u.remp_chapa)                 
                                                  and u.mmov_cod = 7     ) uniorg2       
Where emprg.chapa = vpro.matricula         
and emprg.emp_cod = gps.codigo_universal         
and vpro.cct_codigo = cct.codigo         
and vpro.gps_codigo = demp.gps_codigo         
and dpro.matricula = vpro.matricula         
and vpro.matricula = rcarg.remp_chapa         
and cct.emp_cres_id = dcr.id(+)         
and dcarg.cod = rcarg.car_cod         
and rcarg.car_emp_cod = emprg.emp_cod         
and dcarg.emp_cod = emprg.emp_cod         
and gps.idc_sistema_fiergs = 'S'         
and demp.id = gps.codigo         
and uniorg.remp_chapa = uniorg2.remp_chapa         
and uniorg.dt_mov = uniorg2.dt_mov         
and cct.ano = dt.ano         
--and &p_ano = dt.ano         
--and &p_mes = dt.mes         
and emprg.chapa = uniorg.remp_chapa        
and rcarg.dt_mov IN(Select MAX(u.dt_mov)                
                    From dda_rh.reg_cargos u               
                    Where u.remp_chapa = emprg.chapa                 
                    --and to_char(u.dt_mov, 'rrrrmm') <=  lpad(&p_ano, 4, 0) || lpad(&p_mes, 2, 0))         
                    --and to_char(uniorg.dt_mov, 'rrrrmm') = lpad(&p_ano, 4, 0) || lpad(&p_mes, 2, 0)         
                    --and to_char(uniorg2.dt_mov, 'rrrrmm') = lpad(&p_ano, 4, 0) || lpad(&p_mes, 2, 0)                
                    AND emprg.chapa = 2022520);--2018770);            



-- trazer as faixas salariais para unir com a fato rh
--traz as faixas de valores lado a lado 




-- traz os cargos e faixas salariais
select menor.nome, menor.vlr_sal_real, maior.vlr_sal_real from
(select nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod cod_cargo, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr--, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
         --     and a.fxsl_tsal_cod = 32
         --     and a.fxsl_cod = 16
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
   and dc.emp_cod =1--in (1 sesi, 2 senai)
 --  and dc.cod = 9505
 --  and dc.fxsl_tsal_cod = 32
 --  and dc.fxsl_cod = 16
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in ('1'/*,'5'*/)
   and dns.dt_ini_vig = mas.dt
--   AND CAR_COD = 5006
--   AND DC.COD = 9523
   and dc.dt_desativacao is null
  -- and DNS.COD = 1
--group by nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real, dc.cod desc
)menor,

(select nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod cod_cargo, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr--, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
         --     and a.fxsl_tsal_cod = 32
         --     and a.fxsl_cod = 16
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
   and dc.emp_cod =1--in (1 sesi, 2 senai)
 --  and dc.cod = 9505
 --  and dc.fxsl_tsal_cod = 32
 --  and dc.fxsl_cod = 16
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in (/*'1',*/'5')
   and dns.dt_ini_vig = mas.dt
--   AND CAR_COD = 5006
--   AND DC.COD = 9523
   and dc.dt_desativacao is null
  -- and DNS.COD = 1
--group by nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real, dc.cod desc
)maior

where menor.cod_cargo = maior.cod_cargo






-- verificar a questao da dim motivos absenteismo na fato recursos humanos, ver se vai se comportar corretamente de acordo com os registros da fato

-- fato recursos humanos so registra dados dos funcionarios ainda ativos
-- para cada movimento do rh é gerada uma linha na fato, ou seja, demissao tb gera uma linha e o num_pessoas recebe 1.
-- Logo, somente para essa linha que devo colocar o motivo da demissao. procurar no codigo da package o dql e inlcuir a regra e o campo
-- A fato gera uma linha para admissao, 1 para demissao, uma para torca de funcao e 1 por mes para contagem dos func.
-- para movimentacao 6 (alocacao) é gerada linha mas nao conta, ou seja, valor zero
-- movimentacao 5 é o total de funcionarios, linha de cada mes, 3- entrada, 1-saida e 4 e 2 - entrada e saida mov interna respect.
-- Estou achando que é melhor criar uma flag de demissao voluntaria S ou N e colocar na linha de demissao.
-- Nao tem sentido levar toda a dimensao visto que a fato gera linhas por movimento e esses movimentos nao contemplam todas
-- as linhas da dimensao. 




--query para ligar dim_situacoes_funcionais na fato recursos humanos esta na prc ins_rh_prc
--problema de performance, implementar bulk








--- flag extra cargo ja no lugar, no codigo de carga da fat_recursos_humanos

--42300
   select distinct Dprod_id, count(*) from(
   Select 'Total Funcionários' Tipo,
             '-' Tipo_2,
             emprg.chapa Dprod_Id,
             nvl(dcarg.id, 0) Dcarg_Id,
             uniorg.uorg_cod cct,
             nvl(demp.id, 0) Demp_Id,
             nvl(dt.id, 0) Dt_Id,
             1 Qtd_Colaboradores,
             vpro.hrs_teor_mes Carga_Horaria,
             case  when (dcarg.cod < 4500 and emprg.vinc_cod <>9) then 'S' else 'N' end flg_extracargo--,
             --RD.CAR_COD/*DECODE(NVL(RD.CAR_COD,0),'S','N')*/ FLG_EXTRA_CARGO
        From dda_rh.reg_empregos      emprg,
             dda_rh.reg_uniorgs       uniorg,
             profissionais_vw         vpro,
             ctb_centros_custos_vw    cct,
             dda_rh.reg_cargos        rcarg,
             dim_empresas             demp,
             dim_profissionais        dpro,
             dim_cargos               dcarg,
             dim_centros_resp_lotacao dcr,
             grupos_pessoas           gps,
             dim_tempo                dt--,
            -- DDA_RH.REG_DESIGNACOES   rdes
             /*,(SELECT REMP_CHAPA, CAR_COD 
              FROM DDA_RH.REG_DESIGNACOES
              WHERE CAR_COD <5000) RD*/
       Where emprg.chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and cct.emp_cres_id = dcr.id(+)
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and dcarg.cod = rcarg.car_cod
         and emprg.emp_cod = rcarg.car_emp_cod
         and dcarg.emp_cod = emprg.emp_cod
      -- --  AND RDES.REMP_CHAPA = DPRO.MATRICULA
       --  AND RDES.CAR_COD(+) = DCARG.COD
       ----  AND RD.CAR_COD(+) = DCARG.id
        ---- AND RD.REMP_CHAPA = VPRO.MATRICULA
         and cct.ano = dt.ano
         and dt.ano = '2017'--'2017' = dt.ano
         and dt.mes >= '01'--'01' = dt.mes
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and emprg.chapa = uniorg.remp_chapa
         and ((emprg.dt_rescisao is null and
             (to_char(emprg.dt_admissao, 'rrrrmm') <= '201701')or/*--)
            -- lpad('2017', 4, 0) || lpad('01', 2, 0))) or*/
             (to_char(emprg.dt_admissao, 'rrrrmm') <='201701')and--)
            -- lpad('2017', 4, 0) || lpad('01', 2, 0) and
             (to_char(emprg.dt_rescisao, 'rrrrmm') >= '201701')))--)--)))
            -- lpad('2017', 4, 0) || lpad('01', 2, 0)))
         and uniorg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_uniorgs u
               Where u.remp_chapa = emprg.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <='201701')--)
                   --  lpad('2017', 4, 0) || lpad('01', 2, 0))
         and rcarg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u
               Where u.remp_chapa = emprg.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <= '201701')
                 and emprg.emp_cod = 1--2
                 --and demp.codigo = 4
                 
                   --  lpad('2017', 4, 0) || lpad('01', 2, 0))
                     --*/
                     /*AND dcarg.id <4500
                  and emprg.chapa in (2429,
9881,
11665,
14435,
17515,
18449,
18490,
19380,
20290,
20605,
21342,
21474,
21792,
26751,
28142,
28217,
28237,
28780,
29190,
29613,
29820,
30286
)*/

)where flg_extracargo = 'S' --and dprod_id = 61125
group by Dprod_id
order by dprod_id



-- fazer a ligacao da dim_motivos_desligamentos nesse trecho

      select count(*) from (
      Select 'Saída' TIPO,
             uniorg2.tipo_mov TIPO_MOV,
             emprg.chapa CHAPA,
             nvl(dcarg.id, -1) DCAR_ID,
             uniorg2.uorg_cod cct,
             nvl(demp.id, -1) DEMP_ID,
             nvl(dt.id, -1) DT_ID,
             1 NUM_COLABORADORES,
             0 Carga_Horaria,
             NVL(UNIORG2.ID_MOT_DESLG,0) ID_MOTIVOS_DESLIGAMENTOS,
             UNIORG2.desc_MOT_DESLG,
             NVL(UNIORG2.ID_MOT_FALTAS,0)ID_MOTIVOS_FALTAS,
             UNIORG2.DESC_MOT_FALTAS
        From dda_rh.reg_empregos emprg,
             profissionais_vw vpro,
             ctb_centros_custos_vw cct,
             dda_rh.reg_cargos rcarg,
             dim_empresas demp,
             dim_profissionais dpro,
             dim_cargos dcarg,
             dim_centros_resp_lotacao dcr,
             grupos_pessoas gps,
             dim_tempo dt,
           --  dda_rh.tipos_desligamentos rtd,
           --  dim_motivos_desligamentos dmd,
             (Select 'Mov. Interna Saída' tipo_mov,
                     u.remp_chapa chapa,
                     u.uorg_cod uorg_cod,
                     u.dt_mov dt_mov,
                     NULL ID_MOT_DESLG,
                     NULL DESC_MOT_DESLG,
                     NULL ID_MOT_FALTAS,
                     NULL DESC_MOT_FALTAS
                From dda_rh.reg_uniorgs u,
                     (Select MAX(u1.dt_mov) dt_mov, u1.remp_chapa chapa
                        From dda_rh.reg_uniorgs u1
                       Where to_char(u1.dt_mov, 'rrrrmm') = '201701'
                          --   lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                       Group by u1.remp_chapa) dt

               Where u.remp_chapa = dt.chapa
                 and dt.dt_mov > u.dt_mov
                 and u.dt_mov =
                     (Select MAX(u2.dt_mov) dt_dt_mov
                        From dda_rh.reg_uniorgs u2,
                             (Select MAX(u1.dt_mov) dt_mov,
                                     u1.remp_chapa chapa2
                                From dda_rh.reg_uniorgs u1
                               Where to_char(u1.dt_mov, 'rrrrmm') = '201701'
                                  --   lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                               Group by u1.remp_chapa) dt
                       Where u2.remp_chapa = dt.chapa2
                         and dt.dt_mov > u2.dt_mov
                         and u2.remp_chapa = u.remp_chapa)
              --
              Union
              
               Select 'Rescisão' tipo_mov,
                     uni.remp_chapa chapa,
                     uni.uorg_cod uorg_cod,
                     e.dt_rescisao dt_mov,
                     MD.id ID_MOT_DESLG,
                     MD.DESCRICAO DESC_MOT_DESLG,
                     MF.ID ID_MOT_FALTAS,
                     MF.DESCRICAO DESC_MOT_FALTAS
                From dda_rh.reg_empregos e, 
                     dda_rh.reg_uniorgs uni, 
                     DIM_MOTIVOS_DESLIGAMENTOS MD, -- ligacao da dimensao com a reg_empregos na fato
                     dda_rh.reg_rescisoes rr,
                     dda_rh.MOTIVOS_ABSENTISMOS_PUNICOES rmap,
                     DIM_MOTIVOS_FALTAS MF         -- LIGACAO COM A FATO
               Where e.chapa = uni.remp_chapa
               AND E.TIDL_COD = MD.COD(+)
               AND RR.REMP_CHAPA(+) = e.CHAPA
               AND RR.MAPA_COD = MF.COD(+)
               AND rmap.cod(+) = rr.MAPA_COD
                 and uni.dt_mov =
                     (Select MAX(u3.dt_mov)
                        From dda_rh.reg_uniorgs u3
                       Where to_char(e.dt_rescisao, 'rrrrmm') = '201701'
                           --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                         and u3.remp_chapa = e.chapa)
              --
            /*  Select 'Rescisão' tipo_mov,
                     uni.remp_chapa chapa,
                     uni.uorg_cod uorg_cod,
                     e.dt_rescisao dt_mov,
                     MD.id,
                     MD.DESCRICAO
                From dda_rh.reg_empregos e, dda_rh.reg_uniorgs uni, DIM_MOTIVOS_DESLIGAMENTOS MD -- ligacao da dimensao com a reg_empregos na fato
               Where e.chapa = uni.remp_chapa
               AND E.TIDL_COD = MD.COD(+)
                 and uni.dt_mov =
                     (Select MAX(u3.dt_mov)
                        From dda_rh.reg_uniorgs u3
                       Where to_char(e.dt_rescisao, 'rrrrmm') = '201701'
                           --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                         and u3.remp_chapa = e.chapa)*/) uniorg2

       Where emprg.chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and cct.emp_cres_id = dcr.id(+)
         and dcarg.cod = rcarg.car_cod
         and rcarg.car_emp_cod = emprg.emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and emprg.chapa = uniorg2.chapa
         and cct.ano = dt.ano
        -- and rtd.cod (+) = emprg.tidl_cod
        -- and emprg.tidl_cod = dmd.cod (+)
         and dt.ano = '2017'--p_ano = dt.ano
         and dt.mes = '01'--pc_mes = dt.mes
         and rcarg.dt_mov =
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u, dda_rh.reg_empregos e
               Where u.remp_chapa = e.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <= '201701'
                  --   lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                 and e.chapa = emprg.chapa)
                 
                 );
                 
                 
-- codigo para ligar a dimensao de situacoes funcionais na fato RH
-- vai ser necessário fazer update na fato para inserir esses valores

CREATE OR REPLACE PROCEDURE INS_RH2_PRC IS



CURSOR INS_RH IS


select rsit_remp_chapa, rsit_sfun_cod, dt_ini_vig
from dda_rh.reg_afastamentos a;


TYPE INS_RH_TYPE IS TABLE OF INS_RH%ROWTYPE INDEX BY PLS_INTEGER;
L_INS_RH INS_RH_TYPE;

v_rsit_remp_chapa dda_rh.reg_afastamentos.rsit_remp_chapa%type;
v_rsit_sfun_cod   dda_rh.reg_afastamentos.rsit_sfun_cod%type;
v_dt_ini_vig      dda_rh.reg_afastamentos.dt_ini_vig%type;
V_LIMITE NUMBER:=10000;

BEGIN
  
OPEN INS_RH;
LOOP
  FETCH INS_RH BULK COLLECT  INTO L_INS_RH LIMIT V_LIMITE;
  FOR i IN 1 ..L_INS_RH.COUNT
   loop

     update FAT_RH set DSITFUNC_ID = L_INS_RH(i).rsit_sfun_cod
     where DPRO_ID = L_INS_RH(i).rsit_remp_chapa
           and dt_id = (to_char(L_INS_RH(i).dt_ini_vig,'YYYYMM'))
           and dtpmov_id =1
           and dtpmov_id <>6;


   end loop;
   
     EXIT WHEN L_INS_RH.count < V_LIMITE;

   
END LOOP;
CLOSE INS_RH;
     update  fat_rH set DSITFUNC_ID = 1 
     where DPRO_ID = v_rsit_remp_chapa
          -- and dt_id = (to_char(v_dt_ini_vig,'YYYYMM'))
           and dtpmov_id <>1; 
          -- and dtpmov_id = 5;
          
     update fat_rh set DSITFUNC_ID = 0 where DSITFUNC_ID is null;
     
     commit;
           
END INS_RH2_PRC;


-- traz o inicio e fim da vigencia da designacao, preenche o periodo entre essas duas datas

select distinct rh.dtpmov_id,rh.dpro_id, rh.dt_id, RA.DT_INI_VIG, RA.DT_FIM_VIG, /*ra*/NULOS.dt_ini_vig, /*ra*/NULOS.dt_fim_vig
              from /*&V_DESIG */dda_rh.reg_designacoes ra, fat_RH rh,(select  a.remp_chapa, dt_ini_vig, dt_fim_vig from /*&V_DESIG*/ dda_rh.reg_designacoes a
                                                         where  dt_fim_vig is null --and remp_chapa = 28422
                                                         )nulos
              where RH.DPRO_ID = nulos.remp_chapa/*(+)*/
              and   rh.dt_id >= to_char(nulos.dt_ini_vig/*(+)*/,'yyyymm')  
              AND   rh.dpro_id = ra.remp_chapa/*(+)*/      
              and   rh.dt_id >= to_char(ra.dt_ini_vig/*(+)*/,'yyyymm')
              and   rh.dt_id <= to_char(ra.dt_fim_vig/*(+)*/,'yyyymm')
              and   dtpmov_id = 5
              order by DPRO_ID,dt_id




-- traz o inicio e fim da vigencia do afastamento, preenche o periodo entre essas duas datas
select distinct rh.dtpmov_id,rh.dpro_id, rh.dt_id, RA.DT_INI_VIG, RA.DT_FIM_VIG, /*ra*/NULOS.dt_ini_vig, /*ra*/NULOS.dt_fim_vig
               from /*&V_AFAST*/dda_rh.reg_afastamentos ra, fat_RH rh,(select  a.rsit_remp_chapa, dt_ini_vig, dt_fim_vig 
                                                           from /*&V_AFAST*/dda_rh.reg_afastamentos a
                                                           where  dt_fim_vig is null
                                            )nulos
               where RH.DPRO_ID = nulos.rsit_remp_chapa/*(+)*/
               and   rh.dt_id >= to_char(nulos.dt_ini_vig/*(+)*/,'yyyymm')  
               AND   rh.dpro_id = ra.rsit_remp_chapa/*(+)*/      
               and   rh.dt_id >= to_char(ra.dt_ini_vig/*(+)*/,'yyyymm')
               and   rh.dt_id <= to_char(ra.dt_fim_vig/*(+)*/,'yyyymm')
               and   dtpmov_id = 5
               order by DPRO_ID,dt_id


-- ligacao dos afastamentos e das designacoes com a fato_rh



   --3525
   select count(*) from (
   select c.dpro_id, c.dt_id, a.rsit_remp_chapa, (nvl(a.dt_ini_vig,(select max(v.dt_ini_vig)
                                                                   from dda_rh.reg_afastamentos v
                                                                   where v.rsit_remp_chapa = c.dpro_id
                                                                   and   to_char(dt_ini_vig,'yyyymm')<= c.dt_id
                                                                   and   dt_fim_vig is null)))ini_afast, a.dt_fim_vig as fim_afast,
   b.remp_chapa,                                  (nvl(b.dt_ini_vig,(select max(d.dt_ini_vig)
                                                                   from dda_rh.reg_designacoes d
                                                                   where d.remp_chapa = c.dpro_id
                                                                   and   to_char(dt_ini_vig,'yyyymm')<= c.dt_id
                                                                   and   dt_fim_vig is null)))ini_desig, b.dt_fim_vig as fim_desig
   from dda_rh.reg_afastamentos a, dda_rh.reg_designacoes b,
   (Select  'Total Funcionários' Tipo,
             --FRH.DTPMOV_ID,
             '-' Tipo_2,
             emprg.chapa Dpro_Id,
             nvl(dcarg.id, 0) Dcarg_Id,
             uniorg.uorg_cod cct,
             nvl(demp.id, 0) Demp_Id,
             nvl(dt.id, 0) Dt_Id,
             1 Qtd_Colaboradores,
             vpro.hrs_teor_mes Carga_Horaria
        From dda_rh.reg_empregos      emprg,
             dda_rh.reg_uniorgs       uniorg,
             profissionais_vw         vpro,
             ctb_centros_custos_vw    cct,
             dda_rh.reg_cargos        rcarg,
             dim_empresas             demp,
             dim_profissionais        dpro,
             dim_cargos               dcarg,
             dim_centros_resp_lotacao dcr,
             grupos_pessoas           gps,
             dim_tempo                dt
       Where emprg.chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and cct.emp_cres_id = dcr.id(+)
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and dcarg.cod = rcarg.car_cod
         and emprg.emp_cod = rcarg.car_emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and cct.ano = dt.ano
         and /*p_ano = */dt.ano = '2017'
         and /*pc_mes = */dt.mes = '01'
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and emprg.chapa = uniorg.remp_chapa
        -- AND EMPRG.CHAPA = 184136
         and ((emprg.dt_rescisao is null and
             (to_char(emprg.dt_admissao, 'rrrrmm') <= '201701'))OR
            -- lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))) or
             (to_char(emprg.dt_admissao, 'rrrrmm') <= '201701' AND
           --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0) and
             to_char(emprg.dt_rescisao, 'rrrrmm') >= '201701'))
           --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)))
         and uniorg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_uniorgs u
               Where u.remp_chapa = emprg.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <= '201701')
                   --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
         and rcarg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u
               Where u.remp_chapa = emprg.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <= '201701' )
                  --   lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
                  )c
                  where c.dpro_id = a.rsit_remp_chapa(+)
                  and   c.dt_id   >= to_char(a.dt_ini_vig(+),'yyyymm')
                  and   c.dt_id   <= to_char(a.dt_fim_vig(+),'yyyymm')
                  and   c.dpro_id = b.remp_chapa(+)
                  and   c.dt_id   >= to_char(b.dt_ini_vig(+),'yyyymm')
                  and   c.dt_id   <= to_char(b.dt_fim_vig(+),'yyyymm')
                  and   c.dpro_id = 28422--20290
                  order by c.dt_id
      --
      Union
      --
      --114
      Select 'Entrada' TIPO,
           --  NULL,
             uniorg2.tipo_mov TIPO_MOV,
             emprg.chapa CHAPA,
             nvl(dcarg.id, -1) DCAR_ID,
             uniorg.uorg_cod cct,
             nvl(demp.id, -1) DEMP_ID,
             nvl(dt.id, -1) DT_ID,
             1 NUM_COLABORADORES,
             0 Carga_Horaria--,
         --    NULL,
           --  NULL,
           --  NULL,
           --  NULL
        From dda_rh.reg_empregos emprg,
             dda_rh.reg_uniorgs uniorg,
             profissionais_vw vpro,
             ctb_centros_custos_vw cct,
             dda_rh.reg_cargos rcarg,
             dim_empresas demp,
             dim_profissionais dpro,
             dim_cargos dcarg,
             dim_tempo dt,
             dim_centros_resp_lotacao dcr,
             grupos_pessoas gps,
             (Select 'Admissão' tipo_mov,
                     u.remp_chapa remp_chapa,
                     u.dt_mov dt_mov
                From dda_rh.reg_uniorgs u
               Where u.dt_mov =
                     (Select MIN(uni.dt_mov)
                        From dda_rh.reg_uniorgs uni
                       Where uni.remp_chapa = u.remp_chapa)
                       and u.mmov_cod = 1  
              --
              Union
              -- Movimentação Interna
              Select 'Mov. Interna Admissão' tipo_mov,
                     u.remp_chapa remp_chapa,
                     u.dt_mov dt_mov
                From dda_rh.reg_uniorgs u
               Where u.dt_mov NOT IN
                     (Select MIN(uni.dt_mov)
                        From dda_rh.reg_uniorgs uni
                       Where uni.remp_chapa = u.remp_chapa)
                           Union
              -- Transferencia entre casas
              Select 'Transferencia' tipo_mov,
                     u.remp_chapa remp_chapa,
                     u.dt_mov dt_mov
                From dda_rh.reg_uniorgs u
               Where u.dt_mov =
                      (Select MIN(uni.dt_mov)
                        From dda_rh.reg_uniorgs uni
                       Where uni.remp_chapa = u.remp_chapa)
                 and u.mmov_cod = 7     ) uniorg2
       Where emprg.chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and cct.emp_cres_id = dcr.id(+)
         and dcarg.cod = rcarg.car_cod
         and rcarg.car_emp_cod = emprg.emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and uniorg.remp_chapa = uniorg2.remp_chapa
         and uniorg.dt_mov = uniorg2.dt_mov
         and cct.ano = dt.ano
         and /*p_ano = */dt.ano = '2017'
         and /*pc_mes = */dt.mes = '01'
         and emprg.chapa = uniorg.remp_chapa
         and rcarg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u
               Where u.remp_chapa = emprg.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <= '201701')
                    -- lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
         and to_char(uniorg.dt_mov, 'rrrrmm') = '201701'
            -- lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
         and to_char(uniorg2.dt_mov, 'rrrrmm') = '201701'
            -- lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
      --
      Union
      --
   --   select count(*) from (
      Select 'Saída' TIPO,
           --  NULL,
             uniorg2.tipo_mov TIPO_MOV,
             emprg.chapa CHAPA,
             nvl(dcarg.id, -1) DCAR_ID,
             uniorg2.uorg_cod cct,
             nvl(demp.id, -1) DEMP_ID,
             nvl(dt.id, -1) DT_ID,
             1 NUM_COLABORADORES,
             0 Carga_Horaria--,
         --    NULL,
         --    NULL,
         --    NULL,
         --    NULL
        From dda_rh.reg_empregos emprg,
             profissionais_vw vpro,
             ctb_centros_custos_vw cct,
             dda_rh.reg_cargos rcarg,
             dim_empresas demp,
             dim_profissionais dpro,
             dim_cargos dcarg,
             dim_centros_resp_lotacao dcr,
             grupos_pessoas gps,
             dim_tempo dt,
             (Select 'Mov. Interna Saída' tipo_mov,
                     u.remp_chapa chapa,
                     u.uorg_cod uorg_cod,
                     u.dt_mov dt_mov
                From dda_rh.reg_uniorgs u,
                     (Select MAX(u1.dt_mov) dt_mov, u1.remp_chapa chapa
                        From dda_rh.reg_uniorgs u1
                       Where to_char(u1.dt_mov, 'rrrrmm') = '201701'
                          --   lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                       Group by u1.remp_chapa) dt

               Where u.remp_chapa = dt.chapa
                 and dt.dt_mov > u.dt_mov
                 and u.dt_mov =
                     (Select MAX(u2.dt_mov) dt_dt_mov
                        From dda_rh.reg_uniorgs u2,
                             (Select MAX(u1.dt_mov) dt_mov,
                                     u1.remp_chapa chapa2
                                From dda_rh.reg_uniorgs u1
                               Where to_char(u1.dt_mov, 'rrrrmm') = '201701'
                                 --    lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                               Group by u1.remp_chapa) dt
                       Where u2.remp_chapa = dt.chapa2
                         and dt.dt_mov > u2.dt_mov
                         and u2.remp_chapa = u.remp_chapa)
              --
              Union
              --
              Select 'Rescisão' tipo_mov,
                     uni.remp_chapa chapa,
                     uni.uorg_cod uorg_cod,
                     e.dt_rescisao dt_mov
                From dda_rh.reg_empregos e, dda_rh.reg_uniorgs uni
               Where e.chapa = uni.remp_chapa
                 and uni.dt_mov =
                     (Select MAX(u3.dt_mov)
                        From dda_rh.reg_uniorgs u3
                       Where to_char(e.dt_rescisao, 'rrrrmm') = '201701'
                           --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                         and u3.remp_chapa = e.chapa)) uniorg2
--)
       Where emprg.chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and cct.emp_cres_id = dcr.id(+)
         and dcarg.cod = rcarg.car_cod
         and rcarg.car_emp_cod = emprg.emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and emprg.chapa = uniorg2.chapa
         and cct.ano = dt.ano
         and /*p_ano = */dt.ano = '2017'
         and /*pc_mes = */dt.mes = '01'
         and rcarg.dt_mov =
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u, dda_rh.reg_empregos e
               Where u.remp_chapa = e.chapa
                 and to_char(u.dt_mov, 'rrrrmm') <= '201701'
                   --  lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                 and e.chapa = emprg.chapa
                 )
                 )--FIM COUNT
                 
                 
                 
/*--- adicionais em revisao com Kazuko para validar os dados ---------------------------------------------              
---select sum(total) from (

--709
select \*count(*\distinct remp_chapa\*)*\total from(
select mc.remp_emp_cod, mc.remp_chapa, even_cod, e.finalidade, dt_comp, dt_pag, hrs,qte,vlr
from dda_rh.movimentos_calculados mc, dda_rh.EVENTOS e, dda_rh.reg_cargos rc
where mc.even_cod = e.cod
and   mc.remp_chapa = rc.remp_chapa
--and remp_chapa = 175331
and dt_pag is not null
--and Extract(year from dt_pag)||Extract(Month from dt_pag) = '20173'
--and remp_chapa
--and even_cod = '840'
and even_cod in (806,807,825,834,836,847,961)
and to_char(dt_comp,'yyyymm')= '201703'
and  rc.car_cod >4500
and mc.remp_emp_cod = 2
--order by dt_pag desc
)

union all--zero
select  \*count(*\ distinct remp_chapa\*)*\ from(
select  mc.remp_emp_cod, mc.remp_chapa, even_cod, e.finalidade, dt_comp, dt_pag, hrs,qte,vlr
from dda_rh.movimentos_calculados mc, dda_rh.EVENTOS e, dda_rh.reg_cargos rc
where mc.even_cod = e.cod
and   mc.remp_chapa = rc.remp_chapa
--and remp_chapa = 175331
and dt_pag is not null
--and Extract(year from dt_pag)||Extract(Month from dt_pag) = '20173'
--and remp_chapa
--and even_cod = '840'
and even_cod = 888
and to_char(dt_comp,'yyyymm')= '201703'
and  rc.car_cod >4500
and mc.remp_emp_cod = 2
--order by dt_pag desc
)

union all

--43
select \*count(*\distinct remp_chapa\*)*\ from(
select   mc.remp_emp_cod, mc.remp_chapa, even_cod, e.finalidade, dt_comp, dt_pag, hrs,qte,vlr
from dda_rh.movimentos_calculados mc, dda_rh.EVENTOS e, dda_rh.reg_cargos rc
where mc.even_cod = e.cod
and   mc.remp_chapa = rc.remp_chapa
--and remp_chapa = 175331
and dt_pag is not null
--and Extract(year from dt_pag)||Extract(Month from dt_pag) = '20173'
--and remp_chapa
--and even_cod = '840'
and even_cod in (841,845,850,853,854,856,857,859,863,865,883,938)
and to_char(dt_comp,'yyyymm')= '201703'
and  rc.car_cod >4500
and mc.remp_emp_cod = 2
order by dt_pag desc
)
--)
)
*/


--- adicionais Final OK revisado por Kazuko ---------------------------------------------              
---select sum(total) from (


select distinct remp_chapa total
  from (select mc.remp_emp_cod,
               mc.remp_chapa,
               even_cod,
               e.finalidade,
               dt_comp,
               dt_pag,
               hrs,
               qte,
               vlr
          from dda_rh.movimentos_calculados mc,
               dda_rh.EVENTOS               e,
               dda_rh.reg_cargos            rc,
               dda_rh.reg_empregos          re
         where mc.even_cod = e.cod
           and mc.remp_chapa = rc.remp_chapa
           and mc.remp_chapa = re.chapa
           and (re.dt_rescisao is null or
               to_char(re.dt_rescisao, 'yyyymmdd') > '20170331')
           and even_cod in (806, 807, 825, 834, 836, 847, 961)
           and to_char(dt_comp, 'yyyymm') = '201703'
           and rc.car_cod >= 4500
           and mc.remp_emp_cod = 1
        
        )

union all

select distinct remp_chapa
  from (select mc.remp_emp_cod,
               mc.remp_chapa,
               even_cod,
               e.finalidade,
               dt_comp,
               dt_pag,
               hrs,
               qte,
               vlr
          from dda_rh.movimentos_calculados mc,
               dda_rh.EVENTOS               e,
               dda_rh.reg_cargos            rc,
               dda_rh.reg_empregos          re
         where mc.even_cod = e.cod
           and mc.remp_chapa = rc.remp_chapa
           and mc.remp_chapa = re.chapa
           and (re.dt_rescisao is null or
               to_char(re.dt_rescisao, 'yyyymmdd') > '20170331')
           and even_cod = 888
           and to_char(dt_comp, 'yyyymm') = '201703'
           and rc.car_cod >= 4500
           and mc.remp_emp_cod = 1)

union all

select distinct remp_chapa
  from (select mc.remp_emp_cod,
               mc.remp_chapa,
               even_cod,
               e.finalidade,
               dt_comp,
               dt_pag,
               hrs,
               qte,
               vlr
          from dda_rh.movimentos_calculados mc,
               dda_rh.EVENTOS               e,
               dda_rh.reg_cargos            rc,
               dda_rh.reg_empregos          re
         where mc.even_cod = e.cod
           and mc.remp_chapa = rc.remp_chapa
           and mc.remp_chapa = re.chapa
           and (re.dt_rescisao is null or
               to_char(re.dt_rescisao, 'yyyymmdd') > '20170331')
           and even_cod in
               (841, 845, 850, 853, 854, 856, 857, 859, 863, 865, 883, 938)
           and to_char(dt_comp, 'yyyymm') = '201703'
           and rc.car_cod >= 4500
           and mc.remp_emp_cod = 1
         order by dt_pag desc)
--)
--)



-- salarios x faixas salariais - usar para flag_dentro - funcionando, batidos valores com Kazuko
/*select count(*) from (
select remp_chapa, car_cod,faixas.nome, menor_sal, maior_sal, vlr_final from
(select \*localz,*\carg_desig.remp_chapa,nvl(busca_designados(carg_desig.remp_chapa),car_cod)car_cod,vlr_mult/h.hrs_teor_mes vlr_final, max(rh.dt_mov) 
from
(
select remp_chapa,car_cod,carga_horaria,vlr_mult, max(localz) from (
select '2' as localz,mc.remp_chapa,rc.car_cod, chc.carga_horaria,(vlr*chc.carga_horaria)vlr_mult --mc.remp_chapa, vlr 
  from --- traz uma linha por chapa, somados os valores de acordo com os eventos ---
        (select remp_chapa, sum(vlr) vlr
           from dda_rh.movimentos_calculados mc
          where even_cod in (840, 883, 863, 938)
            and to_char(dt_comp, 'yyyymmdd') = '20170331'
     --       and mc.remp_chapa = 214264\*28422\*\--2022510--*\--175331
          group by remp_chapa) mc,
       ------------------------------------------------------------------------------
       ---busca os cargos e a carga horaria do cargo---------------------------------
       dda_rh.reg_designacoes rc,
       dda_rh.reg_cargas_horarias_cargo chc,
       dda_rh.reg_empregos re
 where mc.remp_chapa = rc.remp_chapa
   and rc.car_cod = chc.car_cod
   and rc.car_emp_cod = chc.car_emp_cod
   and mc.remp_chapa = re.chapa
   and (re.dt_rescisao is null or to_char(re.dt_rescisao, 'yyyymmdd') >  '20170331')
   and rc.dt_fim_vig is null
   and rc.car_cod>4500
   and rc.remp_emp_cod = 1

-------------------------------------------------------------------------------

union

select '1' ,mc.remp_chapa,rc.car_cod,chc.carga_horaria,(vlr*chc.carga_horaria)\*,busca_designados(mc.remp_chapa)*\ --mc.remp_chapa, vlr 
  from --- traz uma linha por chapa, somados os valores de acordo com os eventos ---
        (select remp_chapa, sum(vlr) vlr
           from dda_rh.movimentos_calculados mc
          where even_cod in (840, 883, 863, 938)
            and to_char(dt_comp, 'yyyymmdd') = '20170331'
      --      and mc.remp_chapa = \*28422*\2022510----175331
          group by remp_chapa) mc,
       ------------------------------------------------------------------------------
       ---busca os cargos e a carga horaria do cargo---------------------------------
       dda_rh.reg_cargos rc,
       (select remp_chapa, max(dt_mov) max_dt_mov
          from dda_rh.reg_cargos rcg
          where to_char(dt_mov, 'yyyymmdd') <= '20170331'
         group by remp_chapa) max_cargo,
       dda_rh.reg_cargas_horarias_cargo chc,
       dda_rh.reg_empregos re
 where mc.remp_chapa = rc.remp_chapa
   and rc.car_cod = chc.car_cod
   and rc.car_emp_cod = chc.car_emp_cod
      and mc.remp_chapa = re.chapa
   and (re.dt_rescisao is null or to_char(re.dt_rescisao, 'yyyymmdd') >  '20170331')
   and rc.dt_mov = max_cargo.max_dt_mov
 --  and to_char(rc.dt_mov, 'yyyymmdd') <= '20170331'
   and rc.remp_chapa = max_cargo.remp_chapa
  and rc.car_cod >4500
   and rc.remp_emp_cod = 1
)group by remp_chapa, car_cod, carga_horaria,vlr_mult

)carg_desig,
dda_rh.reg_horarios rh, dda_rh.horarios h
where carg_desig.remp_chapa = rh.remp_chapa

and   rh.hor_cod   = h.cod
and   rh.hor_emp_cod = h.emp_cod
and   rh.dt_mov = (select max(dt_mov)  from dda_rh.reg_horarios where remp_chapa = carg_desig.remp_chapa\*214264*\ )
group by \*localz,*\carg_desig.remp_chapa,nvl(busca_designados(carg_desig.remp_chapa),car_cod),vlr_mult/h.hrs_teor_mes 
)salarios

,

(select menor.nome, menor.cod_cargo, menor.vlr_sal_real menor_sal, maior.vlr_sal_real maior_sal from
(select nome, vlr_sal_real, \*dns.dt_ini_vig,*\ tsal_cod, dc.cod cod_cargo, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr--, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
   and dc.emp_cod =1--in (1 sesi, 2 senai)
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in ('1'\*,'5'*\)
   and dns.dt_ini_vig = mas.dt
   and dc.dt_desativacao is null
group by nome, vlr_sal_real, \*dns.dt_ini_vig,*\ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real, dc.cod desc
)menor,

(select nome, vlr_sal_real, \*dns.dt_ini_vig,*\ tsal_cod, dc.cod cod_cargo, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr--, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
   and dts.cod in (30,31,32,33)---------------------------------colocado por ultimo, falta testar
   and dc.emp_cod =1--in (1 sesi, 2 senai)
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in (\*'1',*\'5')
   and dns.dt_ini_vig = mas.dt
   and dc.dt_desativacao is null
group by nome, vlr_sal_real, \*dns.dt_ini_vig,*\ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real, dc.cod desc
)maior

where menor.cod_cargo = maior.cod_cargo
order by maior.vlr_sal_real desc) faixas

where salarios.car_cod = faixas.cod_cargo
--and salarios.remp_chapa = 175579
 
) where vlr_final > maior_sal */


-- versao final 

select count(*) from (
select remp_chapa, car_cod,faixas.nome, menor_sal, maior_sal, vlr_final from
(select /*localz,*/carg_desig.remp_chapa,nvl(busca_designados(carg_desig.remp_chapa),car_cod)car_cod,/*vlr_mult/h.hrs_teor_mes vlr_final,*/round(case when carga_horaria <> 1 
                                                                                                                                         then(vlr_mult/h.hrs_teor_mes)
                                                                                                                                         else (vlr_mult/((h.hrs_teor_sem*4.5)+(h.hrs_teor_sem*4.5)/6))
                                                                                                                                         end,2)  vlr_final, max(rh.dt_mov) 
from
(
select remp_chapa,car_cod,carga_horaria,vlr_mult, max(localz) from (
select '2' as localz,mc.remp_chapa,rd.car_cod, chc.carga_horaria,(vlr*chc.carga_horaria)vlr_mult from 
(select remp_emp_cod,remp_chapa, sum(vlr) vlr
           from dda_rh.movimentos_calculados mc
          where even_cod in (840, 883, 863, 938)
            and to_char(dt_comp, 'yyyymmdd') = '20170331'
       --     and mc.remp_chapa = 214264/*28422/*/--2022510--*/--175331
          group by remp_emp_cod,remp_chapa) mc,
dda_rh.reg_cargos c,
(select remp_chapa,max(dt_mov)max_dt from dda_rh.reg_cargos group by remp_chapa)max,
dda_rh.reg_cargas_horarias_cargo chc,
dda_rh.reg_empregos re,
dda_rh.reg_designacoes rd

where mc.remp_emp_cod = c.car_emp_cod
and   mc.remp_chapa   = c.remp_chapa
and   chc.car_emp_cod = c.car_emp_cod
and   chc.car_cod     = c.car_cod
and   max.remp_chapa = mc.remp_chapa
and   re.emp_cod     = mc.remp_emp_cod
and   re.chapa       = mc.remp_chapa
and   rd.remp_emp_cod(+) = mc.remp_emp_cod
and   rd.remp_chapa(+)   = mc.remp_chapa
and   (re.dt_rescisao is null or to_char(re.dt_rescisao, 'yyyymmdd') >  '20170331')
and   c.car_cod >=4500
and   max.max_dt     = c.dt_mov
--and   c.car_emp_cod = 2
and   rd.dt_fim_vig is null

-------------------------------------------------------------------------------

union

select '1' ,mc.remp_chapa,rc.car_cod,chc.carga_horaria,(vlr*chc.carga_horaria)/*,busca_designados(mc.remp_chapa)*/ --mc.remp_chapa, vlr 
  from --- traz uma linha por chapa, somados os valores de acordo com os eventos ---
        (select remp_chapa, sum(vlr) vlr
           from dda_rh.movimentos_calculados mc
          where even_cod in (840, 883, 863, 938)
            and to_char(dt_comp, 'yyyymmdd') = '20170331'
      --      and mc.remp_chapa = /*28422*/2022510----175331
          group by remp_chapa) mc,
       ------------------------------------------------------------------------------
       ---busca os cargos e a carga horaria do cargo---------------------------------
       dda_rh.reg_cargos rc,
       (select remp_chapa, max(dt_mov) max_dt_mov
          from dda_rh.reg_cargos rcg
          where to_char(dt_mov, 'yyyymmdd') <= '20170331'
         group by remp_chapa) max_cargo,
       dda_rh.reg_cargas_horarias_cargo chc,
       dda_rh.reg_empregos re
 where mc.remp_chapa = rc.remp_chapa
   and rc.car_cod = chc.car_cod
   and rc.car_emp_cod = chc.car_emp_cod
      and mc.remp_chapa = re.chapa
   and (re.dt_rescisao is null or to_char(re.dt_rescisao, 'yyyymmdd') >  '20170331')
   and rc.dt_mov = max_cargo.max_dt_mov
 --  and to_char(rc.dt_mov, 'yyyymmdd') <= '20170331'
   and rc.remp_chapa = max_cargo.remp_chapa
  and rc.car_cod >4500
--   and rc.remp_emp_cod = 2
)group by remp_chapa, car_cod, carga_horaria,vlr_mult

)carg_desig,
dda_rh.reg_horarios rh, dda_rh.horarios h
where carg_desig.remp_chapa = rh.remp_chapa

and   rh.hor_cod   = h.cod
and   rh.hor_emp_cod = h.emp_cod
and   rh.dt_mov = (select max(dt_mov)  
                   from dda_rh.reg_horarios 
                   where remp_chapa = carg_desig.remp_chapa/*214264*/
                   AND TO_CHAR(dt_mov,'YYYYMMDD')<= '20170331')
group by /*localz,*/carg_desig.remp_chapa,nvl(busca_designados(carg_desig.remp_chapa),car_cod),round(case when carga_horaria <> 1 
                                                                                                                                         then(vlr_mult/h.hrs_teor_mes)
                                                                                                                                         else (vlr_mult/((h.hrs_teor_sem*4.5)+(h.hrs_teor_sem*4.5)/6))
                                                                                                                                         end,2) 
)salarios

,

(select menor.nome, menor.cod_cargo, menor.vlr_sal_real menor_sal, maior.vlr_sal_real maior_sal from
(select nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod cod_cargo, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr--, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
--   and dc.emp_cod =2--in (1 sesi, 2 senai)
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in ('1'/*,'5'*/)
   and dns.dt_ini_vig = mas.dt
   and dc.dt_desativacao is null
group by nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real, dc.cod desc
)menor,

(select nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod cod_cargo, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr--, max(dns.dt_ini_vig)dat
  from dda_rh.cargos            dc,
       dda_rh.tabelas_salariais dts,
       dda_rh.faixas_salariais  dfs,
       dda_rh.reg_regioes       dr1,
       dda_rh.niveis_salariais  dns
       ,(
              select b.cod, max(dt_ini_vig)dt 
              from dda_rh.niveis_salariais b, dda_rh.cargos a
              where a.fxsl_cod = b.rere_fxsl_cod
                 and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
              and b.cod in ('1','5') 
              group by b.cod ) mas
 where dc.fxsl_tsal_cod = dts.cod
   and dc.fxsl_tsal_cod = dfs.tsal_cod
   and dc.fxsl_cod = dfs.cod
   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
   and dr1.fxsl_cod = dc.fxsl_cod
   and dc.fxsl_cod = dns.rere_fxsl_cod
   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
   and dts.cod in (30,31,32,33)---------------------------------colocado por ultimo, falta testar
 --  and dc.emp_cod =2--in (1 sesi, 2 senai)
   and dc.emp_cod = tsal_emp_cod 
   and dc.emp_cod = dts.emp_cod
   and dts.emp_cod = dfs.Tsal_Emp_Cod
   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
   and dns.cod in (/*'1',*/'5')
   and dns.dt_ini_vig = mas.dt
   and dc.dt_desativacao is null
group by nome, vlr_sal_real, /*dns.dt_ini_vig,*/ tsal_cod, dc.cod, dns.cod, dc.descr, dts.descr, dfs.cod, dfs.descr 
order by vlr_sal_real, dc.cod desc
)maior

where menor.cod_cargo = maior.cod_cargo
order by maior.vlr_sal_real desc) faixas

where salarios.car_cod = faixas.cod_cargo
 
) where vlr_final > maior_sal 



-- identifica cargos, se tem designacoes e o que foi realmente carregado na fato

select 'desig',remp_chapa, dt_ini_vig, dt_fim_vig, car_cod/*,null*/ from dda_rh.reg_designacoes where remp_chapa in (11290)                                                    )
union                                                         
select 'cargo',remp_chapa, dt_mov, null, car_cod/*,null*/ from dda_rh.reg_cargos where remp_chapa in (11290)
union                                                      
select 'fat_rh',dpro_id,null,null, ddesig_cod/*, dt_id*/ from dda_bi.fat_recursos_humanos where dpro_id = 262463/*192031*//*197513*//*229962*/ and dtpmov_id = 5 --and dt_id = 201703



-----sessoes v$session ----------


select a.username,a.sid, a.serial#, a.status, a.schemaname, a.program, a.osuser,a.logon_time,b.sql_text
    from v$session a, v$sqlarea b
    where a.sql_address=b.address
    --and a.username='stefanini.dallalba';
    
-- identifica os motivos de movimentação---------------------------

select m.descr, c.*
  from dda_rh.reg_cargos c
     , dda_rh.motivos_movimentacao m
 where c.mmov_cod = m.cod
   and c.remp_chapa = 28419;  
   
   select * --m.descr, c.*
  from dda_rh.reg_cargos c
     , dda_rh.motivos_movimentacao m, dda_bi.fat_recursos_humanos f, dda_rh.cargos ca
 where c.mmov_cod = m.cod
 and   c.remp_chapa = f.dpro_id
 and   c.car_cod = ca.cod
 and   c.remp_emp_cod = ca.emp_cod
 and   decode(c.car_emp_cod,2,4) = f.demp_id
 and   to_char(c.dt_mov,'yyyymm') = f.dt_id
 and dtpmov_id = 5
   and c.remp_chapa = 28419;
     
-------------------------------------------------------------------------    
    
-------------package dda_bi.bi_rh_pck body Penultima --------------------

CREATE OR REPLACE Package Body Bi_RH_Pck Is
  --
  Procedure Fat_Recursos_Humanos_Prc(p_ano In Number, p_mes In Number) Is

 Cursor c_tmp_rh(pc_mes Number) Is
   Select 'Total Funcionários'               Tipo,
               '-'                          Tipo_2,
               chapa                        Dprod_Id,
               nvl(dcarg.id, 0)             Dcarg_Id,
               uniorg.uorg_cod              cct,
               nvl(demp.id, 0)              Demp_Id,
               nvl(dt.id, 0)                Dt_Id,
               1                            Qtd_Colaboradores,
               vpro.hrs_teor_mes            Carga_Horaria,
               0                            dsitfunc_id,
               0                            id_mot_deslg,
               0                            id_mot_faltas,
               -- flag para mostrar os extra-cargo projeto LDO-RH Alexandre 20170620 OK
               (case
                 when (dcarg.cod < 4500 and emprg.vinc_cod <> 9) then
                  'S'
                 else
                  'N'
               end)                          flag_extra_cargo,
               '0',
               total AS conta_func_adic,
               decode(total, null, 'N', 'S')                              flag_adicionais,
               menor_faixa_sal,
               maior_faixa_sal,
               (case 
                  when (salario > maior_faixa_sal) then 'S' else 'N' end) flag_maior_faixa,
                    /*desig_cod ddesig_id*/
         (case when desig_cod is null then 0 else dcarg.id end) desig_id
          From dda_rh.reg_empregos      emprg,
               dda_rh.reg_uniorgs       uniorg,
               profissionais_vw         vpro,
               ctb_centros_custos_vw    cct,
               dda_rh.reg_cargos        rcarg,
               dim_empresas             demp,
               dim_profissionais        dpro,
               dim_cargos               dcarg,
      --         dim_cargos               dcarg2,
               dim_centros_resp_lotacao dcr,
               grupos_pessoas           gps,
               dim_tempo                dt,
               
   ----------------------- Identifica os Adicionais ------------------------------------------------
   --- Union para agrupar de acordo com os eventos, depois somar -----------------------------------
   --- Regra de agrupamento definida pelo RH, de acordo com o relatorio da Estrutura Remuneratoria--
   
               (select remp_chapa, count(*) total
                  from (select distinct rc.remp_chapa
                          from dda_rh.reg_cargos            rc,
                               dda_rh.EVENTOS               e,
                               dda_rh.reg_empregos          re,
                               dda_rh.movimentos_calculados mc
                         where mc.even_cod = e.cod
                           and mc.remp_chapa = rc.remp_chapa
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               re.dt_rescisao >
                               last_day(to_char('01/' || pc_mes || '/' ||
                                                 p_ano))
                               )
                           and even_cod in (806, 807, 825, 834, 836, 847, 961)
                           and MC.dt_comp =
                               last_day(to_char('01/' || pc_mes || '/' || p_ano))
                           and rc.car_cod >= 4500
                    
                        
                        union all
                        
                        select distinct rc.remp_chapa
                          from dda_rh.reg_cargos            rc,
                               dda_rh.EVENTOS               e,
                               dda_rh.reg_empregos          re,
                               dda_rh.movimentos_calculados mc
                         where mc.even_cod = e.cod
                           and mc.remp_chapa = rc.remp_chapa
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               re.dt_rescisao >
                               last_day(to_char('01/' || pc_mes || '/' ||
                                                 p_ano)))
                           and even_cod = 888
                           and MC.dt_comp =
                               last_day(to_char('01/' || pc_mes || '/' || p_ano))
                           and rc.car_cod >= 4500
                        --and rc.car_emp_cod = 2
                        
                        union all
                        
                        select distinct rc.remp_chapa
                          from dda_rh.reg_cargos            rc,
                               dda_rh.EVENTOS               e,
                               dda_rh.reg_empregos          re,
                               dda_rh.movimentos_calculados mc
                         where mc.even_cod = e.cod
                           and mc.remp_chapa = rc.remp_chapa
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               re.dt_rescisao >
                               last_day(to_char('01/' || pc_mes || '/' ||
                                                 p_ano)))
                           and even_cod in (841,
                                            845,
                                            850,
                                            853,
                                            854,
                                            856,
                                            857,
                                            859,
                                            863,
                                            865,
                                            883,
                                            938)
                           and mc.dt_comp =
                               last_day(to_char('01/' || pc_mes || '/' || p_ano))
                           and rc.car_cod >= 4500
                        --and rc.car_emp_cod = 2
                        )
                 group by remp_chapa) adic,
                    
   ---------------- Traz as faixas salarias e cálculos de salários para o relatório da Estrutura Remuneratória --
   -------------------------------------------------------------------------------------------------------------- 
                          
                 (
   
         select remp_chapa,
               car_cod      desig_cod,
               faixas.nome,
               menor_faixa_sal,
               maior_faixa_sal,
               salario
          from 
   ---------------- Traz os salários acrescidos dos eventos e cargas horárias do funcionário ---------
   ---------------- Cálculo baseado nas definições da Kazuko ----------------------------------------------------
          
          (select carg_desig.remp_chapa,
                       nvl(busca_designados(carg_desig.remp_chapa), car_cod) car_cod,
                       round(case
                               when carga_horaria <> 1 then
                                (vlr_mult / h.hrs_teor_mes)
                               else
                                (vlr_mult / ((h.hrs_teor_sem * 4.5) +
                                (h.hrs_teor_sem * 4.5) / 6))
                             end,
                             2) salario,
                       max(rh.dt_mov)
                  from (select remp_chapa,
                               car_cod,
                               carga_horaria,
                               vlr_mult,
                               max(localz)
                          from (select '2' as localz,
                                       mc.remp_chapa,
                                       rd.car_cod,
                                       chc.carga_horaria,
                                       (vlr * chc.carga_horaria) vlr_mult
                                  from (select remp_emp_cod,
                                               remp_chapa,
                                               sum(vlr) vlr
                                          from dda_rh.movimentos_calculados mc
                                         where even_cod in (840, 883, 863, 938)
                                           and dt_comp =
                                               last_day(to_char('01-' || pc_mes || '-' ||
                                                                p_ano))
                                         group by remp_emp_cod, remp_chapa) mc,
                                       dda_rh.reg_cargos c,
                                       (select remp_chapa, max(dt_mov) max_dt
                                          from dda_rh.reg_cargos
                                         group by remp_chapa) max,
                                       dda_rh.reg_cargas_horarias_cargo chc,
                                       dda_rh.reg_empregos re,
                                       dda_rh.reg_designacoes rd
                                
                                 where mc.remp_emp_cod = c.car_emp_cod
                                   and mc.remp_chapa = c.remp_chapa
                                   and chc.car_emp_cod = c.car_emp_cod
                                   and chc.car_cod = c.car_cod
                                   and max.remp_chapa = mc.remp_chapa
                                   and re.emp_cod = mc.remp_emp_cod
                                   and re.chapa = mc.remp_chapa
                                   and rd.remp_emp_cod(+) = mc.remp_emp_cod
                                   and rd.remp_chapa(+) = mc.remp_chapa
                                   and (re.dt_rescisao is null or
                                       re.dt_rescisao >
                                       last_day(to_char('01-' || pc_mes || '-' ||
                                                         p_ano)))
                                   and c.car_cod >= 4500
                                   and max.max_dt = c.dt_mov
                            --       and c.car_emp_cod = 1
                                   and rd.dt_fim_vig is null
                                                                
                                union
        --------- traz uma linha por chapa, somados os valores de acordo com os eventos ---
        --------- Após multiplica pela carga horária do cargo -----------------------------
        
                                select '1',
                                       mc.remp_chapa,
                                       rc.car_cod,
                                       chc.carga_horaria,
                                       (vlr * chc.carga_horaria)  
                                  from 
                                       (select remp_chapa, sum(vlr) vlr
                                          from dda_rh.movimentos_calculados mc
                                         where even_cod in (840, 883, 863, 938)
                                           and dt_comp =
                                               last_day(to_char('01-' || pc_mes || '-' ||
                                                                p_ano))
                                         group by remp_chapa) mc,
   
        ---------- busca os cargos designados e a carga horaria do cargo ---------------------------------
        
                                       dda_rh.reg_cargos rc,
                                       (select remp_chapa,
                                               max(dt_mov) max_dt_mov
                                          from dda_rh.reg_cargos rcg
                                         where dt_mov <=
                                               last_day(to_char('01-' || pc_mes || '-' ||
                                                                p_ano))
                                         group by remp_chapa) max_cargo,
                                       dda_rh.reg_cargas_horarias_cargo chc,
                                       dda_rh.reg_empregos re
                                 where mc.remp_chapa = rc.remp_chapa
                                   and rc.car_cod = chc.car_cod
                                   and rc.car_emp_cod = chc.car_emp_cod
                                   and mc.remp_chapa = re.chapa
                                   and (re.dt_rescisao is null or
                                       re.dt_rescisao >
                                       last_day(to_char('01-' || pc_mes || '-' ||
                                                         p_ano)))
                                   and rc.dt_mov = max_cargo.max_dt_mov
                                   and rc.remp_chapa = max_cargo.remp_chapa
                                   and rc.car_cod > 4500
                                --   and rc.remp_emp_cod = 1
                                )
                         group by remp_chapa, car_cod, carga_horaria, vlr_mult
                        
                        ) carg_desig,
                       dda_rh.reg_horarios rh,
                       dda_rh.horarios h
                 where carg_desig.remp_chapa = rh.remp_chapa
                      
                   and rh.hor_cod = h.cod
                   and rh.hor_emp_cod = h.emp_cod
                   and rh.dt_mov =
                       (select max(dt_mov)
                          from dda_rh.reg_horarios
                         where remp_chapa = carg_desig.remp_chapa
                           AND dt_mov <=
                               last_day(to_char('01-' || pc_mes || '-' || p_ano)))
                 group by carg_desig.remp_chapa,
                          nvl(busca_designados(carg_desig.remp_chapa),
                              car_cod),
                          round(case
                                  when carga_horaria <> 1 then
                                   (vlr_mult / h.hrs_teor_mes)
                                  else
                                   (vlr_mult / ((h.hrs_teor_sem * 4.5) +
                                   (h.hrs_teor_sem * 4.5) / 6))
                                end,
                                2)) salarios
                                
              --------- Traz as faixas salariais mínimas e máximas dos cargos --------- 
              ,
               (select menor.nome,
                       menor.cod_cargo,
                       menor.vlr_sal_real menor_faixa_sal,
                       maior.vlr_sal_real maior_faixa_sal
                  from (select nome,
                               vlr_sal_real,
                               tsal_cod,
                               dc.cod cod_cargo,
                               dns.cod,
                               dc.descr,
                               dts.descr,
                               dfs.cod,
                               dfs.descr 
                          from dda_rh.cargos dc,
                               dda_rh.tabelas_salariais dts,
                               dda_rh.faixas_salariais dfs,
                               dda_rh.reg_regioes dr1,
                               dda_rh.niveis_salariais dns,
                               (select b.cod, max(dt_ini_vig) dt
                                  from dda_rh.niveis_salariais b,
                                       dda_rh.cargos           a
                                 where a.fxsl_cod = b.rere_fxsl_cod
                                   and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
                                   and b.cod in ('1', '5')
                                 group by b.cod) mas
                         where dc.fxsl_tsal_cod = dts.cod
                           and dc.fxsl_tsal_cod = dfs.tsal_cod
                           and dc.fxsl_cod = dfs.cod
                           and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                           and dr1.fxsl_cod = dc.fxsl_cod
                           and dc.fxsl_cod = dns.rere_fxsl_cod
                           and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                        --   and dc.emp_cod = 1 --in (1 sesi, 2 senai)
                           and dc.emp_cod = tsal_emp_cod
                           and dc.emp_cod = dts.emp_cod
                           and dts.emp_cod = dfs.Tsal_Emp_Cod
                           and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                           and dr1.fxsl_tsal_emp_cod =
                               dns.rere_fxsl_tsal_emp_cod
                           and dns.cod ='1'
                           and dns.dt_ini_vig = mas.dt
                           and dc.dt_desativacao is null
                         group by nome,
                                  vlr_sal_real, 
                                  tsal_cod,
                                  dc.cod,
                                  dns.cod,
                                  dc.descr,
                                  dts.descr,
                                  dfs.cod,
                                  dfs.descr
                         order by vlr_sal_real, dc.cod desc) menor, 
                       (select nome,
                               vlr_sal_real, 
                               tsal_cod,
                               dc.cod cod_cargo,
                               dns.cod,
                               dc.descr,
                               dts.descr,
                               dfs.cod,
                               dfs.descr 
                          from dda_rh.cargos dc,
                               dda_rh.tabelas_salariais dts,
                               dda_rh.faixas_salariais dfs,
                               dda_rh.reg_regioes dr1,
                               dda_rh.niveis_salariais dns,
                               (select b.cod, max(dt_ini_vig) dt
                                  from dda_rh.niveis_salariais b,
                                       dda_rh.cargos           a
                                 where a.fxsl_cod = b.rere_fxsl_cod
                                   and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
                                   and b.cod in ('1', '5')
                                 group by b.cod) mas
                         where dc.fxsl_tsal_cod = dts.cod
                           and dc.fxsl_tsal_cod = dfs.tsal_cod
                           and dc.fxsl_cod = dfs.cod
                           and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                           and dr1.fxsl_cod = dc.fxsl_cod
                           and dc.fxsl_cod = dns.rere_fxsl_cod
                           and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                           and dts.cod in (30, 31, 32, 33) 
                       --    and dc.emp_cod = 1 --in (1 sesi, 2 senai)
                           and dc.emp_cod = tsal_emp_cod
                           and dc.emp_cod = dts.emp_cod
                           and dts.emp_cod = dfs.Tsal_Emp_Cod
                           and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                           and dr1.fxsl_tsal_emp_cod =
                               dns.rere_fxsl_tsal_emp_cod
                           and dns.cod ='5'
                           and dns.dt_ini_vig = mas.dt
                           and dc.dt_desativacao is null
                         group by nome,
                                  vlr_sal_real, 
                                  tsal_cod,
                                  dc.cod,
                                  dns.cod,
                                  dc.descr,
                                  dts.descr,
                                  dfs.cod,
                                  dfs.descr
                         order by vlr_sal_real, dc.cod desc) maior
                
                 where menor.cod_cargo = maior.cod_cargo
                 order by maior.vlr_sal_real desc) faixas
        
         where salarios.car_cod = faixas.cod_cargo)FxSal
                 
        -------------------------------------------
         Where chapa = vpro.matricula
           and emprg.emp_cod = gps.codigo_universal
           and vpro.cct_codigo = cct.codigo
           and cct.emp_cres_id = dcr.id(+)
           and vpro.gps_codigo = demp.gps_codigo
           and dpro.matricula = vpro.matricula
           and vpro.matricula = rcarg.remp_chapa
           and dcarg.cod = rcarg.car_cod
           and emprg.emp_cod = rcarg.car_emp_cod
           and dcarg.emp_cod = emprg.emp_cod
           and cct.ano = dt.ano
           and p_ano = dt.ano
           and pc_mes = dt.mes
           and gps.idc_sistema_fiergs = 'S'
           and demp.id = gps.codigo
           and chapa = uniorg.remp_chapa
           AND chapa = adic.remp_chapa(+)
           and chapa = FxSal.remp_chapa(+)
           and ((emprg.dt_rescisao is null and
               (to_char(emprg.dt_admissao, 'rrrrmm') <=
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))) or
               (to_char(emprg.dt_admissao, 'rrrrmm') <=
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0) and
               to_char(emprg.dt_rescisao, 'rrrrmm') >=
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)))
           and uniorg.dt_mov IN
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_uniorgs u
                 Where u.remp_chapa = chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
           and rcarg.dt_mov IN
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_cargos u
                 Where u.remp_chapa = chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
        --
        Union
        --
        Select 'Entrada' TIPO,
               uniorg2.tipo_mov TIPO_MOV,
               chapa CHAPA,
               nvl(dcarg.id, -1) DCAR_ID,
               uniorg.uorg_cod cct,
               nvl(demp.id, -1) DEMP_ID,
               nvl(dt.id, -1) DT_ID,
               1 NUM_COLABORADORES,
               0 Carga_Horaria,
               0 DSITFUNC_ID,
               0 ID_MOT_DESLG,
               0 ID_MOT_FALTAS,
               '0',
               FLAG_SUBSTITUICAO,
               0,
               '0',
               0                     menor_faixa_sal,
               0                     maior_faixa_sal,
               '0'                   flag_maior_faixa,
               0                     ddesig_id
          From dda_rh.reg_empregos      emprg,
               dda_rh.reg_uniorgs       uniorg,
               profissionais_vw         vpro,
               ctb_centros_custos_vw    cct,
               dda_rh.reg_cargos        rcarg,
               dim_empresas             demp,
               dim_profissionais        dpro,
               dim_cargos               dcarg,
               dim_tempo                dt,
               dim_centros_resp_lotacao dcr,
               grupos_pessoas           gps,
               
   -------------- Traz os Admitidos por Substituição - Flag_Substituição ----------------------
   
               (Select 'Admissão' tipo_mov,
                       u.remp_chapa remp_chapa,
                       u.dt_mov dt_mov,
                       decode(chapa, NULL, 'N', 'S') FLAG_SUBSTITUICAO
                  From dda_rh.reg_uniorgs u,
   
   --------------- Query vinda do Discoverer para identificar os Admitidos por Substituição --- 
                      
                       (select distinct chapa
                          from (SELECT REG_EMPREGOS.CHAPA as chapa
                                
                                  FROM DDA_RH.CARGOS                   CARGOS,
                                       DDA_RH.DOCUMENTOS               DOCS,
                                       DDA_RH.EMPRESAS                 EMPRESAS,
                                       DDA_RH.FILIAIS                  FILIAIS,
                                       DDA_RH.PESSOAS_FISICAS          PF,
                                       DDA_RH.REG_CARGOS               REG_CARGOS,
                                       DDA_RH.REG_EMPREGOS             REG_EMPREGOS,
                                       DDA_RH.REG_SALARIOS             REG_SALARIOS,
                                       DDA_RH.REG_UNIORGS              REG_UNIORGS,
                                       DDA_RH.UNIDADES_NEGOCIO         UNID_NEGOCIO,
                                       DDA_RH.UNIDADES_ORGANIZACIONAIS UNID_ORGANIZ,
                                       DDA_RH.REG_UNIORGS              UNI,
                                       DDA_RH.REG_FILIAIS              REG_FILIAIS
                                 WHERE ((CARGOS.EMP_COD =
                                       REG_CARGOS.CAR_EMP_COD AND
                                       CARGOS.COD = REG_CARGOS.CAR_COD) AND
                                       (EMPRESAS.COD = FILIAIS.EMP_COD) AND
                                       (EMPRESAS.COD = REG_EMPREGOS.EMP_COD) AND
                                       (FILIAIS.COD = REG_FILIAIS.FIL_COD AND
                                       FILIAIS.EMP_COD =
                                       REG_FILIAIS.FIL_EMP_COD) AND
                                       (PF.NUMERO = DOCS.PFIS_NUMERO(+)) AND
                                       (PF.NUMERO = REG_EMPREGOS.PFIS_NUMERO) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       UNI.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA = UNI.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_FILIAIS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_FILIAIS.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_CARGOS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_CARGOS.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_SALARIOS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_SALARIOS.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_UNIORGS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_UNIORGS.REMP_CHAPA) AND
                                       (UNID_NEGOCIO.COD =
                                       UNID_ORGANIZ.UNEG_COD) AND
                                       (REG_UNIORGS.UORG_COD =
                                       UNID_ORGANIZ.COD))
                                   AND (UNID_ORGANIZ.EMP_COD =
                                       REG_EMPREGOS.EMP_COD)
                                   AND (REG_EMPREGOS.VINC_COD <> 9)
                                   AND (DOCS.TDOC_COD(+) = 7)
                                   AND (REG_SALARIOS.MMOV_COD = 1)
                                   AND (REG_CARGOS.MMOV_COD = 1 AND
                                       CARGOS.EMP_COD = REG_EMPREGOS.EMP_COD)
                                   AND (REG_EMPREGOS.DT_RESCISAO >=
                                       '01-01-1900')                                      
                                   AND UNI.DT_MOV IN
                                       (SELECT MAX(HH.DT_MOV)
                                          FROM DDA_RH.REG_UNIORGS HH
                                         WHERE HH.REMP_EMP_COD =
                                               UNI.REMP_EMP_COD
                                           AND HH.REMP_CHAPA = UNI.REMP_CHAPA
                                           AND UNI.REMP_EMP_COD > 0
                                           AND UNI.REMP_CHAPA > 0
                                         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
                                   AND REG_FILIAIS.DT_MOV IN
                                       (SELECT MAX(HH.DT_MOV)
                                          FROM DDA_RH.REG_FILIAIS HH
                                         WHERE HH.REMP_EMP_COD =
                                               REG_FILIAIS.REMP_EMP_COD
                                           AND HH.REMP_CHAPA =
                                               REG_FILIAIS.REMP_CHAPA
                                         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)                                
                                 ORDER BY REG_EMPREGOS.CHAPA ASC)) SUBS
                
                 Where u.dt_mov =
                       (Select MIN(uni.dt_mov)
                          From dda_rh.reg_uniorgs uni
                         Where uni.remp_chapa = u.remp_chapa)
                   and u.mmov_cod = 1
                   and u.remp_chapa = SUBS.chapa(+)
                
                --
                Union
                -- Movimentação Interna
                Select 'Mov. Interna Admissão' tipo_mov,
                       u.remp_chapa remp_chapa,
                       u.dt_mov dt_mov,
                       '0'
                  From dda_rh.reg_uniorgs u
                 Where u.dt_mov NOT IN
                       (Select MIN(uni.dt_mov)
                          From dda_rh.reg_uniorgs uni
                         Where uni.remp_chapa = u.remp_chapa)
                Union
                -- Transferencia entre casas
                Select 'Transferencia' tipo_mov,
                       u.remp_chapa remp_chapa,
                       u.dt_mov dt_mov,
                       '0'
                  From dda_rh.reg_uniorgs u
                 Where u.dt_mov =
                       (Select MIN(uni.dt_mov)
                          From dda_rh.reg_uniorgs uni
                         Where uni.remp_chapa = u.remp_chapa)
                   and u.mmov_cod = 7) uniorg2
         Where chapa = vpro.matricula
           and emprg.emp_cod = gps.codigo_universal
           and vpro.cct_codigo = cct.codigo
           and vpro.gps_codigo = demp.gps_codigo
           and dpro.matricula = vpro.matricula
           and vpro.matricula = rcarg.remp_chapa
           and cct.emp_cres_id = dcr.id(+)
           and dcarg.cod = rcarg.car_cod
           and rcarg.car_emp_cod = emprg.emp_cod
           and dcarg.emp_cod = emprg.emp_cod
           and gps.idc_sistema_fiergs = 'S'
           and demp.id = gps.codigo
           and uniorg.remp_chapa = uniorg2.remp_chapa
           and uniorg.dt_mov = uniorg2.dt_mov
           and cct.ano = dt.ano
           and p_ano = dt.ano
           and pc_mes = dt.mes
           and chapa = uniorg.remp_chapa
           and rcarg.dt_mov IN
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_cargos u
                 Where u.remp_chapa = chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
           and to_char(uniorg.dt_mov, 'rrrrmm') =
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
           and to_char(uniorg2.dt_mov, 'rrrrmm') =
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
        --
        Union
        --
        Select 'Saída' TIPO,
               uniorg2.tipo_mov TIPO_MOV,
               emprg.chapa CHAPA,
               nvl(dcarg.id, -1) DCAR_ID,
               uniorg2.uorg_cod cct,
               nvl(demp.id, -1) DEMP_ID,
               nvl(dt.id, -1) DT_ID,
               1 NUM_COLABORADORES,
               0 Carga_Horaria,
               0,
               ID_MOT_DESLG,
               ID_MOT_FALTAS,
               '0',
               '0',
               0,
               '0',
               0                    menor_faixa_sal,
               0                    maior_faixa_sal,
               '0'                  flag_maior_faixa,
               0                    ddesig_id
          From dda_rh.reg_empregos emprg,
               profissionais_vw vpro,
               ctb_centros_custos_vw cct,
               dda_rh.reg_cargos rcarg,
               dim_empresas demp,
               dim_profissionais dpro,
               dim_cargos dcarg,
               dim_centros_resp_lotacao dcr,
               grupos_pessoas gps,
               dim_tempo dt,
               (Select 'Mov. Interna Saída' tipo_mov,
                       u.remp_chapa chapa,
                       u.uorg_cod uorg_cod,
                       u.dt_mov dt_mov,
                       NULL ID_MOT_DESLG,
                       NULL ID_MOT_FALTAS
                  From dda_rh.reg_uniorgs u,
                       (Select MAX(u1.dt_mov) dt_mov, u1.remp_chapa chapa
                          From dda_rh.reg_uniorgs u1
                         Where to_char(u1.dt_mov, 'rrrrmm') =
                               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                         Group by u1.remp_chapa) dt
                
                 Where u.remp_chapa = dt.chapa
                   and dt.dt_mov > u.dt_mov
                   and u.dt_mov =
                       (Select MAX(u2.dt_mov) dt_dt_mov
                          From dda_rh.reg_uniorgs u2,
                               (Select MAX(u1.dt_mov) dt_mov,
                                       u1.remp_chapa chapa2
                                  From dda_rh.reg_uniorgs u1
                                 Where to_char(u1.dt_mov, 'rrrrmm') =
                                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                                 Group by u1.remp_chapa) dt
                         Where u2.remp_chapa = dt.chapa2
                           and dt.dt_mov > u2.dt_mov
                           and u2.remp_chapa = u.remp_chapa)
                --
                Union
                --
                
  ------------ Traz os Motivos de Desligamentos e Faltas ---------------------------------------
  
                Select 'Rescisão' tipo_mov,
                       uni.remp_chapa chapa,
                       uni.uorg_cod uorg_cod,
                       e.dt_rescisao dt_mov,
                       MD.id Id_Mot_Deslg,
                       MF.ID Id_Mot_Faltas 
                  From dda_rh.reg_empregos                 e,
                       dda_rh.reg_uniorgs                  uni,
                       Dim_Motivos_Desligamentos           md, 
                       dda_rh.reg_rescisoes                rr,
                       dda_rh.Motivos_Absentismos_Punicoes rmap,
                       Dim_Motivos_Faltas                   mf 
                 Where e.chapa = uni.remp_chapa
                   AND e.tidl_cod = md.cod(+)
                   AND rr.remp_chapa(+) = e.chapa
                   AND rr.mapa_cod = mf.cod(+)
                   AND rmap.cod(+) = rr.mapa_cod
                   and uni.dt_mov =
                       (Select MAX(u3.dt_mov)
                          From dda_rh.reg_uniorgs u3
                         Where to_char(e.dt_rescisao, 'rrrrmm') =
                               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                           and u3.remp_chapa = e.chapa)) uniorg2
        
         Where emprg.chapa = vpro.matricula
           and emprg.emp_cod = gps.codigo_universal
           and vpro.cct_codigo = cct.codigo
           and vpro.gps_codigo = demp.gps_codigo
           and dpro.matricula = vpro.matricula
           and vpro.matricula = rcarg.remp_chapa
           and cct.emp_cres_id = dcr.id(+)
           and dcarg.cod = rcarg.car_cod
           and rcarg.car_emp_cod = emprg.emp_cod
           and dcarg.emp_cod = emprg.emp_cod
           and gps.idc_sistema_fiergs = 'S'
           and demp.id = gps.codigo
           and emprg.chapa = uniorg2.chapa
           and cct.ano = dt.ano
           and p_ano = dt.ano
           and pc_mes = dt.mes
           and rcarg.dt_mov =
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_cargos u, dda_rh.reg_empregos e
                 Where u.remp_chapa = e.chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                   and e.chapa = chapa);
    --
    Type c_tmp_rh_Type Is Table Of c_tmp_rh%Rowtype Index By Pls_Integer;
    l_Crh c_tmp_rh_Type;
    --
    Cursor c_fat_rh Is
      Select dtpmov.Id Dtpmov_Id,
             f.Dpro_Id Dpro_Id,
             f.Dcarg_Id Dcarg_Id,
             nvl(cct.Duorg_Id, 0) Duorg_Id,
             nvl(cct.Dcr_Id, 0) Dcr_Id,
             f.Demp_Id Demp_Id,
             f.Dt_Id Dt_Id,
             f.Qtd_Pessoas Num_Pessoas,
             f.carga_horaria Horas_Contratada,
             0 Horas_Util,
             0 Saldo_Horas,
             0 DUORG,
             0 dcr,
             0 ch,
             0 alocacao,
             f.dsitfunc_id,
             f.dmotfalt_id,
             f.dmotdesl_id,
             f.flag_extra_cargo,
             f.flag_substituicao,
             f.conta_func_adic,
             f.flag_adicionais,
             f.menor_faixa_sal,
             f.maior_faixa_sal,
             f.flag_maior_faixa,
             f.ddesig_id
        From Fat_RH_Tmp f,
             Cct_Rh_Tmp               cct,
             Dim_Tipo_Mov_Rh          dtpmov
       Where f.Cct = cct.Cct_Rh(+)
         and f.tipo_2 = dtpmov.tipo_mov_2;
    --
    Type c_fat_rh_Type Is Table Of c_fat_rh%Rowtype Index By Pls_Integer;
    l_Cfat c_fat_rh_Type;
    --
    Cursor c_atlz_cargo(pc_mes Number) Is
      Select Distinct dcarg.id Dcarg_Id, reg.chapa Dpro_Id, dt.Id Dt_Id
        From (Select Distinct td.descricao,
                              rd.remp_chapa,
                              0               emp,
                              rd.remp_emp_cod,
                              rd.dt_ini_vig,
                              rd.dt_fim_vig,
                              td.cod          tpde_cod
                From dda_rh.reg_designacoes  rd,
                     dda_rh.tipos_designacao td,
                     dda_rh.Reg_Empregos     emprg
               Where td.cod = rd.tpde_cod
                 and rd.remp_chapa = emprg.chapa
                 and rd.remp_emp_cod = emprg.emp_cod
                 and (rd.dt_ini_vig IN
                     (Select MAX(rd2.dt_ini_vig)
                         From dda_rh.reg_designacoes rd2
                        Where rd2.remp_chapa = emprg.chapa
                          and to_char(rd2.dt_ini_vig, 'rrrrmm') <=
                              lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)) or
                     rd.dt_ini_vig is null)) t1,
             dim_cargos dcarg,
             dda_rh.reg_empregos reg,
             dda_rh.reg_cargos reg_car,
             dim_tempo dt
       Where reg_car.remp_chapa = reg.chapa
         and reg_car.remp_emp_cod = reg.emp_cod
         and t1.emp = dcarg.emp_cod
         and t1.tpde_cod = dcarg.cod
         and t1.remp_chapa = reg.chapa
         and t1.remp_emp_cod = reg.emp_cod
         and dt.ano_mes between to_char(t1.dt_ini_vig, 'rrrrmm') and
             (lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0));
    --
    Type c_atlz_cargo_Type Is Table Of c_atlz_cargo%Rowtype Index By Pls_Integer;
    l_Ccarg c_atlz_cargo_Type;
    --


    -- Busca a alocação da folha de pagamento
    Cursor c_alocacao_folha Is
      Select 6
           , frh.dpro_id
           , frh.dcarg_id
           , frh.duorg_lot_id
           , frh.dcr_lot_id
           , frh.demp_id
           , frh.dt_id
           , 0 n_colaboradores
           , frh.horas_contratada
           , frh.horas_util
           , frh.saldo_horas
           , bi_util_pck.bi_consultaCctUo(cct.codigo) duorg
           , bi_util_pck.bi_consultaCctCr(cct.codigo) dcr
           , (prch.proporcao * frh.horas_contratada) /100 Horas
           , prch.proporcao
           ,frh.dsitfunc_id
           ,frh.dmotfalt_id
           ,frh.dmotdesl_id
           ,'0'                                      flag_extra_cargo 
           ,'0'                                      flag_substituicao
           ,0                                        conta_func_adicionais
           ,'0'                                      flag_adicionais
           ,0                                        menor_faixa_sal
           ,0                                        maior_faixa_sal
           ,'0'                                      flag_maior_faixa
           ,0                                        ddesig_id
        From dda_rh.grupo_chapa_proporcoes    grch
           , dda_rh.proporcao_chapas          prch
           , dda_bi.fat_RH      frh
           , dda_bi.dim_tempo                 dt
           , dda.centros_de_custo             cct
       Where frh.num_pessoas                  = 1
      --   and grch.remp_emp_cod                != 1 -- Não esta levando o SESI, ainda não foi validado
         and grch.dt_atualizacao              = prch.grch_dt_atualizacao
         and grch.remp_chapa                  = prch.grch_remp_chapa
         and grch.remp_emp_cod                = prch.grch_remp_emp_cod
         and frh.dpro_id                      = grch.remp_chapa
         and frh.dtpmov_id                    = 05
         and frh.dt_id                        = dt.id
         and to_char(prch.grch_dt_atualizacao, 'YYYY') || to_char(prch.grch_dt_atualizacao, 'MM') = dt.ano_mes
         and dt.ano                           = p_ano
      --   and cct.codigo_contabil              = prch.uorg_cod
       and (CASE
               WHEN decode(REGEXP_INSTR(cct.Codigo_Contabil, '[^[:digit:]]'),
                           0,
                           'NUMBER',
                           'NOT_NUMBER') = 'NOT_NUMBER' THEN
                0
               ELSE
                TO_NUMBER(cct.Codigo_Contabil)
             END) = prch.uorg_cod
         and (cct.situacao = 'A'
          or to_char(cct.data_desativacao, 'YYYY')||
          to_char(cct.data_desativacao, 'MM') >= DT.ANO_MES );
    --
    Type c_alocacao_folha_Type Is Table Of c_alocacao_folha%Rowtype Index By Pls_Integer;
    l_alocacao_folha c_alocacao_folha_Type;
    --

-- tratamento com regexp oracle
     Select regexp_replace(regexp_replace(regexp_replace('024 sadas DFGDGDG asd88 234 S/:N 456','[A-Z a-z]|\/',''),'[:punct:]',''),'[:space:]','') from dual
     nvl(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(JOIN_A.NUMERO,'[A-Z a-z]|\/',''),'-',''),'[:punct:]',''),'[:space:]',''),'[:cntrl:]',''),'°',''),'º',''),',',''),'''',''),0)  NUMERO,


    --
    -- Profissionais sem alocação, inclui 100% no CC de lotação
    Cursor c_sem_alocacao Is
      Select 6
           , f.dpro_id
           , f.dcarg_id
           , f.duorg_lot_id      duorg_lot
           , f.dcr_lot_id        dcr_lot
           , f.demp_id
           , f.dt_id
           , 0                   n_colaboradores
           , f.horas_contratada
           , f.horas_util
           , f.saldo_horas
           , f.duorg_lot_id      duorg_id
           , f.dcr_lot_id        dcr_id
           , f.horas_contratada  Horas
           , 100                 alocacao
           ,f.dsitfunc_id
           ,f.dmotfalt_id
           ,f.dmotdesl_id
           ,0                    flag_extra_cargo    
           ,0                    flag_substituicao
           ,0                    conta_func_adicionais
           ,'0'                  flag_adicionais
           ,0                    menor_faixa_sal
           ,0                    maior_faixa_sal
           ,'0'                  flag_maior_faixa
           ,0                    ddesig_id
        From DDA_BI.fat_RH f
           , DDA_BI.dim_tempo            dt
       Where f.dpro_id not in (Select ff.dpro_id
                                 From DDA_BI.fat_RH ff
                                Where ff.dtpmov_id = 6
                                  And ff.dt_id     = f.dt_id
                                  And ff.dpro_id   = f.dpro_id
                             Group by ff.dpro_id
                          Having count(*) >= 1)
         And f.dtpmov_id = 5
       --  And f.demp_id != 2 -- Não esta levando o SESI, ainda não foi validado
         And f.dt_id = dt.id
         And dt.ano = lpad(p_ano, 4, 0);
    --
    Type c_sem_alocacao_Type Is Table Of c_sem_alocacao%Rowtype Index By Pls_Integer;
    l_sem_alocacao c_sem_alocacao_Type;
    ---


      -- Cursor que remove a alocação duplicada de funcionários que estão lotados em 2 cc
  Cursor c_remove_prof_duplicados Is
    select count(*) count
         , f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_id
      from fat_Rh f
         , dim_tempo            dt
     where f.dtpmov_id = 5
     and f.dt_id = dt.id
     and dt.ano = p_ano
     group by f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_id
     having count(*) > 1;

     v_reg_prof  c_remove_prof_duplicados%Rowtype;



 Cursor c_remove_aloc_duplicados Is
  select count(*) count
         , f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_id
      from fat_RH f
         , dim_tempo            dt
     where f.dtpmov_id = 5
     and f.dt_id = dt.id
     and dt.ano = p_ano
     group by f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_id
     having count(*) > 1;

  v_Reg_aloc  c_remove_aloc_duplicados%Rowtype;
    --
    --

    v_limite Number := 10000;
    i        number := 1;
    pc_mes   number := nvl(p_mes, to_char(sysdate, 'mm'));
    --
  Begin
    --
    Execute Immediate 'truncate table FAT_RH_TMP';
    Bi_Util_Pck.Desabilita_Indices_Prc('FAT_RH_TMP');
    --
    For idx in 1 .. pc_mes Loop
      Open c_tmp_rh(idx);
      Loop
        Fetch c_tmp_rh Bulk Collect
          Into l_Crh LIMIT v_limite;
        Forall i In 1 .. l_Crh.Count
          Insert into Fat_rh_tmp values l_Crh (i);
        Commit;
        Exit when l_Crh.COUNT < v_limite;
      End loop;
      Close c_tmp_rh;
      Commit;
    End Loop;
    --
    Bi_Util_Pck.Rebuild_Indices_Prc('FAT_RH_TMP');
    Execute Immediate 'truncate table CCT_RH_TMP';
    Bi_Util_Pck.Desabilita_Indices_Prc('CCT_RH_TMP');
    Bi_Universal_rh_Cct_Prc(p_ano);
    Bi_Util_Pck.Rebuild_Indices_Prc('CCT_RH_TMP');
    Dim_Tipo_Mov_Rh_Prc;
    --
    Bi_Util_Pck.Desabilita_Indices_Prc('FAT_RH');
    Bi_Util_Pck.Exclusao_Dados_Prc('FAT_RH',1,p_ano);
    
    --
    Open c_fat_rh;
    Loop
      Fetch c_fat_rh Bulk Collect
        Into l_Cfat Limit v_Limite;
      Forall i in 1 .. l_Cfat.Count
        Insert Into Fat_Rh Values l_Cfat (i);
      Exit When l_Cfat.Count < v_Limite;
      Commit;
      --
    End loop;
    Commit;
    --

   Open c_alocacao_folha;
    Loop
      Fetch c_alocacao_folha Bulk Collect
        Into l_alocacao_folha Limit v_Limite;
      Forall i in 1 .. l_alocacao_folha.Count
        Insert Into Fat_RH Values l_alocacao_folha (i);
      Exit When l_alocacao_folha.Count < v_Limite;
      Commit;
      --
    End loop;
    Close c_alocacao_folha;

    --
    --
-------comentado pois esta parado nesse ponto ao rodar a package ----------------
/*    Open c_sem_alocacao;
      Loop
       Fetch c_sem_alocacao Bulk Collect
          Into l_sem_alocacao Limit v_Limite;
        Forall i in 1 .. l_sem_alocacao.Count
          Insert Into Fat_RH Values l_sem_alocacao (i);
        Exit When l_sem_alocacao.Count < v_Limite;
        Commit;
      --
      End loop;
    Close c_sem_alocacao;*/
------- decomentar depois de ajustar a package ----------------------------------
    --
      Open c_remove_prof_duplicados;
    Loop
      --
      Fetch c_remove_prof_duplicados Into v_reg_prof;
      Exit When c_remove_prof_duplicados%Notfound;

      Update fat_Recursos_Humanos f
         Set f.num_pessoas           = v_reg_prof.Num_Pessoas / v_reg_prof.Count
       Where f.dtpmov_id             = v_reg_prof.dtpmov_id
         And f.dpro_id               = v_reg_prof.Dpro_Id
         And f.dcarg_id              = v_reg_prof.Dcarg_Id
         And f.demp_id               = v_reg_prof.Demp_Id
         And f.dt_id                 = v_reg_prof.Dt_Id;

       End Loop;
       Close c_remove_prof_duplicados;
       commit;


  Open c_remove_aloc_duplicados;
    Loop
      --
      Fetch c_remove_aloc_duplicados Into v_Reg_aloc;
      Exit When c_remove_aloc_duplicados%Notfound;

      Update fat_RH f
         Set f.horas                 = f.horas  / v_Reg_aloc.Count
           , f.percentual_alocacao   = f.percentual_alocacao / v_Reg_aloc.Count
       Where f.dtpmov_id             = 6
         And f.dpro_id               = v_Reg_aloc.Dpro_Id
         And f.dcarg_id              = v_Reg_aloc.Dcarg_Id
         And f.demp_id               = v_Reg_aloc.Demp_Id
         And f.dt_id                 = v_Reg_aloc.Dt_Id;

       End Loop;
       Close c_remove_aloc_duplicados;
       commit;

    INSERE_SIT_FUNC_PRC;

    --
    Bi_Util_Pck.Rebuild_Indices_Prc('FAT_RH');
    Execute Immediate 'truncate table CCT_RH_TMP';
  --  Execute Immediate 'truncate table FAT_RH_TMP';
    --
    /*For idx in 1 .. pc_mes Loop
      Open c_atlz_cargo(idx);
        Loop
          Fetch c_atlz_cargo Bulk Collect Into l_Ccarg Limit v_limite;
          --
          For indx In 1 .. l_Ccarg.Count Loop
           Update Fat_Recursos_Humanos Set dcarg_id = l_Ccarg(indx).dcarg_Id
            Where Dpro_Id = l_Ccarg(indx).dpro_Id
              And Dt_Id = l_Ccarg(indx).Dt_id;
              --And Dpro_Id = 175331;
          End Loop;
            Exit When l_Ccarg.Count < v_limite;
          Commit;
        End Loop;
        Commit;
      Close c_atlz_cargo;
    End Loop;*/
    --
    Exception
      When Others Then
        Pla_Gera_Log_Bi_Prc( p_Erro_Sql   => Sqlerrm
                           , p_Msg        => 'Erro inesperado'
                           , p_Tab        => 'FAT_REC_HUMAN_PRC'
                           , p_Ctb_Pre_Id => 0
                           , p_Tipo       => 'INSERIR' );
  --
  End Fat_Recursos_Humanos_Prc;
  --
  Procedure Bi_Universal_rh_Cct_Prc(P_ano Number) Is
    Cursor c_tmp_cct(p_data Date := null) Is
      Select Distinct T1.cct_codigo,
                      T1.cct,
                      bi_Util_Pck.bi_ConsultaUoId(v.EMP_UORG_ID,
                                                  v.EMP_EMP_ID,
                                                  'ANF-ERP') Duorg_Id,
                      bi_Util_Pck.bi_ConsultaCrId(v.Emp_Cres_Id,
                                                  v.EMP_EMP_ID,
                                                  'ANF-ERP') Dcr_Id
        From (Select To_Number(Uni.Uorg_cod) Cct,
                     To_Number(Uni.Uorg_emp_cod) Empresa,
                     To_Number(Uni.Sinonimo) Cct_codigo
                From dda_rh.Sinonimos_Unor Uni
               Where Uni.Uorg_Emp_Cod = 2
              Union All
              Select Cct.Cct_Codigo       Cct,
                     Gps.Codigo_Universal Empresa,
                     Cct.Cct_Codigo       Cct_Codigo
                From Ctb_Centros_Custos_Vw Cct, Grupos_Pessoas Gps
               Where Cct.Ano = P_ano
                 And Gps.Codigo Not In (3, 4, 2)
                 And Cct.Emp_Emp_Id = Gps.Codigo
              Union All
              /*Select Decode(Cct.Codigo_Contabil,
                            'CLASSIFICAR',
                            0,
                            To_Number(Cct.Codigo_Contabil)) Cct,*/
                Select TO_NUMBER(CASE
                                 WHEN decode(REGEXP_INSTR(Cct.Codigo_Contabil,
                                                          '[^[:digit:]]'),
                                             0,
                                             'NUMBER',
                                             'NOT_NUMBER') = 'NOT_NUMBER' THEN
                                  0
                                 ELSE
                                  TO_NUMBER(Cct.Codigo_Contabil)
                               END) Cct,
                     Gps.Codigo_Universal Empresa,
                     Cct.Codigo Cct_Codigo
                From Centros_De_Custo   Cct,
                     Grupos_Pessoas     Gps,
                     Centros_Atividades Cat
               Where Cct.Cat_Codigo = Cat.Codigo
                 And Cat.Gps_Codigo = Gps.Codigo
                 And p_ano  Between to_char(Cct.Data_Instalacao,'rrrr') And
                     to_char(nvl(Cct.Data_Desativacao, sysdate),'rrrr') ) T1,
             (Select Distinct cct From Fat_RH_Tmp) f,
             Ctb_Centros_Custos_Vw v
       Where t1.cct = f.cct
         And v.ano = p_ano
         And t1.cct_Codigo = v.codigo;
    --
    Type c_tmp_cct_Type Is Table Of c_tmp_cct%Rowtype Index By Pls_Integer;
    l_Ccct c_tmp_cct_Type;
    --
    v_limite Number := 10000;
  Begin
    Open c_tmp_cct;
    Loop
      Fetch c_tmp_cct Bulk Collect
        Into l_Ccct Limit v_Limite;
      Forall i in 1 .. l_Ccct.Count
        Insert Into Cct_Rh_Tmp Values l_Ccct (i);
      Exit When l_Ccct.Count < v_Limite;
      Commit;
      --
    End loop;
    Commit;
  End;
  --
  Procedure Dim_Tipo_Mov_Rh_Prc Is
  Begin
    Merge Into Dim_Tipo_Mov_Rh dtpmov
    Using (Select Distinct Tipo Tipo_Mov_1, Tipo_2 Tipo_Mov_2
             From Fat_RH_Tmp
           Union
           Select 'Alocação' Tipo_Mov_1, 'Alocação' Tipo_Mov_2
             from dual  ) ftpmov
    On (dtpmov.Tipo_Mov_2 = ftpmov.Tipo_Mov_2)
    When Matched Then
      Update Set dtpmov.Tipo_Mov_1 = ftpmov.Tipo_Mov_1
    When Not Matched Then
      Insert
        (Id, Tipo_Mov_1, Tipo_Mov_2)
      Values
        (dtpmov_seq.nextval, ftpmov.Tipo_Mov_1, ftpmov.Tipo_Mov_2);
    Commit;
  End;
  
Procedure Insere_Sit_Func_prc is

  Cursor Ins_RH is
  
    select rsit_remp_chapa, rsit_sfun_cod, dt_ini_vig
      from dda_rh.reg_afastamentos a;

  Type Ins_RH_TYPE is table of Ins_RH%rowtype index by pls_integer;
  L_Ins_RH Ins_RH_Type;

  v_rsit_remp_chapa dda_rh.reg_afastamentos.rsit_remp_chapa%type;
  v_rsit_sfun_cod   dda_rh.reg_afastamentos.rsit_sfun_cod%type;
  v_dt_ini_vig      dda_rh.reg_afastamentos.dt_ini_vig%type;
  v_limite          number := 10000;

begin

  open Ins_RH;
  Loop
    Fetch Ins_RH bulk collect
      into L_Ins_RH limit v_limite;
    for i in 1 .. L_Ins_RH.count loop
    
      update Fat_RH a
         set Dsitfunc_id =
             (select max(id)
                from Dim_Situacoes_Funcionais b
               where L_Ins_RH(i).rsit_sfun_cod = b.cod)
       where dpro_id = L_Ins_RH(i).rsit_remp_chapa
         and dt_id = (to_char(L_Ins_RH(i).dt_ini_vig, 'YYYYMM'))
         and dtpmov_id = 1
         and dtpmov_id <> 6;
    
      update fat_rH
         set dsitfunc_id =
             (select max(ID) from Dim_Situacoes_Funcionais b where cod = 1)
       where dpro_id = L_Ins_RH(i).rsit_remp_chapa
            -- and dt_id = (to_char(v_dt_ini_vig,'YYYYMM'))
         and dtpmov_id <> 1;
      -- and dtpmov_id = 5;
    
    end loop;
  
    exit when L_Ins_RH.count < v_limite;
  
  end loop;
  close Ins_RH;

  update fat_rh
     set dsitfunc_id =
         (select id from dim_situacoes_funcionais where cod = 0)
   where dsitfunc_id is null;

  commit;
           
end Insere_Sit_Func_prc;

  

  
  --
End Bi_RH_Pck;



--<<<<<<<<<<<<<<<<<<<<<<<<<< Package FAT_RH Última Versão >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

CREATE OR REPLACE Package Body Bi_RH_Pck Is
  --
  Procedure Fat_Recursos_Humanos_Prc(p_ano In Number, p_mes In Number) Is

 Cursor c_tmp_rh(pc_mes Number) Is
   Select 'Total Funcionários'               Tipo,
               '-'                          Tipo_2,
               chapa                        Dprod_Id,
               nvl(dcarg.id, 0)             Dcarg_Id,
               uniorg.uorg_cod              cct,
               nvl(demp.id, 0)              Demp_Id,
               nvl(dt.id, 0)                Dt_Id,
               1                            Qtd_Colaboradores,
               vpro.hrs_teor_mes            Carga_Horaria,
               0                            dsitfunc_id,
               0                            id_mot_deslg,
               0                            id_mot_faltas,
               -- flag para mostrar os extra-cargo projeto LDO-RH Alexandre 20170620 OK
               (case
                 when (dcarg.cod < 4500 and emprg.vinc_cod <> 9) then
                  'S'
                 else
                  'N'
               end)                          flag_extra_cargo,
               '0',
               total AS conta_func_adic,
               decode(total, null, 'N', 'S')                              flag_adicionais,
               menor_faixa_sal,
               maior_faixa_sal,
               (case 
                  when (salario > maior_faixa_sal) then 'S' else 'N' end) flag_maior_faixa,
               desig_cod              DDesig_cod,
               (select c.id from dim_cargos c where cod = desig_cod and c.emp_cod = emprg.emp_cod) DDESIG_Id          
          From dda_rh.reg_empregos      emprg,
               dda_rh.reg_uniorgs       uniorg,
               profissionais_vw         vpro,
               ctb_centros_custos_vw    cct,
               dda_rh.reg_cargos        rcarg,
               dim_empresas             demp,
               dim_profissionais        dpro,
               dim_cargos               dcarg,
               dim_centros_resp_lotacao dcr,
               grupos_pessoas           gps,
               dim_tempo                dt,

               
   ----------------------- Identifica os Adicionais ------------------------------------------------
   --- Union para agrupar de acordo com os eventos, depois somar -----------------------------------
   --- Regra de agrupamento definida pelo RH, de acordo com o relatorio da Estrutura Remuneratoria--
   
               (select remp_chapa, count(*) total
                  from (select distinct rc.remp_chapa
                          from dda_rh.reg_cargos            rc,
                               dda_rh.EVENTOS               e,
                               dda_rh.reg_empregos          re,
                               dda_rh.movimentos_calculados mc
                         where mc.even_cod = e.cod
                           and mc.remp_chapa = rc.remp_chapa
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               re.dt_rescisao >
                               last_day(to_char('01/' || pc_mes || '/' ||
                                                 p_ano))
                               )
                           and even_cod in (806, 807, 825, 834, 836, 847, 961)
                           and MC.dt_comp =
                               last_day(to_char('01/' || pc_mes || '/' || p_ano))
                           and rc.car_cod >= 4500
                    
                        
                        union all
                        
                        select distinct rc.remp_chapa
                          from dda_rh.reg_cargos            rc,
                               dda_rh.EVENTOS               e,
                               dda_rh.reg_empregos          re,
                               dda_rh.movimentos_calculados mc
                         where mc.even_cod = e.cod
                           and mc.remp_chapa = rc.remp_chapa
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               re.dt_rescisao >
                               last_day(to_char('01/' || pc_mes || '/' ||
                                                 p_ano)))
                           and even_cod = 888
                           and MC.dt_comp =
                               last_day(to_char('01/' || pc_mes || '/' || p_ano))
                           and rc.car_cod >= 4500
                        --and rc.car_emp_cod = 2
                        
                        union all
                        
                        select distinct rc.remp_chapa
                          from dda_rh.reg_cargos            rc,
                               dda_rh.EVENTOS               e,
                               dda_rh.reg_empregos          re,
                               dda_rh.movimentos_calculados mc
                         where mc.even_cod = e.cod
                           and mc.remp_chapa = rc.remp_chapa
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               re.dt_rescisao >
                               last_day(to_char('01/' || pc_mes || '/' ||
                                                 p_ano)))
                           and even_cod in (841,
                                            845,
                                            850,
                                            853,
                                            854,
                                            856,
                                            857,
                                            859,
                                            863,
                                            865,
                                            883,
                                            938)
                           and mc.dt_comp =
                               last_day(to_char('01/' || pc_mes || '/' || p_ano))
                           and rc.car_cod >= 4500
                        --and rc.car_emp_cod = 2
                        )
                 group by remp_chapa) adic,
                    
   ---------------- Traz as faixas salarias e cálculos de salários para o relatório da Estrutura Remuneratória --
   -------------------------------------------------------------------------------------------------------------- 
                          
                 (
   
         select remp_chapa,
               car_cod      desig_cod,
               faixas.nome,
               menor_faixa_sal,
               maior_faixa_sal,
               salario
          from 
   ---------------- Traz os salários acrescidos dos eventos e cargas horárias do funcionário ---------
   ---------------- Cálculo baseado nas definições da Kazuko ----------------------------------------------------
          
          (select carg_desig.remp_chapa,
                       nvl(busca_designados(carg_desig.remp_chapa), car_cod) car_cod,
                       round(case
                               when carga_horaria <> 1 then
                                (vlr_mult / h.hrs_teor_mes)
                               else
                                (vlr_mult / ((h.hrs_teor_sem * 4.5) +
                                (h.hrs_teor_sem * 4.5) / 6))
                             end,
                             2) salario,
                       max(rh.dt_mov)
                  from (select remp_chapa,
                               car_cod,
                               carga_horaria,
                               vlr_mult,
                               max(localz)
                          from (select '2' as localz,
                                       mc.remp_chapa,
                                       rd.car_cod,
                                       chc.carga_horaria,
                                       (vlr * chc.carga_horaria) vlr_mult
                                  from (select remp_emp_cod,
                                               remp_chapa,
                                               sum(vlr) vlr
                                          from dda_rh.movimentos_calculados mc
                                         where even_cod in (840, 883, 863, 938)
                                           and dt_comp =
                                               last_day(to_char('01-' || pc_mes || '-' ||
                                                                p_ano))
                                         group by remp_emp_cod, remp_chapa) mc,
                                       dda_rh.reg_cargos c,
                                       (select remp_chapa, max(dt_mov) max_dt
                                          from dda_rh.reg_cargos
                                         group by remp_chapa) max,
                                       dda_rh.reg_cargas_horarias_cargo chc,
                                       dda_rh.reg_empregos re,
                                       dda_rh.reg_designacoes rd
                                
                                 where mc.remp_emp_cod = c.car_emp_cod
                                   and mc.remp_chapa = c.remp_chapa
                                   and chc.car_emp_cod = c.car_emp_cod
                                   and chc.car_cod = c.car_cod
                                   and max.remp_chapa = mc.remp_chapa
                                   and re.emp_cod = mc.remp_emp_cod
                                   and re.chapa = mc.remp_chapa
                                   and rd.remp_emp_cod(+) = mc.remp_emp_cod
                                   and rd.remp_chapa(+) = mc.remp_chapa
                                   and (re.dt_rescisao is null or
                                       re.dt_rescisao >
                                       last_day(to_char('01-' || pc_mes || '-' ||
                                                         p_ano)))
                                   and c.car_cod >= 4500
                                   and max.max_dt = c.dt_mov
                            --       and c.car_emp_cod = 1
                                   and rd.dt_fim_vig is null
                                                                
                                union
        --------- traz uma linha por chapa, somados os valores de acordo com os eventos ---
        --------- Após multiplica pela carga horária do cargo -----------------------------
        
                                select '1',
                                       mc.remp_chapa,
                                       rc.car_cod,
                                       chc.carga_horaria,
                                       (vlr * chc.carga_horaria)  
                                  from 
                                       (select remp_chapa, sum(vlr) vlr
                                          from dda_rh.movimentos_calculados mc
                                         where even_cod in (840, 883, 863, 938)
                                           and dt_comp =
                                               last_day(to_char('01-' || pc_mes || '-' ||
                                                                p_ano))
                                         group by remp_chapa) mc,
   
        ---------- busca os cargos designados e a carga horaria do cargo ---------------------------------
        
                                       dda_rh.reg_cargos rc,
                                       (select remp_chapa,
                                               max(dt_mov) max_dt_mov
                                          from dda_rh.reg_cargos rcg
                                         where dt_mov <=
                                               last_day(to_char('01-' || pc_mes || '-' ||
                                                                p_ano))
                                         group by remp_chapa) max_cargo,
                                       dda_rh.reg_cargas_horarias_cargo chc,
                                       dda_rh.reg_empregos re
                                 where mc.remp_chapa = rc.remp_chapa
                                   and rc.car_cod = chc.car_cod
                                   and rc.car_emp_cod = chc.car_emp_cod
                                   and mc.remp_chapa = re.chapa
                                   and (re.dt_rescisao is null or
                                       re.dt_rescisao >
                                       last_day(to_char('01-' || pc_mes || '-' ||
                                                         p_ano)))
                                   and rc.dt_mov = max_cargo.max_dt_mov
                                   and rc.remp_chapa = max_cargo.remp_chapa
                                   and rc.car_cod > 4500
                                --   and rc.remp_emp_cod = 1
                                )
                         group by remp_chapa, car_cod, carga_horaria, vlr_mult
                        
                        ) carg_desig,
                       dda_rh.reg_horarios rh,
                       dda_rh.horarios h
                 where carg_desig.remp_chapa = rh.remp_chapa
                      
                   and rh.hor_cod = h.cod
                   and rh.hor_emp_cod = h.emp_cod
                   and rh.dt_mov =
                       (select max(dt_mov)
                          from dda_rh.reg_horarios
                         where remp_chapa = carg_desig.remp_chapa
                           AND dt_mov <=
                               last_day(to_char('01-' || pc_mes || '-' || p_ano)))
                 group by carg_desig.remp_chapa,
                          nvl(busca_designados(carg_desig.remp_chapa),
                              car_cod),
                          round(case
                                  when carga_horaria <> 1 then
                                   (vlr_mult / h.hrs_teor_mes)
                                  else
                                   (vlr_mult / ((h.hrs_teor_sem * 4.5) +
                                   (h.hrs_teor_sem * 4.5) / 6))
                                end,
                                2)) salarios
                                
              --------- Traz as faixas salariais mínimas e máximas dos cargos --------- 
              ,
               (select menor.nome,
                       menor.cod_cargo,
                       menor.vlr_sal_real menor_faixa_sal,
                       maior.vlr_sal_real maior_faixa_sal
                  from (select nome,
                               vlr_sal_real,
                               tsal_cod,
                               dc.cod cod_cargo,
                               dns.cod,
                               dc.descr,
                               dts.descr,
                               dfs.cod,
                               dfs.descr 
                          from dda_rh.cargos dc,
                               dda_rh.tabelas_salariais dts,
                               dda_rh.faixas_salariais dfs,
                               dda_rh.reg_regioes dr1,
                               dda_rh.niveis_salariais dns,
                               (select b.cod, max(dt_ini_vig) dt
                                  from dda_rh.niveis_salariais b,
                                       dda_rh.cargos           a
                                 where a.fxsl_cod = b.rere_fxsl_cod
                                   and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
                                   and b.cod in ('1', '5')
                                 group by b.cod) mas
                         where dc.fxsl_tsal_cod = dts.cod
                           and dc.fxsl_tsal_cod = dfs.tsal_cod
                           and dc.fxsl_cod = dfs.cod
                           and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                           and dr1.fxsl_cod = dc.fxsl_cod
                           and dc.fxsl_cod = dns.rere_fxsl_cod
                           and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                        --   and dc.emp_cod = 1 --in (1 sesi, 2 senai)
                           and dc.emp_cod = tsal_emp_cod
                           and dc.emp_cod = dts.emp_cod
                           and dts.emp_cod = dfs.Tsal_Emp_Cod
                           and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                           and dr1.fxsl_tsal_emp_cod =
                               dns.rere_fxsl_tsal_emp_cod
                           and dns.cod ='1'
                           and dns.dt_ini_vig = mas.dt
                           and dc.dt_desativacao is null
                         group by nome,
                                  vlr_sal_real, 
                                  tsal_cod,
                                  dc.cod,
                                  dns.cod,
                                  dc.descr,
                                  dts.descr,
                                  dfs.cod,
                                  dfs.descr
                         order by vlr_sal_real, dc.cod desc) menor, 
                       (select nome,
                               vlr_sal_real, 
                               tsal_cod,
                               dc.cod cod_cargo,
                               dns.cod,
                               dc.descr,
                               dts.descr,
                               dfs.cod,
                               dfs.descr 
                          from dda_rh.cargos dc,
                               dda_rh.tabelas_salariais dts,
                               dda_rh.faixas_salariais dfs,
                               dda_rh.reg_regioes dr1,
                               dda_rh.niveis_salariais dns,
                               (select b.cod, max(dt_ini_vig) dt
                                  from dda_rh.niveis_salariais b,
                                       dda_rh.cargos           a
                                 where a.fxsl_cod = b.rere_fxsl_cod
                                   and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
                                   and b.cod in ('1', '5')
                                 group by b.cod) mas
                         where dc.fxsl_tsal_cod = dts.cod
                           and dc.fxsl_tsal_cod = dfs.tsal_cod
                           and dc.fxsl_cod = dfs.cod
                           and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                           and dr1.fxsl_cod = dc.fxsl_cod
                           and dc.fxsl_cod = dns.rere_fxsl_cod
                           and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                           and dts.cod in (30, 31, 32, 33) 
                       --    and dc.emp_cod = 1 --in (1 sesi, 2 senai)
                           and dc.emp_cod = tsal_emp_cod
                           and dc.emp_cod = dts.emp_cod
                           and dts.emp_cod = dfs.Tsal_Emp_Cod
                           and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                           and dr1.fxsl_tsal_emp_cod =
                               dns.rere_fxsl_tsal_emp_cod
                           and dns.cod ='5'
                           and dns.dt_ini_vig = mas.dt
                           and dc.dt_desativacao is null
                         group by nome,
                                  vlr_sal_real, 
                                  tsal_cod,
                                  dc.cod,
                                  dns.cod,
                                  dc.descr,
                                  dts.descr,
                                  dfs.cod,
                                  dfs.descr
                         order by vlr_sal_real, dc.cod desc) maior
                
                 where menor.cod_cargo = maior.cod_cargo
                 order by maior.vlr_sal_real desc) faixas, dim_cargos dc
        
         where salarios.car_cod = faixas.cod_cargo
         and   faixas.cod_cargo = dc.cod
         /*and   faixas.emp_cod = dc.emp_cod*/)FxSal
                 
        -------------------------------------------
         where chapa = vpro.matricula
           and emprg.emp_cod = gps.codigo_universal
           and vpro.cct_codigo = cct.codigo
           and cct.emp_cres_id = dcr.id(+)
           and vpro.gps_codigo = demp.gps_codigo
           and dpro.matricula = vpro.matricula
           and vpro.matricula = rcarg.remp_chapa
           and dcarg.cod = rcarg.car_cod  --ligacao a dim cargo com reg_cargo ja estava
           and emprg.emp_cod = rcarg.car_emp_cod
           and dcarg.emp_cod = emprg.emp_cod
           and cct.ano = dt.ano
           and p_ano = dt.ano
           and pc_mes = dt.mes
           and gps.idc_sistema_fiergs = 'S'
           and demp.id = gps.codigo
           and chapa = uniorg.remp_chapa
           AND chapa = adic.remp_chapa(+)
           and chapa = FxSal.remp_chapa(+)
           and ((emprg.dt_rescisao is null and
               (to_char(emprg.dt_admissao, 'rrrrmm') <=
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))) or
               (to_char(emprg.dt_admissao, 'rrrrmm') <=
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0) and
               to_char(emprg.dt_rescisao, 'rrrrmm') >=
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)))
           and uniorg.dt_mov IN
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_uniorgs u
                 Where u.remp_chapa = chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
           and rcarg.dt_mov IN
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_cargos u
                 Where u.remp_chapa = chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
        --
        Union
        --
        Select 'Entrada' TIPO,
               uniorg2.tipo_mov TIPO_MOV,
               chapa CHAPA,
               nvl(dcarg.id, -1) DCAR_ID,
               uniorg.uorg_cod cct,
               nvl(demp.id, -1) DEMP_ID,
               nvl(dt.id, -1) DT_ID,
               1 NUM_COLABORADORES,
               0 Carga_Horaria,
               0 DSITFUNC_ID,
               0 ID_MOT_DESLG,
               0 ID_MOT_FALTAS,
               '0',
               FLAG_SUBSTITUICAO,
               0,
               '0',
               0                     menor_faixa_sal,
               0                     maior_faixa_sal,
               '0'                   flag_maior_faixa,
               0                     ddesig_cod,
               0                     ddesig_id
          From dda_rh.reg_empregos      emprg,
               dda_rh.reg_uniorgs       uniorg,
               profissionais_vw         vpro,
               ctb_centros_custos_vw    cct,
               dda_rh.reg_cargos        rcarg,
               dim_empresas             demp,
               dim_profissionais        dpro,
               dim_cargos               dcarg,
               dim_tempo                dt,
               dim_centros_resp_lotacao dcr,
               grupos_pessoas           gps,
               
   -------------- Traz os Admitidos por Substituição - Flag_Substituição ----------------------
   
               (Select 'Admissão' tipo_mov,
                       u.remp_chapa remp_chapa,
                       u.dt_mov dt_mov,
                       decode(chapa, NULL, 'N', 'S') Flag_Substituicao
                  From dda_rh.reg_uniorgs u,
   
   --------------- Query vinda do Discoverer para identificar os Admitidos por Substituição --- 
                      
                       (select distinct chapa
                          from (SELECT REG_EMPREGOS.CHAPA as chapa
                                
                                  FROM DDA_RH.CARGOS                   CARGOS,
                                       DDA_RH.DOCUMENTOS               DOCS,
                                       DDA_RH.EMPRESAS                 EMPRESAS,
                                       DDA_RH.FILIAIS                  FILIAIS,
                                       DDA_RH.PESSOAS_FISICAS          PF,
                                       DDA_RH.REG_CARGOS               REG_CARGOS,
                                       DDA_RH.REG_EMPREGOS             REG_EMPREGOS,
                                       DDA_RH.REG_SALARIOS             REG_SALARIOS,
                                       DDA_RH.REG_UNIORGS              REG_UNIORGS,
                                       DDA_RH.UNIDADES_NEGOCIO         UNID_NEGOCIO,
                                       DDA_RH.UNIDADES_ORGANIZACIONAIS UNID_ORGANIZ,
                                       DDA_RH.REG_UNIORGS              UNI,
                                       DDA_RH.REG_FILIAIS              REG_FILIAIS
                                 WHERE ((CARGOS.EMP_COD =
                                       REG_CARGOS.CAR_EMP_COD AND
                                       CARGOS.COD = REG_CARGOS.CAR_COD) AND
                                       (EMPRESAS.COD = FILIAIS.EMP_COD) AND
                                       (EMPRESAS.COD = REG_EMPREGOS.EMP_COD) AND
                                       (FILIAIS.COD = REG_FILIAIS.FIL_COD AND
                                       FILIAIS.EMP_COD =
                                       REG_FILIAIS.FIL_EMP_COD) AND
                                       (PF.NUMERO = DOCS.PFIS_NUMERO(+)) AND
                                       (PF.NUMERO = REG_EMPREGOS.PFIS_NUMERO) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       UNI.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA = UNI.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_FILIAIS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_FILIAIS.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_CARGOS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_CARGOS.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_SALARIOS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_SALARIOS.REMP_CHAPA) AND
                                       (REG_EMPREGOS.EMP_COD =
                                       REG_UNIORGS.REMP_EMP_COD AND
                                       REG_EMPREGOS.CHAPA =
                                       REG_UNIORGS.REMP_CHAPA) AND
                                       (UNID_NEGOCIO.COD =
                                       UNID_ORGANIZ.UNEG_COD) AND
                                       (REG_UNIORGS.UORG_COD =
                                       UNID_ORGANIZ.COD))
                                   AND (UNID_ORGANIZ.EMP_COD =
                                       REG_EMPREGOS.EMP_COD)
                                   AND (REG_EMPREGOS.VINC_COD <> 9)
                                   AND (DOCS.TDOC_COD(+) = 7)
                                   AND (REG_SALARIOS.MMOV_COD = 1)
                                   AND (REG_CARGOS.MMOV_COD = 1 AND
                                       CARGOS.EMP_COD = REG_EMPREGOS.EMP_COD)
                                   AND (REG_EMPREGOS.DT_RESCISAO >=
                                       '01-01-1900')                                      
                                   AND UNI.DT_MOV IN
                                       (SELECT MAX(HH.DT_MOV)
                                          FROM DDA_RH.REG_UNIORGS HH
                                         WHERE HH.REMP_EMP_COD =
                                               UNI.REMP_EMP_COD
                                           AND HH.REMP_CHAPA = UNI.REMP_CHAPA
                                           AND UNI.REMP_EMP_COD > 0
                                           AND UNI.REMP_CHAPA > 0
                                         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)
                                   AND REG_FILIAIS.DT_MOV IN
                                       (SELECT MAX(HH.DT_MOV)
                                          FROM DDA_RH.REG_FILIAIS HH
                                         WHERE HH.REMP_EMP_COD =
                                               REG_FILIAIS.REMP_EMP_COD
                                           AND HH.REMP_CHAPA =
                                               REG_FILIAIS.REMP_CHAPA
                                         GROUP BY HH.REMP_EMP_COD, HH.REMP_CHAPA)                                
                                 ORDER BY REG_EMPREGOS.CHAPA ASC)) SUBS
                
                 Where u.dt_mov =
                       (Select MIN(uni.dt_mov)
                          From dda_rh.reg_uniorgs uni
                         Where uni.remp_chapa = u.remp_chapa)
                   and u.mmov_cod = 1
                   and u.remp_chapa = SUBS.chapa(+)
                
                --
                Union
                -- Movimentação Interna
                Select 'Mov. Interna Admissão' tipo_mov,
                       u.remp_chapa remp_chapa,
                       u.dt_mov dt_mov,
                       '0'
                  From dda_rh.reg_uniorgs u
                 Where u.dt_mov NOT IN
                       (Select MIN(uni.dt_mov)
                          From dda_rh.reg_uniorgs uni
                         Where uni.remp_chapa = u.remp_chapa)
                Union
                -- Transferencia entre casas
                Select 'Transferencia' tipo_mov,
                       u.remp_chapa remp_chapa,
                       u.dt_mov dt_mov,
                       '0'
                  From dda_rh.reg_uniorgs u
                 Where u.dt_mov =
                       (Select MIN(uni.dt_mov)
                          From dda_rh.reg_uniorgs uni
                         Where uni.remp_chapa = u.remp_chapa)
                   and u.mmov_cod = 7) uniorg2
         Where chapa = vpro.matricula
           and emprg.emp_cod = gps.codigo_universal
           and vpro.cct_codigo = cct.codigo
           and vpro.gps_codigo = demp.gps_codigo
           and dpro.matricula = vpro.matricula
           and vpro.matricula = rcarg.remp_chapa
           and cct.emp_cres_id = dcr.id(+)
           and dcarg.cod = rcarg.car_cod
           and rcarg.car_emp_cod = emprg.emp_cod
           and dcarg.emp_cod = emprg.emp_cod
           and gps.idc_sistema_fiergs = 'S'
           and demp.id = gps.codigo
           and uniorg.remp_chapa = uniorg2.remp_chapa
           and uniorg.dt_mov = uniorg2.dt_mov
           and cct.ano = dt.ano
           and p_ano = dt.ano
           and pc_mes = dt.mes
           and chapa = uniorg.remp_chapa
           and rcarg.dt_mov IN
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_cargos u
                 Where u.remp_chapa = chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0))
           and to_char(uniorg.dt_mov, 'rrrrmm') =
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
           and to_char(uniorg2.dt_mov, 'rrrrmm') =
               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
        --
        Union
        --
        Select 'Saída' TIPO,
               uniorg2.tipo_mov TIPO_MOV,
               emprg.chapa CHAPA,
               nvl(dcarg.id, -1) DCAR_ID,
               uniorg2.uorg_cod cct,
               nvl(demp.id, -1) DEMP_ID,
               nvl(dt.id, -1) DT_ID,
               1 NUM_COLABORADORES,
               0 Carga_Horaria,
               0,
               ID_MOT_DESLG,
               ID_MOT_FALTAS,
               '0',
               '0',
               0,
               '0',
               0                    menor_faixa_sal,
               0                    maior_faixa_sal,
               '0'                  flag_maior_faixa,
               0                    ddesig_cod,
               0                    ddesig_id
          From dda_rh.reg_empregos emprg,
               profissionais_vw vpro,
               ctb_centros_custos_vw cct,
               dda_rh.reg_cargos rcarg,
               dim_empresas demp,
               dim_profissionais dpro,
               dim_cargos dcarg,
               dim_centros_resp_lotacao dcr,
               grupos_pessoas gps,
               dim_tempo dt,
               (Select 'Mov. Interna Saída' tipo_mov,
                       u.remp_chapa chapa,
                       u.uorg_cod uorg_cod,
                       u.dt_mov dt_mov,
                       NULL ID_MOT_DESLG,
                       NULL ID_MOT_FALTAS
                  From dda_rh.reg_uniorgs u,
                       (Select MAX(u1.dt_mov) dt_mov, u1.remp_chapa chapa
                          From dda_rh.reg_uniorgs u1
                         Where to_char(u1.dt_mov, 'rrrrmm') =
                               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                         Group by u1.remp_chapa) dt
                
                 Where u.remp_chapa = dt.chapa
                   and dt.dt_mov > u.dt_mov
                   and u.dt_mov =
                       (Select MAX(u2.dt_mov) dt_dt_mov
                          From dda_rh.reg_uniorgs u2,
                               (Select MAX(u1.dt_mov) dt_mov,
                                       u1.remp_chapa chapa2
                                  From dda_rh.reg_uniorgs u1
                                 Where to_char(u1.dt_mov, 'rrrrmm') =
                                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                                 Group by u1.remp_chapa) dt
                         Where u2.remp_chapa = dt.chapa2
                           and dt.dt_mov > u2.dt_mov
                           and u2.remp_chapa = u.remp_chapa)
                --
                Union
                --
                
  ------------ Traz os Motivos de Desligamentos e Faltas ---------------------------------------
  
                Select 'Rescisão' tipo_mov,
                       uni.remp_chapa chapa,
                       uni.uorg_cod uorg_cod,
                       e.dt_rescisao dt_mov,
                       MD.id Id_Mot_Deslg,
                       MF.ID Id_Mot_Faltas 
                  From dda_rh.reg_empregos                 e,
                       dda_rh.reg_uniorgs                  uni,
                       Dim_Motivos_Desligamentos           md, 
                       dda_rh.reg_rescisoes                rr,
                       dda_rh.Motivos_Absentismos_Punicoes rmap,
                       Dim_Motivos_Faltas                   mf 
                 Where e.chapa = uni.remp_chapa
                   AND e.tidl_cod = md.cod(+)
                   AND rr.remp_chapa(+) = e.chapa
                   AND rr.mapa_cod = mf.cod(+)
                   AND rmap.cod(+) = rr.mapa_cod
                   and uni.dt_mov =
                       (Select MAX(u3.dt_mov)
                          From dda_rh.reg_uniorgs u3
                         Where to_char(e.dt_rescisao, 'rrrrmm') =
                               lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                           and u3.remp_chapa = e.chapa)) uniorg2
        
         Where emprg.chapa = vpro.matricula
           and emprg.emp_cod = gps.codigo_universal
           and vpro.cct_codigo = cct.codigo
           and vpro.gps_codigo = demp.gps_codigo
           and dpro.matricula = vpro.matricula
           and vpro.matricula = rcarg.remp_chapa
           and cct.emp_cres_id = dcr.id(+)
           and dcarg.cod = rcarg.car_cod
           and rcarg.car_emp_cod = emprg.emp_cod
           and dcarg.emp_cod = emprg.emp_cod
           and gps.idc_sistema_fiergs = 'S'
           and demp.id = gps.codigo
           and emprg.chapa = uniorg2.chapa
           and cct.ano = dt.ano
           and p_ano = dt.ano
           and pc_mes = dt.mes
           and rcarg.dt_mov =
               (Select MAX(u.dt_mov)
                  From dda_rh.reg_cargos u, dda_rh.reg_empregos e
                 Where u.remp_chapa = e.chapa
                   and to_char(u.dt_mov, 'rrrrmm') <=
                       lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)
                   and e.chapa = chapa);
    --
    Type c_tmp_rh_Type Is Table Of c_tmp_rh%Rowtype Index By Pls_Integer;
    l_Crh c_tmp_rh_Type;
    --
    Cursor c_fat_rh Is
      Select dtpmov.Id Dtpmov_Id,
             f.Dpro_Id Dpro_Id,
             f.Dcarg_Id Dcarg_Id,
             nvl(cct.Duorg_Id, 0) Duorg_Id,
             nvl(cct.Dcr_Id, 0) Dcr_Id,
             f.Demp_Id Demp_Id,
             f.Dt_Id Dt_Id,
             f.Qtd_Pessoas Num_Pessoas,
             f.carga_horaria Horas_Contratada,
             0 Horas_Util,
             0 Saldo_Horas,
             0 DUORG,
             0 dcr,
             0 ch,
             0 alocacao,
             f.dsitfunc_id,
             f.dmotfalt_id,
             f.dmotdesl_id,
             f.flag_extra_cargo,
             f.flag_substituicao,
             f.conta_func_adic,
             f.flag_adicionais,
             f.menor_faixa_sal,
             f.maior_faixa_sal,
             f.flag_maior_faixa,
             f.ddesig_cod,
             f.ddesig_id
        From Fat_RH_Tmp f,
             Cct_Rh_Tmp               cct,
             Dim_Tipo_Mov_Rh          dtpmov
       Where f.Cct = cct.Cct_Rh(+)
         and f.tipo_2 = dtpmov.tipo_mov_2;
    --
    Type c_fat_rh_Type Is Table Of c_fat_rh%Rowtype Index By Pls_Integer;
    l_Cfat c_fat_rh_Type;
    --
    Cursor c_atlz_cargo(pc_mes Number) Is
      Select Distinct dcarg.id Dcarg_Id, reg.chapa Dpro_Id, dt.Id Dt_Id
        From (Select Distinct td.descricao,
                              rd.remp_chapa,
                              0               emp,
                              rd.remp_emp_cod,
                              rd.dt_ini_vig,
                              rd.dt_fim_vig,
                              td.cod          tpde_cod
                From dda_rh.reg_designacoes  rd,
                     dda_rh.tipos_designacao td,
                     dda_rh.Reg_Empregos     emprg
               Where td.cod = rd.tpde_cod
                 and rd.remp_chapa = emprg.chapa
                 and rd.remp_emp_cod = emprg.emp_cod
                 and (rd.dt_ini_vig IN
                     (Select MAX(rd2.dt_ini_vig)
                         From dda_rh.reg_designacoes rd2
                        Where rd2.remp_chapa = emprg.chapa
                          and to_char(rd2.dt_ini_vig, 'rrrrmm') <=
                              lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0)) or
                     rd.dt_ini_vig is null)) t1,
             dim_cargos dcarg,
             dda_rh.reg_empregos reg,
             dda_rh.reg_cargos reg_car,
             dim_tempo dt
       Where reg_car.remp_chapa = reg.chapa
         and reg_car.remp_emp_cod = reg.emp_cod
         and t1.emp = dcarg.emp_cod
         and t1.tpde_cod = dcarg.cod
         and t1.remp_chapa = reg.chapa
         and t1.remp_emp_cod = reg.emp_cod
         and dt.ano_mes between to_char(t1.dt_ini_vig, 'rrrrmm') and
             (lpad(p_ano, 4, 0) || lpad(pc_mes, 2, 0));
    --
    Type c_atlz_cargo_Type Is Table Of c_atlz_cargo%Rowtype Index By Pls_Integer;
    l_Ccarg c_atlz_cargo_Type;
    --


    -- Busca a alocação da folha de pagamento
    Cursor c_alocacao_folha Is
      Select 6
           , frh.dpro_id
           , frh.dcarg_id
           , frh.duorg_lot_id
           , frh.dcr_lot_id
           , frh.demp_id
           , frh.dt_id
           , 0 n_colaboradores
           , frh.horas_contratada
           , frh.horas_util
           , frh.saldo_horas
           , bi_util_pck.bi_consultaCctUo(cct.codigo) duorg
           , bi_util_pck.bi_consultaCctCr(cct.codigo) dcr
           , (prch.proporcao * frh.horas_contratada) /100 Horas
           , prch.proporcao
           ,frh.dsitfunc_id
           ,frh.dmotfalt_id
           ,frh.dmotdesl_id
           ,'0'                                      flag_extra_cargo 
           ,'0'                                      flag_substituicao
           ,0                                        conta_func_adicionais
           ,'0'                                      flag_adicionais
           ,0                                        menor_faixa_sal
           ,0                                        maior_faixa_sal
           ,'0'                                      flag_maior_faixa
           ,0                                        ddsig_cod
           ,0                                        ddesig_id
        From dda_rh.grupo_chapa_proporcoes    grch
           , dda_rh.proporcao_chapas          prch
           , dda_bi.fat_RH      frh
           , dda_bi.dim_tempo                 dt
           , dda.centros_de_custo             cct
       Where frh.num_pessoas                  = 1
      --   and grch.remp_emp_cod                != 1 -- Não esta levando o SESI, ainda não foi validado
         and grch.dt_atualizacao              = prch.grch_dt_atualizacao
         and grch.remp_chapa                  = prch.grch_remp_chapa
         and grch.remp_emp_cod                = prch.grch_remp_emp_cod
         and frh.dpro_id                      = grch.remp_chapa
         and frh.dtpmov_id                    = 05
         and frh.dt_id                        = dt.id
         and to_char(prch.grch_dt_atualizacao, 'YYYY') || to_char(prch.grch_dt_atualizacao, 'MM') = dt.ano_mes
         and dt.ano                           = p_ano
      --   and cct.codigo_contabil              = prch.uorg_cod
       and (CASE
               WHEN decode(REGEXP_INSTR(cct.Codigo_Contabil, '[^[:digit:]]'),
                           0,
                           'NUMBER',
                           'NOT_NUMBER') = 'NOT_NUMBER' THEN
                0
               ELSE
                TO_NUMBER(cct.Codigo_Contabil)
             END) = prch.uorg_cod
         and (cct.situacao = 'A'
          or to_char(cct.data_desativacao, 'YYYY')||
          to_char(cct.data_desativacao, 'MM') >= DT.ANO_MES );
    --
    Type c_alocacao_folha_Type Is Table Of c_alocacao_folha%Rowtype Index By Pls_Integer;
    l_alocacao_folha c_alocacao_folha_Type;
    --


    --
    -- Profissionais sem alocação, inclui 100% no CC de lotação
    Cursor c_sem_alocacao Is
      Select 6
           , f.dpro_id
           , f.dcarg_id
           , f.duorg_lot_id      duorg_lot
           , f.dcr_lot_id        dcr_lot
           , f.demp_id
           , f.dt_id
           , 0                   n_colaboradores
           , f.horas_contratada
           , f.horas_util
           , f.saldo_horas
           , f.duorg_lot_id      duorg_id
           , f.dcr_lot_id        dcr_id
           , f.horas_contratada  Horas
           , 100                 alocacao
           ,f.dsitfunc_id
           ,f.dmotfalt_id
           ,f.dmotdesl_id
           ,0                    flag_extra_cargo    
           ,0                    flag_substituicao
           ,0                    conta_func_adicionais
           ,'0'                  flag_adicionais
           ,0                    menor_faixa_sal
           ,0                    maior_faixa_sal
           ,'0'                  flag_maior_faixa
           ,0                    ddesig_cod
           ,0                    ddesig_id
        From DDA_BI.fat_RH f
           , DDA_BI.dim_tempo            dt
       Where f.dpro_id not in (Select ff.dpro_id
                                 From DDA_BI.fat_RH ff
                                Where ff.dtpmov_id = 6
                                  And ff.dt_id     = f.dt_id
                                  And ff.dpro_id   = f.dpro_id
                             Group by ff.dpro_id
                          Having count(*) >= 1)
         And f.dtpmov_id = 5
       --  And f.demp_id != 2 -- Não esta levando o SESI, ainda não foi validado
         And f.dt_id = dt.id
         And dt.ano = lpad(p_ano, 4, 0);
    --
    Type c_sem_alocacao_Type Is Table Of c_sem_alocacao%Rowtype Index By Pls_Integer;
    l_sem_alocacao c_sem_alocacao_Type;
    ---


      -- Cursor que remove a alocação duplicada de funcionários que estão lotados em 2 cc
  Cursor c_remove_prof_duplicados Is
    select count(*) count
         , f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_cod
         , f.ddesig_id
      from fat_Rh f
         , dim_tempo            dt
     where f.dtpmov_id = 5
     and f.dt_id = dt.id
     and dt.ano = p_ano
     group by f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_cod
         , f.ddesig_id
     having count(*) > 1;

     v_reg_prof  c_remove_prof_duplicados%Rowtype;



 Cursor c_remove_aloc_duplicados Is
  select count(*) count
         , f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_cod
         , f.ddesig_id
      from fat_RH f
         , dim_tempo            dt
     where f.dtpmov_id = 5
     and f.dt_id = dt.id
     and dt.ano = p_ano
     group by f.horas
         , f.percentual_alocacao
         , f.horas_util
         , f.saldo_horas
         , f.dtpmov_id
         , f.dpro_id
         , f.dcarg_id
         , f.demp_id
         , f.dt_id
         , f.num_pessoas
         , f.horas_contratada
         , f.dsitfunc_id
         , f.dmotfalt_id
         , f.dmotdesl_id
         , f.flag_extra_cargo
         , f.flag_substituicao
         , f.conta_func_adic
         , f.flag_adicionais
         , f.menor_faixa_sal
         , f.maior_faixa_sal
         , f.flag_maior_faixa
         , f.ddesig_cod
         , f.ddesig_id
     having count(*) > 1;

  v_Reg_aloc  c_remove_aloc_duplicados%Rowtype;
    --
    --

    v_limite Number := 10000;
    i        number := 1;
    pc_mes   number := nvl(p_mes, to_char(sysdate, 'mm'));
    --
  Begin
    --
    Execute Immediate 'truncate table FAT_RH_TMP';
    Bi_Util_Pck.Desabilita_Indices_Prc('FAT_RH_TMP');
    --
    For idx in 1 .. pc_mes Loop
      Open c_tmp_rh(idx);
      Loop
        Fetch c_tmp_rh Bulk Collect
          Into l_Crh LIMIT v_limite;
        Forall i In 1 .. l_Crh.Count
          Insert into Fat_rh_tmp values l_Crh (i);
        Commit;
        Exit when l_Crh.COUNT < v_limite;
      End loop;
      Close c_tmp_rh;
      Commit;
    End Loop;
    --
    Bi_Util_Pck.Rebuild_Indices_Prc('FAT_RH_TMP');
    Execute Immediate 'truncate table CCT_RH_TMP';
    Bi_Util_Pck.Desabilita_Indices_Prc('CCT_RH_TMP');
    Bi_Universal_rh_Cct_Prc(p_ano);
    Bi_Util_Pck.Rebuild_Indices_Prc('CCT_RH_TMP');
    Dim_Tipo_Mov_Rh_Prc;
    --
    Bi_Util_Pck.Desabilita_Indices_Prc('FAT_RH');
    Bi_Util_Pck.Exclusao_Dados_Prc('FAT_RH',1,p_ano);
    
    --
    Open c_fat_rh;
    Loop
      Fetch c_fat_rh Bulk Collect
        Into l_Cfat Limit v_Limite;
      Forall i in 1 .. l_Cfat.Count
        Insert Into Fat_Rh Values l_Cfat (i);
      Exit When l_Cfat.Count < v_Limite;
      Commit;
      --
    End loop;
    Commit;
    --

   Open c_alocacao_folha;
    Loop
      Fetch c_alocacao_folha Bulk Collect
        Into l_alocacao_folha Limit v_Limite;
      Forall i in 1 .. l_alocacao_folha.Count
        Insert Into Fat_RH Values l_alocacao_folha (i);
      Exit When l_alocacao_folha.Count < v_Limite;
      Commit;
      --
    End loop;
    Close c_alocacao_folha;

    --
    --
-------comentado pois esta parado nesse ponto ao rodar a package ----------------
/*    Open c_sem_alocacao;
      Loop
       Fetch c_sem_alocacao Bulk Collect
          Into l_sem_alocacao Limit v_Limite;
        Forall i in 1 .. l_sem_alocacao.Count
          Insert Into Fat_RH Values l_sem_alocacao (i);
        Exit When l_sem_alocacao.Count < v_Limite;
        Commit;
      --
      End loop;
    Close c_sem_alocacao;*/
------- decomentar depois de ajustar a package ----------------------------------
    --
      Open c_remove_prof_duplicados;
    Loop
      --
      Fetch c_remove_prof_duplicados Into v_reg_prof;
      Exit When c_remove_prof_duplicados%Notfound;

      Update fat_Recursos_Humanos f
         Set f.num_pessoas           = v_reg_prof.Num_Pessoas / v_reg_prof.Count
       Where f.dtpmov_id             = v_reg_prof.dtpmov_id
         And f.dpro_id               = v_reg_prof.Dpro_Id
         And f.dcarg_id              = v_reg_prof.Dcarg_Id
         And f.demp_id               = v_reg_prof.Demp_Id
         And f.dt_id                 = v_reg_prof.Dt_Id;

       End Loop;
       Close c_remove_prof_duplicados;
       commit;


  Open c_remove_aloc_duplicados;
    Loop
      --
      Fetch c_remove_aloc_duplicados Into v_Reg_aloc;
      Exit When c_remove_aloc_duplicados%Notfound;

      Update fat_RH f
         Set f.horas                 = f.horas  / v_Reg_aloc.Count
           , f.percentual_alocacao   = f.percentual_alocacao / v_Reg_aloc.Count
       Where f.dtpmov_id             = 6
         And f.dpro_id               = v_Reg_aloc.Dpro_Id
         And f.dcarg_id              = v_Reg_aloc.Dcarg_Id
         And f.demp_id               = v_Reg_aloc.Demp_Id
         And f.dt_id                 = v_Reg_aloc.Dt_Id;

       End Loop;
       Close c_remove_aloc_duplicados;
       commit;

    INSERE_SIT_FUNC_PRC;

    --
    Bi_Util_Pck.Rebuild_Indices_Prc('FAT_RH');
    Execute Immediate 'truncate table CCT_RH_TMP';
  --  Execute Immediate 'truncate table FAT_RH_TMP';
    --
    /*For idx in 1 .. pc_mes Loop
      Open c_atlz_cargo(idx);
        Loop
          Fetch c_atlz_cargo Bulk Collect Into l_Ccarg Limit v_limite;
          --
          For indx In 1 .. l_Ccarg.Count Loop
           Update Fat_Recursos_Humanos Set dcarg_id = l_Ccarg(indx).dcarg_Id
            Where Dpro_Id = l_Ccarg(indx).dpro_Id
              And Dt_Id = l_Ccarg(indx).Dt_id;
              --And Dpro_Id = 175331;
          End Loop;
            Exit When l_Ccarg.Count < v_limite;
          Commit;
        End Loop;
        Commit;
      Close c_atlz_cargo;
    End Loop;*/
    --
    Exception
      When Others Then
        Pla_Gera_Log_Bi_Prc( p_Erro_Sql   => Sqlerrm
                           , p_Msg        => 'Erro inesperado'
                           , p_Tab        => 'FAT_REC_HUMAN_PRC'
                           , p_Ctb_Pre_Id => 0
                           , p_Tipo       => 'INSERIR' );
  --
  End Fat_Recursos_Humanos_Prc;
  --
  Procedure Bi_Universal_rh_Cct_Prc(P_ano Number) Is
    Cursor c_tmp_cct(p_data Date := null) Is
      Select Distinct T1.cct_codigo,
                      T1.cct,
                      bi_Util_Pck.bi_ConsultaUoId(v.EMP_UORG_ID,
                                                  v.EMP_EMP_ID,
                                                  'ANF-ERP') Duorg_Id,
                      bi_Util_Pck.bi_ConsultaCrId(v.Emp_Cres_Id,
                                                  v.EMP_EMP_ID,
                                                  'ANF-ERP') Dcr_Id
        From (Select To_Number(Uni.Uorg_cod) Cct,
                     To_Number(Uni.Uorg_emp_cod) Empresa,
                     To_Number(Uni.Sinonimo) Cct_codigo
                From dda_rh.Sinonimos_Unor Uni
               Where Uni.Uorg_Emp_Cod = 2
              Union All
              Select Cct.Cct_Codigo       Cct,
                     Gps.Codigo_Universal Empresa,
                     Cct.Cct_Codigo       Cct_Codigo
                From Ctb_Centros_Custos_Vw Cct, Grupos_Pessoas Gps
               Where Cct.Ano = P_ano
                 And Gps.Codigo Not In (3, 4, 2)
                 And Cct.Emp_Emp_Id = Gps.Codigo
              Union All
              /*Select Decode(Cct.Codigo_Contabil,
                            'CLASSIFICAR',
                            0,
                            To_Number(Cct.Codigo_Contabil)) Cct,*/
                Select TO_NUMBER(CASE
                                 WHEN decode(REGEXP_INSTR(Cct.Codigo_Contabil,
                                                          '[^[:digit:]]'),
                                             0,
                                             'NUMBER',
                                             'NOT_NUMBER') = 'NOT_NUMBER' THEN
                                  0
                                 ELSE
                                  TO_NUMBER(Cct.Codigo_Contabil)
                               END) Cct,
                     Gps.Codigo_Universal Empresa,
                     Cct.Codigo Cct_Codigo
                From Centros_De_Custo   Cct,
                     Grupos_Pessoas     Gps,
                     Centros_Atividades Cat
               Where Cct.Cat_Codigo = Cat.Codigo
                 And Cat.Gps_Codigo = Gps.Codigo
                 And p_ano  Between to_char(Cct.Data_Instalacao,'rrrr') And
                     to_char(nvl(Cct.Data_Desativacao, sysdate),'rrrr') ) T1,
             (Select Distinct cct From Fat_RH_Tmp) f,
             Ctb_Centros_Custos_Vw v
       Where t1.cct = f.cct
         And v.ano = p_ano
         And t1.cct_Codigo = v.codigo;
    --
    Type c_tmp_cct_Type Is Table Of c_tmp_cct%Rowtype Index By Pls_Integer;
    l_Ccct c_tmp_cct_Type;
    --
    v_limite Number := 10000;
  Begin
    Open c_tmp_cct;
    Loop
      Fetch c_tmp_cct Bulk Collect
        Into l_Ccct Limit v_Limite;
      Forall i in 1 .. l_Ccct.Count
        Insert Into Cct_Rh_Tmp Values l_Ccct (i);
      Exit When l_Ccct.Count < v_Limite;
      Commit;
      --
    End loop;
    Commit;
  End;
  --
  Procedure Dim_Tipo_Mov_Rh_Prc Is
  Begin
    Merge Into Dim_Tipo_Mov_Rh dtpmov
    Using (Select Distinct Tipo Tipo_Mov_1, Tipo_2 Tipo_Mov_2
             From Fat_RH_Tmp
           Union
           Select 'Alocação' Tipo_Mov_1, 'Alocação' Tipo_Mov_2
             from dual  ) ftpmov
    On (dtpmov.Tipo_Mov_2 = ftpmov.Tipo_Mov_2)
    When Matched Then
      Update Set dtpmov.Tipo_Mov_1 = ftpmov.Tipo_Mov_1
    When Not Matched Then
      Insert
        (Id, Tipo_Mov_1, Tipo_Mov_2)
      Values
        (dtpmov_seq.nextval, ftpmov.Tipo_Mov_1, ftpmov.Tipo_Mov_2);
    Commit;
  End;
  
Procedure Insere_Sit_Func_prc is

  Cursor Ins_RH is
  
    select rsit_remp_chapa, rsit_sfun_cod, dt_ini_vig
      from dda_rh.reg_afastamentos a;

  Type Ins_RH_TYPE is table of Ins_RH%rowtype index by pls_integer;
  L_Ins_RH Ins_RH_Type;

  v_rsit_remp_chapa dda_rh.reg_afastamentos.rsit_remp_chapa%type;
  v_rsit_sfun_cod   dda_rh.reg_afastamentos.rsit_sfun_cod%type;
  v_dt_ini_vig      dda_rh.reg_afastamentos.dt_ini_vig%type;
  v_limite          number := 10000;

begin

  open Ins_RH;
  Loop
    Fetch Ins_RH bulk collect
      into L_Ins_RH limit v_limite;
    for i in 1 .. L_Ins_RH.count loop
    
      update Fat_RH a
         set Dsitfunc_id =
             (select max(id)
                from Dim_Situacoes_Funcionais b
               where L_Ins_RH(i).rsit_sfun_cod = b.cod)
       where dpro_id = L_Ins_RH(i).rsit_remp_chapa
         and dt_id = (to_char(L_Ins_RH(i).dt_ini_vig, 'YYYYMM'))
         and dtpmov_id = 1
         and dtpmov_id <> 6;
    
      update fat_rH
         set dsitfunc_id =
             (select max(ID) from Dim_Situacoes_Funcionais b where cod = 1)
       where dpro_id = L_Ins_RH(i).rsit_remp_chapa
            -- and dt_id = (to_char(v_dt_ini_vig,'YYYYMM'))
         and dtpmov_id <> 1;
      -- and dtpmov_id = 5;
    
    end loop;
  
    exit when L_Ins_RH.count < v_limite;
  
  end loop;
  close Ins_RH;

  update fat_rh
     set dsitfunc_id =
         (select id from dim_situacoes_funcionais where cod = 0)
   where dsitfunc_id is null;

  commit;
           
end Insere_Sit_Func_prc;

  

  
  --
End Bi_RH_Pck;


----------------ULTIMA QUERY ENTREGUE ANTES DA HOMOLOGACAO JA COM OS AJSUTES DE PRODUCAO---------------


--- CONSULTA ALTERADA E PRODUCAO PARA RESOLVER PROBLEMA DOS QUE NAO ESTAVAM VINDO -------
--- AGORA TROUXE MAS EM PRODUCAO VIERAM ALGUNS CARGOS A MENOS POR EXEMPLO, 9518 ----
---1324 Senai OK com produção -----

--select count(*) from (
select remp_chapa, car_cod, faixas.nome, menor_sal, maior_sal, vlr_final
  from (select /*localz,*/
         carg_desig.remp_chapa,
         nvl(DDA_BI.busca_designados(carg_desig.remp_chapa), car_cod) car_cod, /*vlr_mult/h.hrs_teor_mes vlr_final,*/
         round(case
                 when carga_horaria <> 1 then
                  (vlr_mult / h.hrs_teor_mes)
                 else
                  (vlr_mult / ((h.hrs_teor_sem * 4.5) + (h.hrs_teor_sem * 4.5) / 6))
               end,
               2) vlr_final,
         max(rh.dt_mov)
          from (select remp_chapa,
                       car_cod,
                       carga_horaria,
                       vlr_mult,
                       max(localz)
                  from (select '2' as localz,
                               mc.remp_chapa,
                               rd.car_cod,
                               chc.carga_horaria,
                               (vlr * chc.carga_horaria) vlr_mult
                          from (select remp_emp_cod, remp_chapa, sum(vlr) vlr
                                  from dda_rh.movimentos_calculados mc
                                 where even_cod in (840, 883, 863, 938)
                                   and to_char(dt_comp, 'yyyymmdd') =
                                       '20170331'
                                --     and mc.remp_chapa = 214264/*28422/*/--2022510--*/--175331
                                 group by remp_emp_cod, remp_chapa) mc,
                               dda_rh.reg_cargos c,
                               (select remp_chapa, max(dt_mov) max_dt
                                  from dda_rh.reg_cargos
                                 group by remp_chapa) max,
                               dda_rh.reg_cargas_horarias_cargo chc,
                               dda_rh.reg_empregos re,
                               dda_rh.reg_designacoes rd
                        
                         where mc.remp_emp_cod = c.car_emp_cod
                           and mc.remp_chapa = c.remp_chapa
                           and chc.car_emp_cod = c.car_emp_cod
                           and chc.car_cod = c.car_cod
                           and max.remp_chapa = mc.remp_chapa
                           and re.emp_cod = mc.remp_emp_cod
                           and re.chapa = mc.remp_chapa
                           and rd.remp_emp_cod(+) = mc.remp_emp_cod
                           and rd.remp_chapa(+) = mc.remp_chapa
                           and (re.dt_rescisao is null or
                               to_char(re.dt_rescisao, 'yyyymmdd') >
                               '20170331')
                           and c.car_cod >= 4500
                           and max.max_dt = c.dt_mov
                           and c.car_emp_cod = 1
                           and rd.dt_fim_vig is null
                        
                        -------------------------------------------------------------------------------
                        
                        union
                        
                        select '1',
                               mc.remp_chapa,
                               rc.car_cod,
                               chc.carga_horaria,
                               (vlr * chc.carga_horaria) /*,busca_designados(mc.remp_chapa)*/ --mc.remp_chapa, vlr 
                          from --- traz uma linha por chapa, somados os valores de acordo com os eventos ---
                               (select remp_chapa, sum(vlr) vlr
                                  from dda_rh.movimentos_calculados mc
                                 where even_cod in (840, 883, 863, 938)
                                   and to_char(dt_comp, 'yyyymmdd') =
                                       '20170331'
                                --      and mc.remp_chapa = /*28422*/2022510----175331
                                 group by remp_chapa) mc,
                               ------------------------------------------------------------------------------
                               ---busca os cargos e a carga horaria do cargo---------------------------------
                               dda_rh.reg_cargos rc,
                               (select remp_chapa, max(dt_mov) max_dt_mov
                                  from dda_rh.reg_cargos rcg
                                 where to_char(dt_mov, 'yyyymmdd') <=
                                       '20170331'
                                 group by remp_chapa) max_cargo,
                               dda_rh.reg_cargas_horarias_cargo chc,
                               dda_rh.reg_empregos re
                         where mc.remp_chapa = rc.remp_chapa
                           and rc.car_cod = chc.car_cod
                           and rc.car_emp_cod = chc.car_emp_cod
                           and mc.remp_chapa = re.chapa
                           and (re.dt_rescisao is null or
                               to_char(re.dt_rescisao, 'yyyymmdd') >
                               '20170331')
                           and rc.dt_mov = max_cargo.max_dt_mov
                              --  and to_char(rc.dt_mov, 'yyyymmdd') <= '20170331'
                           and rc.remp_chapa = max_cargo.remp_chapa
                           and rc.car_cod > 4500
                           and rc.remp_emp_cod = 1)
                 group by remp_chapa, car_cod, carga_horaria, vlr_mult
                
                ) carg_desig,
               dda_rh.reg_horarios rh,
               dda_rh.horarios h
         where carg_desig.remp_chapa = rh.remp_chapa
              
           and rh.hor_cod = h.cod
           and rh.hor_emp_cod = h.emp_cod
           and rh.dt_mov =
               (select max(dt_mov)
                  from dda_rh.reg_horarios
                 where remp_chapa = carg_desig.remp_chapa /*214264*/
                   AND TO_CHAR(dt_mov, 'YYYYMMDD') <= '20170331')
         group by /*localz,*/ carg_desig.remp_chapa,
                  nvl(DDA_BI.busca_designados(carg_desig.remp_chapa),
                      car_cod),
                  round(case
                          when carga_horaria <> 1 then
                           (vlr_mult / h.hrs_teor_mes)
                          else
                           (vlr_mult /
                           ((h.hrs_teor_sem * 4.5) + (h.hrs_teor_sem * 4.5) / 6))
                        end,
                        2)) salarios
       
      ,
       
       (select menor.nome,
               menor.cod_cargo,
               menor.vlr_sal_real menor_sal,
               maior.vlr_sal_real maior_sal
          from (select nome,
                       dc.cod cod_cargo,
                       max(vlr_sal_real)vlr_sal_real--, /*dns.dt_ini_vig,*/
                      -- tsal_cod,
                       
                      -- dns.cod,
                     --  dc.descr,
                     --  dts.descr,
                     --  dfs.cod,
                     --  dfs.descr --, max(dns.dt_ini_vig)dat
                  from dda_rh.cargos dc,
                       dda_rh.tabelas_salariais dts,
                       dda_rh.faixas_salariais dfs,
                       dda_rh.reg_regioes dr1,
                       dda_rh.niveis_salariais dns--,
                       /*(select b.cod, max(dt_ini_vig) dt
                          from dda_rh.niveis_salariais b, dda_rh.cargos a
                         where a.fxsl_cod = b.rere_fxsl_cod
                           and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
                           and b.cod in ('1'\*, '5'*\)
                         group by b.cod) mas*/
                 where dc.fxsl_tsal_cod = dts.cod
                   and dc.fxsl_tsal_cod = dfs.tsal_cod
                   and dc.fxsl_cod = dfs.cod
                   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                   and dr1.fxsl_cod = dc.fxsl_cod
                   and dc.fxsl_cod = dns.rere_fxsl_cod
                   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                   and dc.emp_cod = 1 --in (1 sesi, 2 senai)
                   and dc.emp_cod = tsal_emp_cod
                   and dc.emp_cod = dts.emp_cod
                   and dts.emp_cod = dfs.Tsal_Emp_Cod
                   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                   and dns.cod in ('1' /*,'5'*/)
             --      and dns.dt_ini_vig = mas.dt
                   and dc.dt_desativacao is null
                   and to_char(to_date('01/03/2017','dd/mm/yyyy')) >= dns.dt_ini_vig
                 group by nome,
                 dc.cod/*,
                          vlr_sal_real, \*dns.dt_ini_vig,*\
                          
                          dc.cod,
                          dns.cod,
                          dc.descr,
                          dts.descr,
                          dfs.cod,
                          dfs.descr*/
                 order by vlr_sal_real, dc.cod desc) menor,
               
               (select nome,
                       dc.cod cod_cargo,
                       max(vlr_sal_real)vlr_sal_real--, /*dns.dt_ini_vig,*/
                       /*tsal_cod,
                       
                       dns.cod,
                       dc.descr,
                       dts.descr,
                       dfs.cod,
                       dfs.descr*/ --, max(dns.dt_ini_vig)dat
                  from dda_rh.cargos dc,
                       dda_rh.tabelas_salariais dts,
                       dda_rh.faixas_salariais dfs,
                       dda_rh.reg_regioes dr1,
                       dda_rh.niveis_salariais dns--,
                      /* (select b.cod, max(dt_ini_vig) dt
                          from dda_rh.niveis_salariais b, dda_rh.cargos a
                         where a.fxsl_cod = b.rere_fxsl_cod
                           and a.fxsl_tsal_cod = b.rere_fxsl_tsal_cod
                           and b.cod in (\*'1',*\ '5')
                         group by b.cod) mas*/
                 where dc.fxsl_tsal_cod = dts.cod
                   and dc.fxsl_tsal_cod = dfs.tsal_cod
                   and dc.fxsl_cod = dfs.cod
                   and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                   and dr1.fxsl_cod = dc.fxsl_cod
                   and dc.fxsl_cod = dns.rere_fxsl_cod
                   and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                   and dts.cod in (30, 31, 32, 33) ---------------------------------colocado por ultimo, falta testar
                   and dc.emp_cod = 1 --in (1 sesi, 2 senai)
                   and dc.emp_cod = tsal_emp_cod
                   and dc.emp_cod = dts.emp_cod
                   and dts.emp_cod = dfs.Tsal_Emp_Cod
                   and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                   and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                   and dns.cod in ( /*'1',*/ '5')
               --    and dns.dt_ini_vig = mas.dt
                   and dc.dt_desativacao is null
                   and to_char(to_date('01/03/2017','dd/mm/yyyy')) >= dns.dt_ini_vig
                 group by nome,
                 dc.cod--,
                         /* vlr_sal_real-*/--, /*dns.dt_ini_vig,*/
                         /* 
                          ,
                          dns.cod,
                          dc.descr,
                          dts.descr,
                          dfs.cod,
                          dfs.descr*/
                 --order by vlr_sal_real, dc.cod desc
                 ) maior
        
         where menor.cod_cargo = maior.cod_cargo
         order by maior.vlr_sal_real desc) faixas

 where salarios.car_cod = faixas.cod_cargo
 and car_cod is not null
    
 --AND remp_chapa = 103837

--) where vlr_final > maior_sal


--- consultas de validação dos dados carregados estrutura remuneratoria
--faixas e cargos
select /*distinct*/ dpro_id,descricao, ddesig_cod, /*cod,*/ a.demp_id, /*b.emp_cod,*/ menor_faixa_sal, maior_faixa_sal  
from dda_bi.fat_recursos_humanos a, dda_bi.dim_cargos b 
where a.ddesig_cod = b.cod
--and   a.demp_id = b.emp_cod
and maior_faixa_sal is not null
and demp_id = 4
and b.emp_cod = 2
and dt_id = 201703
--and dpro_id = 175331-- 160369
and dtpmov_id = 5
order by maior_faixa_sal desc

--adicionais
select dpro_id,sum(conta_func_adic)
from dda_bi.FAT_Recursos_humanos t 
WHERE FLAG_adicionais ='S' 
AND DT_ID = '201703'
AND DEMP_ID = 4 
group by dpro_id 
ORDER BY DPRO_ID

-- extra-cargo

select dpro_id
from dda_bi.FAT_Recursos_humanos t 
WHERE FLAG_extra_cargo ='S' 
AND DT_ID = '201703' 
AND DEMP_ID = 4 
ORDER BY DPRO_ID

select count(*)
from dda_bi.FAT_Recursos_humanos t 
WHERE FLAG_extra_cargo ='S' 
AND DT_ID = '201703' 
AND DEMP_ID = 4 
ORDER BY DPRO_ID

-- ultrapassam faixa

select count(*)
from dda_bi.FAT_Recursos_humanos t 
WHERE FLAG_maior_faixa ='S' 
AND DT_ID = '201703' 
AND DEMP_ID = 4 
ORDER BY DPRO_ID

select dpro_id
from dda_bi.FAT_Recursos_humanos t 
WHERE FLAG_maior_faixa ='S' 
AND DT_ID = '201703' 
AND DEMP_ID = 4 
ORDER BY DPRO_ID





------ EXPLAIN ------------------

explain plan for
select * from ttt...


SELECT plan_table_output FROM TABLE(dbms_xplan.display());

--- popula tabela de gestores

select b.pfi_matricula gestor, f.dt_id, b.dt_inicio, b.dt_fim, f.dpro_id func,b.duorg_id, descr/*,sum(f.num_pessoas)*/
              from dda_bi.fat_recursos_humanos f, dda_bi.dim_unidades_org uo, (select/* distinct*/  s.pfi_matricula, s.data_inicio dt_inicio, s.data_fim dt_fim, duorg.id duorg_id, duorg.descricao descr
                  from dda.responsavel_setor s
                  , uorg_setores us
                     , emp_unidades_org uo
                     , ctb_unidades_org_vw uow
                     , emp_planos ep
                     , dda_bi.dim_unidades_org duorg
                 where  us.emp_uorg_id          = uo.id
                   and uo.id                   = uow.id
                   and uow.ano                 = 2017  
                  and uo.status               = 'A'
                   and us.situacao             = 'A'
                   and ep.id                   = uo.emp_pla_id
                   and duorg.codigo_legado     = uow.codigo
                   and duorg.demp_id           = uow.EMP_EMP_ID
                   and duorg.demp_id           = ep.emp_emp_id 
                   and s.set_codigo = us.set_codigo
                  ) b
             where f.duorg_lot_id = uo.id
               and f.duorg_lot_id = b.duorg_id
               and f.dtpmov_id = 5
               and ((dt_id  between to_char(B.DT_inicio,'yyyymm') and to_char(B.dT_fim,'yyyymm')) 
                  or to_char(B.dt_fim,'yyyymm') is null)
               and  b.pfi_matricula = 28422 
               and b.duorg_id in (223020305005001,323020305005001,423020305005001)
               and dt_id = 201703
             
-- traz cargos, faixas e salarios de producao

select Demp_Id, Dt_Id,Dprod_Id, dcargo.cod, menor_faixa_sal,maior_faixa_sal, salario 
 from (
 Select distinct --'Total Funcionários' Tipo,
           --  '-' Tipo_2,
             chapa Dprod_Id,
             nvl(dcarg.id, 0) Dcarg_Id,
           --  uniorg.uorg_cod cct,
             nvl(demp.id, 0) Demp_Id,
             nvl(dt.id, 0) Dt_Id,
            -- 1 Qtd_Colaboradores,
           --  vpro.hrs_teor_mes Carga_Horaria,
           --  nvl(SitFunc.dsitfunc_id,0) dsitfunc_id,
           --  0 id_mot_deslg,
           --  0 id_mot_faltas,
 ----------- flag para identificar os extra-cargo -----------------------------------
           --  (case
          --     when (dcarg.cod < 4500 and emprg.vinc_cod <> 9) then
           --     'S'
           --    else
           --     'N'
           --  end) flag_extra_cargo,
           --  '-',
          --   nvl(total,0) AS conta_func_adic,
  ----------- flag para identificar os adicionais -----------------------------------
           --  decode(total, null, 'N', 'S') flag_adicionais,
             menor_faixa_sal,
             maior_faixa_sal,
  ----------- flag para identificar os que ultrapassam a maior faixa salarial --------
            -- (case
            --   when (salario > maior_faixa_sal) then
            --    'S'
            --   else
            --    'N'
            -- end) flag_maior_faixa,
            -- desig_cod DDesig_cod,
            -- (select c.id
             --   from dda_bi.dim_cargos c
             --  where cod = desig_cod
             --    and c.emp_cod = emprg.emp_cod) DDESIG_Id
             salario
        From dda_rh.reg_empregos      emprg,
             dda_rh.reg_uniorgs       uniorg,
             dda_bi.profissionais_vw         vpro,
             dda.ctb_centros_custos_vw    cct,
             dda_rh.reg_cargos        rcarg,
             dda_bi.dim_empresas             demp,
             dda_bi.dim_profissionais        dpro,
             dda_bi.dim_cargos               dcarg,
             dda_bi.dim_centros_resp_lotacao dcr,
             dda.grupos_pessoas           gps,
             dda_bi.dim_tempo                dt,
             
             ----------------------- Identifica os Adicionais ------------------------------------------------
             --- Union para agrupar de acordo com os eventos, depois somar -----------------------------------
             --- Regra de agrupamento definida pelo RH, de acordo com o relatorio da Estrutura Remuneratoria--
             
             dda_bi.fat_rh_adicionais_tmp adic,
             
             ---------------- Traz as faixas salarias e cálculos de salários para o relatório da Estrutura Remuneratória --
             -------------------------------------------------------------------------------------------------------------- 
             
             dda_bi.fat_rh_fxsal_tmp FxSal,
             ---------------- Traz a situação funcional dos colaboradores
                                   (select a.rsit_remp_chapa, b.id dsitfunc_id
                                     from dda_rh.reg_afastamentos a, dda_bi.dim_situacoes_funcionais b
                                     where a.rsit_sfun_cod = b.cod
                                     and (dt_ini_vig <= '31/03/2017')
                                     and (dt_fim_vig is null or dt_fim_vig >= '31/03/2017')
                                     and a.rsit_sfun_cod <> 3)SitFunc     
      -------------------------------------------
       where chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and cct.emp_cres_id = dcr.id(+)
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and dcarg.cod = rcarg.car_cod --ligacao a dim cargo com reg_cargo ja estava
         and emprg.emp_cod = rcarg.car_emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and cct.ano = dt.ano
         and 2017 = dt.ano
         and 03 = dt.mes
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and chapa = uniorg.remp_chapa
         AND chapa = adic.remp_chapa(+)
         and chapa = FxSal.remp_chapa(+)
         and chapa = SitFunc.rsit_remp_chapa(+)
         and ((emprg.dt_rescisao is null and
             (to_char(emprg.dt_admissao, 'rrrrmm') <=
             lpad(2017, 4, 0) || lpad(03, 2, 0))) or
             (to_char(emprg.dt_admissao, 'rrrrmm') <=
             lpad(2017, 4, 0) || lpad(03, 2, 0) and
             to_char(emprg.dt_rescisao, 'rrrrmm') >=
             lpad(2017, 4, 0) || lpad(03, 2, 0)))
         and uniorg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_uniorgs u
               Where u.remp_chapa = chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(2017, 4, 0) || lpad(03, 2, 0))
         and rcarg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u
               Where u.remp_chapa = chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(2017, 4, 0) || lpad(03, 2, 0))
      
         and demp.id = 4
         and salario is not null
           -- order by maior_faixa_sal, dprod_id desc
) cons, dda_bi.dim_cargos dcargo
     where cons.dcarg_id = dcargo.id
     
     
     
------ nova query de validacao das faixas e salarios 14/08/2017---------------------

select distinct demp_id, dt_id, Cod, carg.descricao Cargos,Dprod_Id,  menor_faixa_sal "Ponto Inicial($)",maior_faixa_sal "Ponto Final($)"
 from (
  Select 
             chapa Dprod_Id,
             nvl(dcarg.id, 0) Dcarg_Id,
             fxsal.desig_cod ddesig_cod,
             dcarg.descricao Cargos,
             nvl(demp.id, 0) Demp_Id,
             nvl(dt.id, 0) Dt_Id,
             menor_faixa_sal,
             maior_faixa_sal,
             salario
        From dda_rh.reg_empregos      emprg,
             dda_rh.reg_uniorgs       uniorg,
             dda_bi.profissionais_vw         vpro,
             dda.ctb_centros_custos_vw    cct,
             dda_rh.reg_cargos        rcarg,
             dda_bi.dim_empresas             demp,
             dda_bi.dim_profissionais        dpro,
             dda_bi.dim_cargos               dcarg,
             dda_bi.dim_centros_resp_lotacao dcr,
             dda.grupos_pessoas           gps,
             dda_bi.dim_tempo                dt,
             (select remp_chapa, nvl(count(*),0) total
        from (select distinct rc.remp_chapa
                from dda_rh.reg_cargos            rc,
                     dda_rh.EVENTOS               e,
                     dda_rh.reg_empregos          re,
                     dda_rh.movimentos_calculados mc
               where mc.even_cod = e.cod
                 and mc.remp_chapa = rc.remp_chapa
                 and mc.remp_chapa = re.chapa
                 and (re.dt_rescisao is null or re.dt_rescisao > '31/03/2017' 
                     )
                 and even_cod in (806, 807, 825, 834, 836, 847, 961)
                 and MC.dt_comp = '31/03/2017' 
                 and rc.car_cod >= 4500
              
              union all
              
              select distinct rc.remp_chapa
                from dda_rh.reg_cargos            rc,
                     dda_rh.EVENTOS               e,
                     dda_rh.reg_empregos          re,
                     dda_rh.movimentos_calculados mc
               where mc.even_cod = e.cod
                 and mc.remp_chapa = rc.remp_chapa
                 and mc.remp_chapa = re.chapa
                 and (re.dt_rescisao is null or re.dt_rescisao > '31/03/2017') 
                 and even_cod = 888
                 and MC.dt_comp = '31/03/2017' 
                 and rc.car_cod >= 4500

              
              union all
              
              select distinct rc.remp_chapa
                from dda_rh.reg_cargos            rc,
                     dda_rh.EVENTOS               e,
                     dda_rh.reg_empregos          re,
                     dda_rh.movimentos_calculados mc
               where mc.even_cod = e.cod
                 and mc.remp_chapa = rc.remp_chapa
                 and mc.remp_chapa = re.chapa
                 and (re.dt_rescisao is null or re.dt_rescisao > '31/03/2017') 
                 and even_cod in (841,
845
850
853
854
856
857
859
863
865
883
                                  938)
                 and mc.dt_comp = '31/03/2017'
                 and rc.car_cod >= 4500)
                 group by remp_chapa) adic,

             ( select remp_chapa,
             car_cod desig_cod,
             faixas.nome,
             menor_faixa_sal,
             maior_faixa_sal,
             salario
        from 
              (  select carg_desig.remp_chapa,
             nvl(DDA_BI.busca_designados(carg_desig.remp_chapa), car_cod) car_cod,
             round(case
                     when carga_horaria <> 1 then
                      (vlr_mult / h.hrs_teor_mes)
                     else
                      (vlr_mult /
                      ((h.hrs_teor_sem * 4.5) + (h.hrs_teor_sem * 4.5) / 6))
                   end,
                   2) salario,
             max(rh.dt_mov) dt_mov
        from (select remp_chapa,
                     car_cod,
                     carga_horaria,
                     vlr_mult,
                     max(localz)
                from (select '2' as localz,
                             mc.remp_chapa,
                             rd.car_cod,
                             chc.carga_horaria,
                             (vlr * chc.carga_horaria) vlr_mult
                        from (select remp_emp_cod, remp_chapa, sum(vlr) vlr
                                from dda_rh.movimentos_calculados mc
                               where even_cod in (840, 883, 863, 938)
                                 and dt_comp = '31/03/2017'
                               group by remp_emp_cod, remp_chapa) mc,
                             dda_rh.reg_cargos c,
                             (select remp_chapa, max(dt_mov) max_dt
                                from dda_rh.reg_cargos
                               group by remp_chapa) max,
                             dda_rh.reg_cargas_horarias_cargo chc,
                             dda_rh.reg_empregos re,
                             dda_rh.reg_designacoes rd
                      
                       where mc.remp_emp_cod = c.car_emp_cod
                         and mc.remp_chapa = c.remp_chapa
                         and chc.car_emp_cod = c.car_emp_cod
                         and chc.car_cod = c.car_cod
                         and max.remp_chapa = mc.remp_chapa
                         and re.chapa > 0
                         and re.emp_cod > 0
                         and re.emp_cod = mc.remp_emp_cod
                         and re.chapa = mc.remp_chapa
                         and rd.remp_emp_cod(+) = mc.remp_emp_cod
                         and rd.remp_chapa(+) = mc.remp_chapa
                         and (re.dt_rescisao is null or
                             re.dt_rescisao > '31/03/2017')
                         and c.car_cod >= 4500
                         and max.max_dt = c.dt_mov
                         and rd.dt_fim_vig is null
                      
                      union

                      select '1',
                             mc.remp_chapa,
                             rc.car_cod,
                             chc.carga_horaria,
                             (vlr * chc.carga_horaria)
                        from (select remp_chapa, sum(vlr) vlr
                                from dda_rh.movimentos_calculados mc
                               where even_cod in (840, 883, 863, 938)
                                 and dt_comp = '31/03/2017'
                               group by remp_chapa) mc,

                             dda_rh.reg_cargos rc,
                             (select remp_chapa, max(dt_mov) max_dt_mov
                                from dda_rh.reg_cargos rcg
                               where dt_mov <= '31/03/2017'
                               group by remp_chapa) max_cargo,
                             dda_rh.reg_cargas_horarias_cargo chc,
                             dda_rh.reg_empregos re
                       where mc.remp_chapa = rc.remp_chapa
                         and rc.car_cod = chc.car_cod
                         and rc.car_emp_cod = chc.car_emp_cod
                         and mc.remp_chapa = re.chapa
                         and (re.dt_rescisao is null or
                             re.dt_rescisao > '31/03/2017')
                         and rc.dt_mov = max_cargo.max_dt_mov
                         and rc.remp_chapa = max_cargo.remp_chapa
                         and rc.car_cod >= 4500)
               group by remp_chapa, car_cod, carga_horaria, vlr_mult
              
              ) carg_desig,
             dda_rh.reg_horarios rh,
             dda_rh.horarios h
       where carg_desig.remp_chapa = rh.remp_chapa
            
         and rh.hor_cod = h.cod
         and rh.hor_emp_cod = h.emp_cod
         and rh.dt_mov = (select max(dt_mov)
                            from dda_rh.reg_horarios
                           where remp_chapa = carg_desig.remp_chapa
                             AND dt_mov <= '31/03/2017')
       group by carg_desig.remp_chapa,
                nvl(DDA_BI.busca_designados(carg_desig.remp_chapa), car_cod),
                round(case
                        when carga_horaria <> 1 then
                         (vlr_mult / h.hrs_teor_mes)
                        else
                         (vlr_mult /
                         ((h.hrs_teor_sem * 4.5) + (h.hrs_teor_sem * 4.5) / 6))
                      end,
                      2)) salarios,
 
             (select distinct menor.nome,
                      menor.cod,
                      menor.vlr_sal_real menor_faixa_sal,
                      maior.vlr_sal_real maior_faixa_sal
        from (select maxdata.nome, maxdata.cod, sal.vlr_sal_real
        from (select nome, dc.cod, max(dns.dt_ini_vig) dns_dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dc.emp_cod = dts.emp_cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('1','1A')
                 and '31/03/2017' >= dns.dt_ini_vig
               group by nome, dc.cod) maxdata,
             
             (select nome, dc.cod, dns.vlr_sal_real, dns.dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dc.emp_cod = dts.emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('1','1A')
                 and '31/03/2017' >= dns.dt_ini_vig) sal
       where maxdata.dns_dt_ini_vig = sal.dt_ini_vig
         and maxdata.cod = sal.cod) menor, 
         ( select maxdata.nome, maxdata.cod, sal.vlr_sal_real
        from (select nome, dc.cod, max(dns.dt_ini_vig) dns_dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dc.emp_cod = dts.emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('5','2B')
                 and '31/03/2017' >= dns.dt_ini_vig
               group by nome, dc.cod) maxdata,
             
             (select nome, dc.cod, dns.vlr_sal_real, dns.dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dc.emp_cod = dts.emp_cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('5','2B')
                 and '31/03/2017' >= dns.dt_ini_vig) sal
       where maxdata.dns_dt_ini_vig = sal.dt_ini_vig
         and maxdata.cod = sal.cod) maior
       where menor.cod = maior.cod) faixas
       where faixas.cod = salarios.car_cod
         and car_cod is not null) FxSal,
 
                                   (select a.rsit_remp_chapa, b.id dsitfunc_id
                                     from dda_rh.reg_afastamentos a, DDA_BI.dim_situacoes_funcionais b
                                     where a.rsit_sfun_cod = b.cod
                                     and (dt_ini_vig <= '31/03/2017')
                                     and (dt_fim_vig is null or dt_fim_vig >= '31/03/2017')
                                     and a.rsit_sfun_cod <> 4
                                    )SitFunc     

       where chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and cct.emp_cres_id = dcr.id(+)
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and dcarg.cod = rcarg.car_cod --ligacao a dim cargo com reg_cargo ja estava
         and emprg.emp_cod = rcarg.car_emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and cct.ano = dt.ano
         and 2017 = dt.ano
         and 03 = dt.mes
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and chapa = uniorg.remp_chapa
         AND chapa = adic.remp_chapa(+)
         and chapa = FxSal.remp_chapa(+)
         and chapa = SitFunc.rsit_remp_chapa(+)
         and ((emprg.dt_rescisao is null and
             (to_char(emprg.dt_admissao, 'rrrrmm') <=
             lpad(2017, 4, 0) || lpad(03, 2, 0))) or
             (to_char(emprg.dt_admissao, 'rrrrmm') <=
             lpad(2017, 4, 0) || lpad(03, 2, 0) and
             to_char(emprg.dt_rescisao, 'rrrrmm') >=
             lpad(2017, 4, 0) || lpad(03, 2, 0)))
         and uniorg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_uniorgs u
               Where u.remp_chapa = chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(2017, 4, 0) || lpad(03, 2, 0))
         and rcarg.dt_mov IN
             (Select MAX(u.dt_mov)

                From dda_rh.reg_cargos u
               Where u.remp_chapa = chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(2017, 4, 0) || lpad(03, 2, 0))
                      and demp.id = 2 ---------------------------> 2 = Sesi 4 = Senai
                      and salario is not null
          )cons, dda_bi.dim_cargos carg
          where cons.Ddesig_cod = carg.cod
          order by maior_faixa_sal desc




--------------------- ajustado 16/08 ------------------------------

select distinct demp_id, dt_id, Cod, carg.descricao Cargos,Dprod_Id, salario,  menor_faixa_sal "Ponto Inicial($)",maior_faixa_sal "Ponto Final($)"
 from (
  Select 
             chapa Dprod_Id,
             nvl(dcarg.id, 0) Dcarg_Id,
             fxsal.desig_cod ddesig_cod,
             dcarg.descricao Cargos,
             nvl(demp.id, 0) Demp_Id,
             nvl(dt.id, 0) Dt_Id,
             menor_faixa_sal,
             maior_faixa_sal,
             salario
        From dda_rh.reg_empregos      emprg,
             dda_rh.reg_uniorgs       uniorg,
             dda_bi.profissionais_vw         vpro,
             dda.ctb_centros_custos_vw    cct,
             dda_rh.reg_cargos        rcarg,
             dda_bi.dim_empresas             demp,
             dda_bi.dim_profissionais        dpro,
             dda_bi.dim_cargos               dcarg,
             dda_bi.dim_centros_resp_lotacao dcr,
             dda.grupos_pessoas           gps,
             dda_bi.dim_tempo                dt,
             (select remp_chapa, nvl(count(*),0) total
        from (select distinct rc.remp_chapa
                from dda_rh.reg_cargos            rc,
                     dda_rh.EVENTOS               e,
                     dda_rh.reg_empregos          re,
                     dda_rh.movimentos_calculados mc
               where mc.even_cod = e.cod
                 and mc.remp_chapa = rc.remp_chapa
                 and mc.remp_chapa = re.chapa
                 and (re.dt_rescisao is null or re.dt_rescisao > '31/03/2017' 
                     )
                 and even_cod in (806, 807, 825, 834, 836, 847, 961)
                 and MC.dt_comp = '31/03/2017' 
                 and rc.car_cod >= 4500
              
              union all
              
              select distinct rc.remp_chapa
                from dda_rh.reg_cargos            rc,
                     dda_rh.EVENTOS               e,
                     dda_rh.reg_empregos          re,
                     dda_rh.movimentos_calculados mc
               where mc.even_cod = e.cod
                 and mc.remp_chapa = rc.remp_chapa
                 and mc.remp_chapa = re.chapa
                 and (re.dt_rescisao is null or re.dt_rescisao > '31/03/2017') 
                 and even_cod = 888
                 and MC.dt_comp = '31/03/2017' 
                 and rc.car_cod >= 4500

              
              union all
              
              select distinct rc.remp_chapa
                from dda_rh.reg_cargos            rc,
                     dda_rh.EVENTOS               e,
                     dda_rh.reg_empregos          re,
                     dda_rh.movimentos_calculados mc
               where mc.even_cod = e.cod
                 and mc.remp_chapa = rc.remp_chapa
                 and mc.remp_chapa = re.chapa
                 and (re.dt_rescisao is null or re.dt_rescisao > '31/03/2017') 
                 and even_cod in (841,
845,
850,
853,
854,
856,
857,
859,
863,
865,
883,
                                  938)
                 and mc.dt_comp = '31/03/2017'
                 and rc.car_cod >= 4500)
                 group by remp_chapa) adic,

             ( select remp_chapa,
             car_cod desig_cod,
             faixas.nome,
             menor_faixa_sal,
             maior_faixa_sal,
             salario
        from 
              (  select carg_desig.remp_chapa,
             nvl(DDA_BI.busca_designados(carg_desig.remp_chapa), car_cod) car_cod,
             round(case
                     when carga_horaria <> 1 then
                      (vlr_mult / h.hrs_teor_mes)
                     else
                      (vlr_mult /
                      ((h.hrs_teor_sem * 4.5) + (h.hrs_teor_sem * 4.5) / 6))
                   end,
                   2) salario,
             max(rh.dt_mov) dt_mov
        from (select remp_chapa,
                     car_cod,
                     carga_horaria,
                     vlr_mult,
                     max(localz)
                from (select '2' as localz,
                             mc.remp_chapa,
                             rd.car_cod,
                             chc.carga_horaria,
                             (vlr * chc.carga_horaria) vlr_mult
                        from (select remp_emp_cod, remp_chapa, sum(vlr) vlr
                                from dda_rh.movimentos_calculados mc
                               where even_cod in (840, 883, 863, 938)
                                 and dt_comp = '31/03/2017'
                               group by remp_emp_cod, remp_chapa) mc,
                             dda_rh.reg_cargos c,
                             (select remp_chapa, max(dt_mov) max_dt
                                from dda_rh.reg_cargos
                               group by remp_chapa) max,
                             dda_rh.reg_cargas_horarias_cargo chc,
                             dda_rh.reg_empregos re,
                             dda_rh.reg_designacoes rd
                      
                       where mc.remp_emp_cod = c.car_emp_cod
                         and mc.remp_chapa = c.remp_chapa
                         and chc.car_emp_cod = c.car_emp_cod
                         and chc.car_cod = c.car_cod
                         and max.remp_chapa = mc.remp_chapa
                         and re.chapa > 0
                         and re.emp_cod > 0
                         and re.emp_cod = mc.remp_emp_cod
                         and re.chapa = mc.remp_chapa
                         and rd.remp_emp_cod(+) = mc.remp_emp_cod
                         and rd.remp_chapa(+) = mc.remp_chapa
                         and (re.dt_rescisao is null or
                             re.dt_rescisao > '31/03/2017')
                         and c.car_cod >= 4500
                         and max.max_dt = c.dt_mov
                         and rd.dt_fim_vig is null
                      
                      union

                      select '1',
                             mc.remp_chapa,
                             rc.car_cod,
                             chc.carga_horaria,
                             (vlr * chc.carga_horaria)
                        from (select remp_chapa, sum(vlr) vlr
                                from dda_rh.movimentos_calculados mc
                               where even_cod in (840, 883, 863, 938)
                                 and dt_comp = '31/03/2017'
                               group by remp_chapa) mc,

                             dda_rh.reg_cargos rc,
                             (select remp_chapa, max(dt_mov) max_dt_mov
                                from dda_rh.reg_cargos rcg
                               where dt_mov <= '31/03/2017'
                               group by remp_chapa) max_cargo,
                             dda_rh.reg_cargas_horarias_cargo chc,
                             dda_rh.reg_empregos re
                       where mc.remp_chapa = rc.remp_chapa
                         and rc.car_cod = chc.car_cod
                         and rc.car_emp_cod = chc.car_emp_cod
                         and mc.remp_chapa = re.chapa
                         and (re.dt_rescisao is null or
                             re.dt_rescisao > '31/03/2017')
                         and rc.dt_mov = max_cargo.max_dt_mov
                         and rc.remp_chapa = max_cargo.remp_chapa
                         and rc.car_cod >= 4500)
               group by remp_chapa, car_cod, carga_horaria, vlr_mult
              
              ) carg_desig,
             dda_rh.reg_horarios rh,
             dda_rh.horarios h
       where carg_desig.remp_chapa = rh.remp_chapa
            
         and rh.hor_cod = h.cod
         and rh.hor_emp_cod = h.emp_cod
         and rh.dt_mov = (select max(dt_mov)
                            from dda_rh.reg_horarios
                           where remp_chapa = carg_desig.remp_chapa
                             AND dt_mov <= '31/03/2017')
       group by carg_desig.remp_chapa,
                nvl(DDA_BI.busca_designados(carg_desig.remp_chapa), car_cod),
                round(case
                        when carga_horaria <> 1 then
                         (vlr_mult / h.hrs_teor_mes)
                        else
                         (vlr_mult /
                         ((h.hrs_teor_sem * 4.5) + (h.hrs_teor_sem * 4.5) / 6))
                      end,
                      2)) salarios,
 
             (select distinct menor.nome,
                      menor.cod,
                      menor.vlr_sal_real menor_faixa_sal,
                      maior.vlr_sal_real maior_faixa_sal
        from (select maxdata.nome, maxdata.cod, sal.vlr_sal_real
        from (select nome, dc.cod, max(dns.dt_ini_vig) dns_dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dc.emp_cod = dts.emp_cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('1','1A')
                 and '31/03/2017' >= dns.dt_ini_vig
               group by nome, dc.cod) maxdata,
             
             (select nome, dc.cod, dns.vlr_sal_real, dns.dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dc.emp_cod = dts.emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('1','1A')
                 and '31/03/2017' >= dns.dt_ini_vig) sal
       where maxdata.dns_dt_ini_vig = sal.dt_ini_vig
         and maxdata.cod = sal.cod) menor, 
         ( select maxdata.nome, maxdata.cod, sal.vlr_sal_real
        from (select nome, dc.cod, max(dns.dt_ini_vig) dns_dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dc.emp_cod = dts.emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('5','2B')
                 and '31/03/2017' >= dns.dt_ini_vig
               group by nome, dc.cod) maxdata,
             
             (select nome, dc.cod, dns.vlr_sal_real, dns.dt_ini_vig
                from dda_rh.cargos            dc,
                     dda_rh.tabelas_salariais dts,
                     dda_rh.faixas_salariais  dfs,
                     dda_rh.reg_regioes       dr1,
                     dda_rh.niveis_salariais  dns
               where dc.fxsl_tsal_cod = dts.cod
                 and dc.fxsl_tsal_cod = dfs.tsal_cod
                 and dc.fxsl_cod = dfs.cod
                 and dc.fxsl_tsal_cod = dr1.fxsl_tsal_cod
                 and dr1.fxsl_cod = dc.fxsl_cod
                 and dc.fxsl_cod = dns.rere_fxsl_cod
                 and dc.fxsl_tsal_cod = dns.rere_fxsl_tsal_cod
                 and dc.emp_cod = tsal_emp_cod
                 and dfs.tsal_cod = dts.cod
                 and dc.emp_cod = dts.emp_cod
                 and dts.emp_cod = dfs.Tsal_Emp_Cod
                 and dfs.Tsal_Emp_Cod = dns.rere_fxsl_tsal_emp_cod
                 and dr1.fxsl_tsal_emp_cod = dns.rere_fxsl_tsal_emp_cod
                 and dts.cod in (30, 31, 32, 33)
                 and dns.cod in ('5','2B')
                 and '31/03/2017' >= dns.dt_ini_vig) sal
       where maxdata.dns_dt_ini_vig = sal.dt_ini_vig
         and maxdata.cod = sal.cod) maior
       where menor.cod = maior.cod) faixas
       where faixas.cod = salarios.car_cod
         and car_cod is not null) FxSal,
 
                                   (select a.rsit_remp_chapa, b.id dsitfunc_id
                                     from dda_rh.reg_afastamentos a, DDA_BI.dim_situacoes_funcionais b
                                     where a.rsit_sfun_cod = b.cod
                                     and (dt_ini_vig <= '31/03/2017')
                                     and (dt_fim_vig is null or dt_fim_vig >= '31/03/2017')
                                     and a.rsit_sfun_cod <> 4
                                    )SitFunc     

       where chapa = vpro.matricula
         and emprg.emp_cod = gps.codigo_universal
         and vpro.cct_codigo = cct.codigo
         and cct.emp_cres_id = dcr.id(+)
         and vpro.gps_codigo = demp.gps_codigo
         and dpro.matricula = vpro.matricula
         and vpro.matricula = rcarg.remp_chapa
         and dcarg.cod = rcarg.car_cod --ligacao a dim cargo com reg_cargo ja estava
         and emprg.emp_cod = rcarg.car_emp_cod
         and dcarg.emp_cod = emprg.emp_cod
         and cct.ano = dt.ano
         and 2017 = dt.ano
         and 03 = dt.mes
         and gps.idc_sistema_fiergs = 'S'
         and demp.id = gps.codigo
         and chapa = uniorg.remp_chapa
         AND chapa = adic.remp_chapa(+)
         and chapa = FxSal.remp_chapa(+)
         and chapa = SitFunc.rsit_remp_chapa(+)
         and ((emprg.dt_rescisao is null and
             (to_char(emprg.dt_admissao, 'rrrrmm') <=
             lpad(2017, 4, 0) || lpad(03, 2, 0))) or
             (to_char(emprg.dt_admissao, 'rrrrmm') <=
             lpad(2017, 4, 0) || lpad(03, 2, 0) and
             to_char(emprg.dt_rescisao, 'rrrrmm') >=
             lpad(2017, 4, 0) || lpad(03, 2, 0)))
         and uniorg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_uniorgs u
               Where u.remp_chapa = chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(2017, 4, 0) || lpad(03, 2, 0))
         and rcarg.dt_mov IN
             (Select MAX(u.dt_mov)
                From dda_rh.reg_cargos u
               Where u.remp_chapa = chapa
                 and to_char(u.dt_mov, 'rrrrmm') <=
                     lpad(2017, 4, 0) || lpad(03, 2, 0))
                      and demp.id = 2 ---------------------------> 2 = Sesi 4 = Senai
                      and salario is not null
          )cons, dda_bi.dim_cargos carg
          where cons.Ddesig_cod = carg.cod
          order by maior_faixa_sal desc

----- Estrutura Remuneratoria Transparencia ----------------------------------------------


select Demp_id,
       "Ponto Inicial (R$)",
       "Ponto Final (R$)",
       regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(
       regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(
       initcap(dbms_lob.substr(wm_concat(distinct Cargos),4000,1)),' Iii,',' III, '),' De ',' de '),' Ii,',' II, '),
       'Prof.E',' Prof.e '),'.Do','.do '),'Iv','IV'),'.De','.de '),' Ii',' II '),'.Ii','. II '),',',', '),'II i','III'),
       '.Da','. da '),' E ',' e '),'Com',' com') Cargos, count(dprod_id) Quantidade
  from (
        
        select distinct demp_id,
                         dt_id,
                         Cod,
                         carg.descricao  Cargos,
                         Dprod_Id,
                         salario,
                         menor_faixa_sal "Ponto Inicial (R$)",
                         maior_faixa_sal "Ponto Final (R$)"
          from (Select chapa Dprod_Id,
                        nvl(dcarg.id, 0) Dcarg_Id,
                        fxsal.desig_cod ddesig_cod,
                        dcarg.descricao Cargos,
                        nvl(demp.id, 0) Demp_Id,
                        nvl(dt.id, 0) Dt_Id,
                        menor_faixa_sal,
                        maior_faixa_sal,
                        salario
                   From dda_rh.reg_empregos emprg,
                        dda_rh.reg_uniorgs uniorg,
                        dda_bi.profissionais_vw vpro,
                        dda.ctb_centros_custos_vw cct,
                        dda_rh.reg_cargos rcarg,
                        dda_bi.dim_empresas demp,
                        dda_bi.dim_profissionais dpro,
                        dda_bi.dim_cargos dcarg,
                        dda_bi.dim_centros_resp_lotacao dcr,
                        dda.grupos_pessoas gps,
                        dda_bi.dim_tempo dt,
                        (select remp_chapa, nvl(count(*), 0) total
                           from (select distinct rc.remp_chapa
                                   from dda_rh.reg_cargos            rc,
                                        dda_rh.EVENTOS               e,
                                        dda_rh.reg_empregos          re,
                                        dda_rh.movimentos_calculados mc
                                  where mc.even_cod = e.cod
                                    and mc.remp_chapa = rc.remp_chapa
                                    and mc.remp_chapa = re.chapa
                                    and (re.dt_rescisao is null or
                                        re.dt_rescisao > '&data')
                                    and even_cod in
                                        (806, 807, 825, 834, 836, 847, 961)
                                    and MC.dt_comp = '&&data'
                                    and rc.car_cod >= 4500
                                 
                                 union all
                                 
                                 select distinct rc.remp_chapa
                                   from dda_rh.reg_cargos            rc,
                                        dda_rh.EVENTOS               e,
                                        dda_rh.reg_empregos          re,
                                        dda_rh.movimentos_calculados mc
                                  where mc.even_cod = e.cod
                                    and mc.remp_chapa = rc.remp_chapa
                                    and mc.remp_chapa = re.chapa
                                    and (re.dt_rescisao is null or
                                        re.dt_rescisao > '&&data')
                                    and even_cod = 888
                                    and MC.dt_comp = '31/&&p_mes/&&p_ano'
                                    and rc.car_cod >= 4500
                                 
                                 union all
                                 
                                 select distinct rc.remp_chapa
                                   from dda_rh.reg_cargos            rc,
                                        dda_rh.EVENTOS               e,
                                        dda_rh.reg_empregos          re,
                                        dda_rh.movimentos_calculados mc
                                  where mc.even_cod = e.cod
                                    and mc.remp_chapa = rc.remp_chapa
                                    and mc.remp_chapa = re.chapa
                                    and (re.dt_rescisao is null or
                                        re.dt_rescisao > '&&data')
                                    and even_cod in (841,
                                                     845,
                                                     850,
                                                     853,
                                                     854,
                                                     856,
                                                     857,
                                                     859,
                                                     863,
                                                     865,
                                                     883,
                                                     938)
                                    and mc.dt_comp = '31/&&p_mes/&&p_ano'
                                    and rc.car_cod >= 4500)
                          group by remp_chapa) adic,
                        
                        (select remp_chapa,
                                car_cod desig_cod,
                                faixas.nome,
                                menor_faixa_sal,
                                maior_faixa_sal,
                                salario
                           from (select carg_desig.remp_chapa,
                                        nvl(DDA_BI.busca_designados(carg_desig.remp_chapa,'&&data'),
                                            car_cod) car_cod,
                                        round(case
                                                when carga_horaria <> 1 then
                                                 (vlr_mult / h.hrs_teor_mes)
                                                else
                                                 (vlr_mult / ((h.hrs_teor_sem * 4.5) +
                                                 (h.hrs_teor_sem * 4.5) / 6))
                                              end,
                                              2) salario,
                                        max(rh.dt_mov) dt_mov
                                   from (select remp_chapa,
                                                car_cod,
                                                carga_horaria,
                                                vlr_mult,
                                                max(localz)
                                           from (select '2' as localz,
                                                        mc.remp_chapa,
                                                        rd.car_cod,
                                                        chc.carga_horaria,
                                                        (vlr * chc.carga_horaria) vlr_mult
                                                   from (select remp_emp_cod,
                                                                remp_chapa,
                                                                sum(vlr) vlr
                                                           from dda_rh.movimentos_calculados mc
                                                          where even_cod in
                                                                (840, 883, 863, 938)
                                                            and dt_comp =
                                                                '&&data'
                                                          group by remp_emp_cod,
                                                                   remp_chapa) mc,
                                                        dda_rh.reg_cargos c,
                                                        (select remp_chapa,
                                                                max(dt_mov) max_dt
                                                           from dda_rh.reg_cargos
                                                          group by remp_chapa) max,
                                                        dda_rh.reg_cargas_horarias_cargo chc,
                                                        dda_rh.reg_empregos re,
                                                        dda_rh.reg_designacoes rd
                                                 
                                                  where mc.remp_emp_cod =
                                                        c.car_emp_cod
                                                    and mc.remp_chapa =
                                                        c.remp_chapa
                                                    and chc.car_emp_cod =
                                                        c.car_emp_cod
                                                    and chc.car_cod = c.car_cod
                                                    and max.remp_chapa =
                                                        mc.remp_chapa
                                                    and re.chapa > 0
                                                    and re.emp_cod > 0
                                                    and re.emp_cod =
                                                        mc.remp_emp_cod
                                                    and re.chapa = mc.remp_chapa
                                                    and rd.remp_emp_cod(+) =
                                                        mc.remp_emp_cod
                                                    and rd.remp_chapa(+) =
                                                        mc.remp_chapa
                                                    and (re.dt_rescisao is null or
                                                        re.dt_rescisao >
                                                        '&&data')
                                                    and c.car_cod >= 4500
                                                    and max.max_dt = c.dt_mov
                                                    and rd.dt_fim_vig is null
                                                 
                                                 union
                                                 
                                                 select '1',
                                                        mc.remp_chapa,
                                                        rc.car_cod,
                                                        chc.carga_horaria,
                                                        (vlr * chc.carga_horaria)
                                                   from (select remp_chapa,
                                                                sum(vlr) vlr
                                                           from dda_rh.movimentos_calculados mc
                                                          where even_cod in
                                                                (840, 883, 863, 938)
                                                            and dt_comp =
                                                                '&&data'
                                                          group by remp_chapa) mc,
                                                        
                                                        dda_rh.reg_cargos rc,
                                                        (select remp_chapa,
                                                                max(dt_mov) max_dt_mov
                                                           from dda_rh.reg_cargos rcg
                                                          where dt_mov <=
                                                                '&&data'
                                                          group by remp_chapa) max_cargo,
                                                        dda_rh.reg_cargas_horarias_cargo chc,
                                                        dda_rh.reg_empregos re
                                                  where mc.remp_chapa =
                                                        rc.remp_chapa
                                                    and rc.car_cod = chc.car_cod
                                                    and rc.car_emp_cod =
                                                        chc.car_emp_cod
                                                    and mc.remp_chapa = re.chapa
                                                    and (re.dt_rescisao is null or
                                                        re.dt_rescisao >
                                                        '&&data')
                                                    and rc.dt_mov =
                                                        max_cargo.max_dt_mov
                                                    and rc.remp_chapa =
                                                        max_cargo.remp_chapa
                                                    and rc.car_cod >= 4500)
                                          group by remp_chapa,
                                                   car_cod,
                                                   carga_horaria,
                                                   vlr_mult
                                         
                                         ) carg_desig,
                                        dda_rh.reg_horarios rh,
                                        dda_rh.horarios h
                                  where carg_desig.remp_chapa = rh.remp_chapa
                                       
                                    and rh.hor_cod = h.cod
                                    and rh.hor_emp_cod = h.emp_cod
                                    and rh.dt_mov =
                                        (select max(dt_mov)
                                           from dda_rh.reg_horarios
                                          where remp_chapa = carg_desig.remp_chapa
                                            AND dt_mov <= '&&data')
                                  group by carg_desig.remp_chapa,
                                           nvl(DDA_BI.busca_designados(carg_desig.remp_chapa,'&&data'),
                                               car_cod),
                                           round(case
                                                   when carga_horaria <> 1 then
                                                    (vlr_mult / h.hrs_teor_mes)
                                                   else
                                                    (vlr_mult /
                                                    ((h.hrs_teor_sem * 4.5) +
                                                    (h.hrs_teor_sem * 4.5) / 6))
                                                 end,
                                                 2)) salarios,
                                
                                (select distinct menor.nome,
                                                 menor.cod,
                                                 menor.vlr_sal_real menor_faixa_sal,
                                                 maior.vlr_sal_real maior_faixa_sal
                                   from (select maxdata.nome,
                                                maxdata.cod,
                                                sal.vlr_sal_real
                                           from (select nome,
                                                        dc.cod,
                                                        max(dns.dt_ini_vig) dns_dt_ini_vig
                                                   from dda_rh.cargos            dc,
                                                        dda_rh.tabelas_salariais dts,
                                                        dda_rh.faixas_salariais  dfs,
                                                        dda_rh.reg_regioes       dr1,
                                                        dda_rh.niveis_salariais  dns
                                                  where dc.fxsl_tsal_cod = dts.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dfs.tsal_cod
                                                    and dc.fxsl_cod = dfs.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dr1.fxsl_tsal_cod
                                                    and dr1.fxsl_cod = dc.fxsl_cod
                                                    and dc.fxsl_cod =
                                                        dns.rere_fxsl_cod
                                                    and dc.fxsl_tsal_cod =
                                                        dns.rere_fxsl_tsal_cod
                                                    and dc.emp_cod = tsal_emp_cod
                                                    and dfs.tsal_cod = dts.cod
                                                    and dc.emp_cod = dts.emp_cod
                                                    and dts.emp_cod =
                                                        dfs.Tsal_Emp_Cod
                                                    and dfs.Tsal_Emp_Cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dr1.fxsl_tsal_emp_cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dts.cod in (30, 31, 32, 33)
                                                    and dns.cod in ('1', '1A')
                                                    and '&&data' >=
                                                        dns.dt_ini_vig
                                                  group by nome, dc.cod) maxdata,
                                                
                                                (select nome,
                                                        dc.cod,
                                                        dns.vlr_sal_real,
                                                        dns.dt_ini_vig
                                                   from dda_rh.cargos            dc,
                                                        dda_rh.tabelas_salariais dts,
                                                        dda_rh.faixas_salariais  dfs,
                                                        dda_rh.reg_regioes       dr1,
                                                        dda_rh.niveis_salariais  dns
                                                  where dc.fxsl_tsal_cod = dts.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dfs.tsal_cod
                                                    and dc.fxsl_cod = dfs.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dr1.fxsl_tsal_cod
                                                    and dr1.fxsl_cod = dc.fxsl_cod
                                                    and dc.fxsl_cod =
                                                        dns.rere_fxsl_cod
                                                    and dc.fxsl_tsal_cod =
                                                        dns.rere_fxsl_tsal_cod
                                                    and dc.emp_cod = tsal_emp_cod
                                                    and dc.emp_cod = dts.emp_cod
                                                    and dfs.tsal_cod = dts.cod
                                                    and dts.emp_cod =
                                                        dfs.Tsal_Emp_Cod
                                                    and dfs.Tsal_Emp_Cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dr1.fxsl_tsal_emp_cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dts.cod in (30, 31, 32, 33)
                                                    and dns.cod in ('1', '1A')
                                                    and '&&data' >=
                                                        dns.dt_ini_vig) sal
                                          where maxdata.dns_dt_ini_vig =
                                                sal.dt_ini_vig
                                            and maxdata.cod = sal.cod) menor,
                                        (select maxdata.nome,
                                                maxdata.cod,
                                                sal.vlr_sal_real
                                           from (select nome,
                                                        dc.cod,
                                                        max(dns.dt_ini_vig) dns_dt_ini_vig
                                                   from dda_rh.cargos            dc,
                                                        dda_rh.tabelas_salariais dts,
                                                        dda_rh.faixas_salariais  dfs,
                                                        dda_rh.reg_regioes       dr1,
                                                        dda_rh.niveis_salariais  dns
                                                  where dc.fxsl_tsal_cod = dts.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dfs.tsal_cod
                                                    and dc.fxsl_cod = dfs.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dr1.fxsl_tsal_cod
                                                    and dr1.fxsl_cod = dc.fxsl_cod
                                                    and dc.fxsl_cod =
                                                        dns.rere_fxsl_cod
                                                    and dc.fxsl_tsal_cod =
                                                        dns.rere_fxsl_tsal_cod
                                                    and dc.emp_cod = tsal_emp_cod
                                                    and dc.emp_cod = dts.emp_cod
                                                    and dfs.tsal_cod = dts.cod
                                                    and dts.emp_cod =
                                                        dfs.Tsal_Emp_Cod
                                                    and dfs.Tsal_Emp_Cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dr1.fxsl_tsal_emp_cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dts.cod in (30, 31, 32, 33)
                                                    and dns.cod in ('5', '2B')
                                                    and '&&data' >=
                                                        dns.dt_ini_vig
                                                  group by nome, dc.cod) maxdata,
                                                
                                                (select nome,
                                                        dc.cod,
                                                        dns.vlr_sal_real,
                                                        dns.dt_ini_vig
                                                   from dda_rh.cargos            dc,
                                                        dda_rh.tabelas_salariais dts,
                                                        dda_rh.faixas_salariais  dfs,
                                                        dda_rh.reg_regioes       dr1,
                                                        dda_rh.niveis_salariais  dns
                                                  where dc.fxsl_tsal_cod = dts.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dfs.tsal_cod
                                                    and dc.fxsl_cod = dfs.cod
                                                    and dc.fxsl_tsal_cod =
                                                        dr1.fxsl_tsal_cod
                                                    and dr1.fxsl_cod = dc.fxsl_cod
                                                    and dc.fxsl_cod =
                                                        dns.rere_fxsl_cod
                                                    and dc.fxsl_tsal_cod =
                                                        dns.rere_fxsl_tsal_cod
                                                    and dc.emp_cod = tsal_emp_cod
                                                    and dfs.tsal_cod = dts.cod
                                                    and dc.emp_cod = dts.emp_cod
                                                    and dts.emp_cod =
                                                        dfs.Tsal_Emp_Cod
                                                    and dfs.Tsal_Emp_Cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dr1.fxsl_tsal_emp_cod =
                                                        dns.rere_fxsl_tsal_emp_cod
                                                    and dts.cod in (30, 31, 32, 33)
                                                    and dns.cod in ('5', '2B')
                                                    and '&&data' >=
                                                        dns.dt_ini_vig) sal
                                          where maxdata.dns_dt_ini_vig =
                                                sal.dt_ini_vig
                                            and maxdata.cod = sal.cod) maior
                                  where menor.cod = maior.cod) faixas
                          where faixas.cod = salarios.car_cod
                            and car_cod is not null) FxSal,
                        
                        (select a.rsit_remp_chapa, b.id dsitfunc_id
                           from dda_rh.reg_afastamentos         a,
                                DDA_BI.dim_situacoes_funcionais b
                          where a.rsit_sfun_cod = b.cod
                            and (dt_ini_vig <= '&&data')
                            and (dt_fim_vig is null or
                                dt_fim_vig >= '&&data')
                            and a.rsit_sfun_cod <> 4) SitFunc
                 
                  where chapa = vpro.matricula
                    and emprg.emp_cod = gps.codigo_universal
                    and vpro.cct_codigo = cct.codigo
                    and cct.emp_cres_id = dcr.id(+)
                    and vpro.gps_codigo = demp.gps_codigo
                    and dpro.matricula = vpro.matricula
                    and vpro.matricula = rcarg.remp_chapa
                    and dcarg.cod = rcarg.car_cod --ligacao a dim cargo com reg_cargo ja estava
                    and emprg.emp_cod = rcarg.car_emp_cod
                    and dcarg.emp_cod = emprg.emp_cod
                    and cct.ano = dt.ano
                    and &p_ano = dt.ano
                    and &p_mes = dt.mes
                    and gps.idc_sistema_fiergs = 'S'
                    and demp.id = gps.codigo
                    and chapa = uniorg.remp_chapa
                    AND chapa = adic.remp_chapa(+)
                    and chapa = FxSal.remp_chapa(+)
                    and chapa = SitFunc.rsit_remp_chapa(+)
                    and ((emprg.dt_rescisao is null and
                        (to_char(emprg.dt_admissao, 'rrrrmm') <=
                        lpad(&&p_ano, 4, 0) || lpad(&&p_mes, 2, 0))) or
                        (to_char(emprg.dt_admissao, 'rrrrmm') <=
                        lpad(&&p_ano, 4, 0) || lpad(&&p_mes, 2, 0) and
                        to_char(emprg.dt_rescisao, 'rrrrmm') >=
                        lpad(&&p_ano, 4, 0) || lpad(&&p_mes, 2, 0)))
                    and uniorg.dt_mov IN
                        (Select MAX(u.dt_mov)
                           From dda_rh.reg_uniorgs u
                          Where u.remp_chapa = chapa
                            and to_char(u.dt_mov, 'rrrrmm') <=
                                lpad(&&p_ano, 4, 0) || lpad(&&p_mes, 2, 0))
                    and rcarg.dt_mov IN
                        (Select MAX(u.dt_mov)
                           From dda_rh.reg_cargos u
                          Where u.remp_chapa = chapa
                            and to_char(u.dt_mov, 'rrrrmm') <=
                                lpad(&&p_ano, 4, 0) || lpad(&&p_mes, 2, 0))
                    and demp.id = 4 ---------------------------> 2 = Sesi 4 = Senai
                    and salario is not null) cons,
                dda_bi.dim_cargos carg
         where cons.Ddesig_cod = carg.cod
        --          order by maior_faixa_sal desc
        )
 group by Demp_id, "Ponto Inicial (R$)", "Ponto Final (R$)"
 order by "Ponto Final (R$)" desc
 
 
-- motivos de movimentacao
 
select * --m.descr, c.*
  from dda_rh.reg_cargos c
     , dda_rh.motivos_movimentacao m, dda_bi.fat_recursos_humanos f, dda_rh.cargos ca
 where c.mmov_cod = m.cod
 and   c.remp_chapa = f.dpro_id
 and   c.car_cod = ca.cod
 and   c.remp_emp_cod = ca.emp_cod
 and   decode(c.car_emp_cod,2,4) = f.demp_id
 and   to_char(c.dt_mov,'yyyymm') = f.dt_id
 and dtpmov_id = 5
   and c.remp_chapa = 28419;
   
select dpro.matricula                  matricula
                   , dmdes.descricao                 motivo_desligamento
                   , frh.*
                from dda_bi.fat_recursos_humanos     frh
                   , dda_bi.dim_tipo_mov_rh          dtrh
                   , dda_bi.dim_profissionais        dpro
                   , dda_bi.dim_motivos_desligamentos dmdes
               where dtrh.id                         = frh.dtpmov_id
                 and dpro.id                         = frh.dpro_id
                 and dmdes.id                        = frh.dmotdesl_id
                 and dtrh.id                         = 1 --rescisão
                 and frh.dpro_id = 202592
                 and dmdes.flag_atual = 'S' ---------> flag 's'
 


-- educacao


select * from dda_sis.sis_cadastro_candidatos_alunos cac
where nome like 'A%ALBA'


select * from dda_sis.sis_alunos_matriculados where cca_id = 1240503

--select * from dda_sis.sis_alunos_mat_disc where numero_matricula = 156797

select * from dda_sis.sis_turmas where id = 156797

select * from dda_sis.sis_programacao_cursos_modulos where id = 176553

select * from dda_sis.sis_cursos_modulos where id = 108656

select * from dda_sis.sis_cursos where id = 4016

select * from dda_sis.sis_alunos_matriculados where cca_id = 1240503

select * from dda_sis.sis_result_avaliacoes_aluno where alun_id = 1240503

SELECT 'ECL' TIPO,
       UNES.ID UER_CODIGO,
       UNES.DESCRICAO UER_TITULO,
       UNID.NUMERO_UNIDADE CAT,
       UNID.RAZAO_SOCIAL CAT_NOME,
       ARE.NOME JURISDICAO,
       CURS.ID PRODUTO_CODIGO,
       CURS.TITULO PRODUTO_TITULO,
       MODO.ID CURSO_CODIGO,
       MODO.TITULO CURSO_TITULO,
       '' CLASSIFICACAO,
       ALUN.DATA_INCLUSAO DATA_SISTEMA,
       ALUN.DATA_MATRICULA DATA_INGRESSO,
       ALUN.CODIGO_IDENTIFICADOR,
       CCA.NOME NOME,
       CCA.CPF_CIC CPF,
       CCA.NIT NIT,
       CCA.NOME_MAE NOME_MAE,
       CCA.DATA_NASCIMENTO DATA_NASCIMENTO,
       TRUNC(MONTHS_BETWEEN(SYSDATE, CCA.DATA_NASCIMENTO) / 12) IDADE,
       CCA.CERTIDAO_NASCIMENTO CERTIDAO_NASCIMENTO,
       DECODE(CCA.TIPO_RESPONSAVEL, 'M', 'MAE', 'P', 'PAI', 'OUTRO') TIPO_RESPONSAVEL,
       DECODE(CCA.TIPO_RESPONSAVEL,
              'M',
              CCA.NOME_MAE,
              'P',
              CCA.NOME_PAI,
              CCA.RESP_CANDIDATO_ALUNO) NOME_RESPONSAVEL,
       DECODE(CCA.TIPO_RESPONSAVEL,
              'M',
              CCA.CPF_MAE,
              'P',
              CCA.CPF_PAI,
              CCA.CPF_RESPONSAVEL) CPF_RESPONSAVEL,
       DECODE(CCA.TIPO_RESPONSAVEL,
              'M',
              CCA.EMPRESA_MAE,
              'P',
              CCA.EMPRESA_PAI,
              ' ') EMPRESA_RESPONSAVEL,
       CCA.DATA_NASCIMENTO_RESPONSAVEL DATA_NASCIMENTO_RESPONSAVEL,
       DECODE(PES.ID1,
              '',
              '',
              PES.ID1 || '-' || LPAD(PES.ID2, 4, '0') || '/' ||
              LPAD(PES.ID3, 2, '0')) EMPRESA_CNPJ,
       PES.NOME EMPRESA_NOME,
       CCA.RUA RUA,
       CCA.NUMERO NUMERO,
       CCA.COMPLEMENTO COMPLEMENTO,
       CCA.BAIRRO BAIRRO,
       CCA.UF_SIGLA UF,
       CCA.CEP CEP,
       MUN.NOME MUNICIPIO,
       CCA.DDD_RESIDENCIAL DDD_RESIDENCIAL,
       CCA.TELEFONE_RESIDENCIAL TELEFONE_RESIDENCIAL,
       CCA.DDD_CELULAR DDD_CELULAR,
       CCA.TELEFONE_CELULAR TELEFONE_CELULAR,
       TURM.SIGLA SIGLA_TURMA,
       DECODE(ALUN.SITUACAO_SAIDA_ALUNO,
              'ATV',
              'Ativo',
              'AF',
              'Afastado',
              'APT',
              'Apto',
              'APR',
              'Aprovado',
              'C',
              'Concluinte',
              'CAN',
              'Cancelado',
              'CON',
              'Concluinte',
              'ED',
              'Em Desenvolvimento',
              'EXC',
              'Excluído',
              'ENC',
              'Encerrado',
              'EV',
              'Evadido',
              'NAP',
              'Não Apto',
              'REP',
              'Reprovado',
              'REM',
              'Remanejamento',
              'TR',
              'Transferido para',
              'TC',
              'Trancamento',
              ALUN.SITUACAO_SAIDA_ALUNO) SITUACAO_SAIDA,
       ALUN.DATA_INICIO_SITUACAO_ALUNO DATA_INICIO_SITUACAO_ALUNO,
       REPLACE(REPLACE(ALUN.MOTIVO_CANCELAMENTO, CHR(10), ''), CHR(9), '') MOTIVO_CANCELAMENTO,
       DECODE(ALUN.CLIENTELA_SESI,
              'C',
              'Comunidade',
              'D',
              'Dependente Sesi',
              'E',
              'EBEP',
              'F',
              'Sistema FIERGS',
              'S',
              'Cliente Sesi',
              ALUN.CLIENTELA_SESI) CLIENTELA_SESI,
       ALUN.ISENTO ISENTO,
       ALUN.GRATUIDADE GRATUIDADE,
       ALUN.BAIXA_RENDA BAIXA_RENDA,
       CRE.CODIGO CR,
       CRE.DESCRICAO CR_DESCRICAO,
       '' DISCIPLINA_CODIGO,
       '' DISCIPLINA_TITULO,
       REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TURN.PRIMEIRO_TURNO || ' ' ||
                                               TURN.SEGUNDO_TURNO || ' ' ||
                                               TURN.TERCEIRO_TURNO || ' ' ||
                                               TURN.TURNO_ALTERNATIVO,
                                               '1',
                                               'Manhã'),
                                       '2',
                                       'Tarde'),
                               '3',
                               'Noite'),
                       '4',
                       'Normal'),
               '5',
               'Vespertino') PROG_TURNO,
       '' NUM_PARTICIPANTES,
       '' DECLARACAO,
       '' EVENTO_ID,
       PCMO.DATA_INICIO_REALIZACAO PROG_DT_INICIO,
       PCMO.DATA_FIM_REALIZACAO PROG_DT_FIM,
       ALUN.ID ALUN_ID,
       ALUN.UNID_ID ALUN_UNID_ID,
       ALUN.UNID_GPS_CODIGO ALUN_UNID_GPS_CODIGO,
       CCA.ID CCA_ID,
       CCA.UNID_ID CCA_UNID_ID,
       CCA.UNID_GPS_CODIGO CCA_UNID_GPS_CODIGO,
       TURM.ID TURM_ID,
       TURM.UNID_ID TURM_UNID_ID,
       TURM.UNID_GPS_CODIGO TURM_UNID_GPS_CODIGO,
       PCMO.ID PCMO_ID,
       PCMO.UNID_ID PCMO_UNID_ID,
       PCMO.UNID_GPS_CODIGO PCMO_UNID_GPS_CODIGO,
       CURM.ID CURM_ID,
       CURM.UNID_ID CURM_UNID_ID,
       CURM.UNID_GPS_CODIGO CURM_UNID_GPS_CODIGO,
       CURS.ID CURS_ID,
       CURS.UNID_ID CURS_UNID_ID,
       CURS.UNID_GPS_CODIGO CURS_UNID_GPS_CODIGO,
       UNID.ID UNID_ID,
       UNID.GPS_CODIGO UNID_UNID_GPS_CODIGO,
       MODO.ID MODO_ID,
       MODO.UNID_ID MODO_UNID_ID,
       MODO.UNID_GPS_CODIGO MODO_UNID_GPS_CODIGO,
       UNES.ID UNES_ID,
       UNES.UNID_GPS_CODIGO UNES_UNID_GPS_CODIGO,
       CURSSR.ID CURSSR_ID,
       CCA.EMAIL E_MAIL,
       CCA.RG RG,
       CCA.SEXO SEXO,
       CNA.CODIGO CNA,
       CNA.DESCRICAO CNA_DESCRICAO,
       NVL(MODO.CH_ENSINO_PRESENCIAL, 0) CH_ENSINO_PRESENCIAL,
       NVL(MODO.CH_ENSINO_DISTANCIA, 0) CH_ENSINO_DISTANCIA,
       PCMO.VALOR_CURSO_MODULO VALOR_CURSO,
       PCMO.ENVIADO_DR ENVIADO_DR,
       PCMO.LIBERADO_DR LIBERADO_DR,
       TPMA.DESCRICAO TIPO_MATRICULA,
       TPCL.DESCRICAO TIPO_CLIENTE,
       DECODE(PCMO.NA_EMPRESA,
              'C',
              'CAT',
              'O',
              'OUTROS',
              'E',
              'EMPRESA',
              '') LOCAL,
       '' CARGA_HORARIA,
       ALUN.CARGO_FUNCAO CARGO_FUNCAO,
       ALUN.ORGAO_SETOR ORGAO_SETOR,
       '' SITUACAO_SAIDA_DISC,
       '' COLA_NOME,
       NAC.DESCRICAO NAC_DESCRICAO,
       PCMO.CECT_CODIGO CECT_CODIGO,
       ALUN.DATA_BI DATA_BI,
       ALUN.USUARIO_INCLUSAO USUARIO_INCLUSAO_MATR,
       ALUN.DATA_INCLUSAO DATA_INCLUSAO_MATR,
       SSAL.APELIDO SSAL_APELIDO,
       SSAL.DESCRICAO SSAL_DESCRICAO,
       SSI.APELIDO SSI_APELIDO,
       SSI.DESCRICAO SSI_DESCRICAO,
       '' SSADS_APELIDO,
       '' SSADS_DESCRICAO,
       '' SSADS_SSI_APELIDO,
       '' SSADS_SSI_DESCRICAO
-- SELECT COUNT(*)
  FROM SIS_ALUNOS_MATRICULADOS ALUN -- 2.447.248
  
  LEFT JOIN SIS_CADASTRO_CANDIDATOS_ALUNOS CCA -- 1.132.638
    ON ALUN.CCA_ID = CCA.ID
   AND ALUN.CCA_UNID_ID = CCA.UNID_ID      
   AND ALUN.CCA_UNID_GPS_CODIGO = CCA.UNID_GPS_CODIGO      
--   AND CCA.CPF_CIC = '80903517000'

  JOIN SIS_TURMAS TURM --   141.777
    ON ALUN.TURM_ID = TURM.ID      
   AND ALUN.TURM_UNID_ID = TURM.UNID_ID      
   AND ALUN.TURM_UNID_GPS_CODIGO = TURM.UNID_GPS_CODIGO
   
  JOIN SIS_PROGRAMACAO_CURSOS_MODULOS PCMO --   157.729
    ON TURM.PCMO_ID = PCMO.ID      
   AND TURM.PCMO_UNID_ID = PCMO.UNID_ID      
   AND TURM.PCMO_UNID_GPS_CODIGO = PCMO.UNID_GPS_CODIGO
   
  JOIN SIS_CURSOS_MODULOS CURM --    25.948
    ON PCMO.CURM_ID = CURM.ID      
   AND PCMO.CURM_UNID_ID = CURM.UNID_ID      
   AND PCMO.CURM_UNID_GPS_CODIGO = CURM.UNID_GPS_CODIGO
  
  JOIN SIS_CURSOS CURS --    11.378
    ON CURM.CURS_ID = CURS.ID      
   AND CURM.CURS_UNID_ID = CURS.UNID_ID      
   AND CURS.MEPR_GPS_CODIGO = 2      
   AND CURS.UNID_GPS_CODIGO = 2      
   AND CURS.MEPR_ID = 18
   
  JOIN SIS_UNIDADES UNID --       162
    ON NVL(PCMO.UNID_EXECUTORA, PCMO.UNID_ID) = UNID.ID      
   AND UNID.GPS_CODIGO = 2
  
  LEFT JOIN AREAS_JURISDICAO ARE --       123
    ON ARE.CODIGO = UNID.ARE_CODIGO      
   AND ARE.GPS_CODIGO = UNID.ARE_GPS_CODIGO
  
  JOIN SIS_MODULOS_OCUPACIONAIS MODO --    20.813
    ON CURM.MODO_ID = MODO.ID      
   AND CURM.MODO_UNID_ID = MODO.UNID_ID      
   AND CURM.MODO_UNID_GPS_CODIGO = MODO.UNID_GPS_CODIGO
  
  JOIN GES_UNID_ESTRATEGICAS UNES --         6
    ON CURS.UNES_ID = UNES.ID      
   AND CURS.UNES_GPS_CODIGO = UNES.UNID_GPS_CODIGO      
   AND 2 = UNES.UNID_GPS_CODIGO
  
  LEFT JOIN GES_CURS_SR CURSSR --       137
    ON CURS.ID = CURSSR.CURS_ID     
   AND CURS.UNID_ID = CURSSR.CURS_UNID_ID      
   AND CURS.UNID_GPS_CODIGO = CURSSR.CURS_GPS_CODIGO
  
  JOIN CENTROS_RESP CRE --     7.444
    ON CURSSR.CRESP_ID = CRE.ID
  
  LEFT JOIN MUNICIPIOS MUN --     6.656
    ON CCA.MUN_CODIGO = MUN.CODIGO
  
  LEFT JOIN GES_TIPOS_MATRICULAS TPMA --         4
    ON ALUN.GES_TPMA_ID = TPMA.ID
  
  LEFT JOIN GES_TIPOS_CLIENTES TPCL --         3
    ON ALUN.GES_TPCL_ID = TPCL.ID
  
  LEFT JOIN SIS_TURNOS TURN --        10
    ON PCMO.TURN_ID = TURN.ID
  
  LEFT JOIN NACIONALIDADES NAC --        78
    ON NAC.CODIGO = CCA.NAC_CODIGO
  
  LEFT JOIN GES_SITUACAO_SAIDA_ALUNOS SSAL --        27
    ON ALUN.SSAL_ID = SSAL.ID
  
  LEFT JOIN GES_SITUACAO_SAIDA_INTERNA SSI --        25
    ON SSAL.SSI_APELIDO = SSI.APELIDO
  
  LEFT JOIN PESSOAS PES -- 2.882.326  
    ON ALUN.CLSE_PES_ID1 = PES.ID1      
   AND ALUN.CLSE_PES_ID2 = PES.ID2      
   AND ALUN.CLSE_PES_ID3 = PES.ID3
   
  LEFT JOIN COD_ATV_NACIONAL CNA --     4.336
    ON PES.CNA_CODIGO = CNA.CODIGO
    
  where  cca.id = 1194745--1240503

ORDER BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20


-- 769011


---SAUDE

--tracado audiometrico
select */*cd_requisicao, cd_exame, tx_nome_func, count(*)*/ from DIM_REQUISICAO_TRABALHADOR t 
where tx_nome_func = 'CARLOS HENRIQUE DE FREITAS LOUREIRO'
order by dt_exame_efetuado
--and (QT_OD_3K_VO >=25 or QT_OE_3K_VO >= 25)



select /*cd_requisicao, cd_exame, */tx_nome_func, count(*) from DIM_REQUISICAO_TRABALHADOR t 
where QT_OD_3K_VO >=25 or QT_OE_3K_VO >= 25
group by /*cd_requisicao, cd_exame,*/ tx_nome_func
having count(*) >1


select ce.cd_classe_exame, tx_classe_exame, ce.id_ativado cd_exame, tx_nome_exame, ex.id_ativado
from exame ex, classe_exame ce
where ex.cd_classe_exame = ce.cd_classe_exame
--and tx_nome_exame = 'PROGESTERONA'
and ce.id_ativado = 'A'
order by ce.cd_classe_exame
 
select * from ODI_S4_EXEC.Requisicao REQ where cd_requisicao = 3529
select * from ODI_S4_EXEC.RESULTADO_AUDIO RESAU where cd_requisicao is null

-- 4081 estao na requisicao exame e nao estao na requisicoes
select count(*) from ODI_S4_EXEC.REQUISICAO_EXAME REQEX where  
not exists (select cd_requisicao from ODI_S4_EXEC.Requisicao REQ where req.cd_requisicao = reqex.cd_requisicao)


--2508 estao na resultado audio e nao estao na requisicoes, ou seja, sem resultados
select count(*) from ODI_S4_EXEC.RESULTADO_AUDIO REQEX where  
not exists (select cd_requisicao from ODI_S4_EXEC.Requisicao REQ where req.cd_requisicao = reqex.cd_requisicao)

--839 estao na requisicoes e nao estao na requisicoes_exames
select count(*) from ODI_S4_EXEC.requisicao REQ where  
not exists (select cd_requisicao from ODI_S4_EXEC.Requisicao_exame REQex where req.cd_requisicao = reqex.cd_requisicao)

--75866 estao na requisicoes e nao estao na resultados_audio
select count(*) from ODI_S4_EXEC.requisicao REQ where  
not exists (select cd_requisicao from ODI_S4_EXEC.Resultado_audio REQex where req.cd_requisicao = reqex.cd_requisicao)

--146980 requisicoes exames sem resultados audio
select count(*) from ODI_S4_EXEC.requisicao_exame REQ where  
not exists (select cd_requisicao from ODI_S4_EXEC.Resultado_audio REQex where req.cd_requisicao = reqex.cd_requisicao)


-- 0 resultados audio sem requisicoes exames
select count(*) from ODI_S4_EXEC.resultado_audio REQ where  
not exists (select cd_requisicao from ODI_S4_EXEC.requisicao_exame REQex where req.cd_requisicao = reqex.cd_requisicao)


 Procedure ODS_Base_Historica_Ges_Prc  Is
    v_log_seq         number;
    v_dt_inicio       date;
    v_dia_primeiro    date;
    v_dia_quinze      date;
    v_ultima_carga    date;
    Cursor c_par Is (select  p.*
                      from   bi_parametros p
                      where  p.situacao = 'A'
                      and    p.processo = 'ODS_BASE_HISTORICA_GES_PRC' );

  Begin
      select trunc(sysdate,'YEAR') into v_dt_inicio from dual;
    --   select add_months(trunc(sysdate,'MONTH'),-8)into v_dia_quinze  from dual;
  --  select add_months(trunc(sysdate,'MONTH')+10,-7)into v_dia_quinze from dual;
      select trunc(sysdate,'MONTH') into v_dia_primeiro from dual;
      select trunc(sysdate,'MONTH')+14 into v_dia_quinze from dual;
    --  select max(trunc(data_ini,'month'))into v_ultima_carga from ODS_BASE_HISTORICA_GES;

 --     if v_ultima_carga is null then
            if trunc(sysdate) = v_dia_primeiro then
         --       For r_par in c_par Loop
         --           Select log_seq.nextval into v_log_seq from dual;
         --           Insert into log_exec_bi values (v_log_seq, 'Ods_Base_Historica_Ges_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.ods_base_historica_ges_prc(v_dt_inicio,v_dia_primeiro);
         --           Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
         --       End Loop;
         --   elsif trunc(sysdate) = v_dia_quinze then
            elsif add_months(trunc(sysdate),-7) = v_dia_quinze then
         --           For r_par in c_par Loop
         --           Select log_seq.nextval into v_log_seq from dual;
         --           Insert into log_exec_bi values (v_log_seq, 'Ods_Base_Historica_Ges_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.ods_base_historica_ges_prc(v_dt_inicio,v_dia_quinze);
         --           Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
         --       End Loop;
            else
               null;
            end if;
    --   else
     /*       if trunc(sysdate) = v_dia_primeiro then
         --       For r_par in c_par Loop
         --           Select log_seq.nextval into v_log_seq from dual;
         --           Insert into log_exec_bi values (v_log_seq, 'Ods_Base_Historica_Ges_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.ods_base_historica_ges_prc(add_months(v_ultima_carga,-1),v_dia_primeiro);
         --           Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
         --       End Loop;
            elsif trunc(sysdate) = v_dia_quinze then
         --           For r_par in c_par Loop
         --           Select log_seq.nextval into v_log_seq from dual;
         --           Insert into log_exec_bi values (v_log_seq, 'Ods_Base_Historica_Ges_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.ods_base_historica_ges_prc(v_dia_primeiro,v_dia_quinze);
          --          Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
          --      End Loop;
            else
               null;
            end if;*/
    --    end if;   
    --
  End ODS_Base_Historica_Ges_Prc;
  
  ------------------------------------------------
  
  Procedure carga_fat_educacao_hist_Prc  Is
    v_log_seq         number;
    v_dt_inicio       date;
    v_dia_primeiro    date;
    v_dia_quinze      date;
    v_ultima_carga           number;
    Cursor c_par Is (select  p.*
                      from   bi_parametros p
                      where  p.situacao = 'A'
                      and    p.processo = 'CARGA_FAT_EDUCACAO_HIST_PRC' );

  Begin
      select trunc(sysdate,'YEAR') into v_dt_inicio from dual;
      select trunc(sysdate,'MONTH') into v_dia_primeiro from dual;
      select trunc(sysdate,'MONTH')+9 into v_dia_quinze from dual;
    --  select max(trunc(data_ini,'month'))into v_ultima_carga from ODS_BASE_HISTORICA_GES;

    --  if v_ultima_carga is null then
      
            if trunc(sysdate) = v_dia_primeiro then
                 SELECT add_months(trunc(sysdate,'MONTH')+10,-7)INTO V_DIA_QUINZE FROM DUAL;
 --               For r_par in c_par Loop
 --                   Select log_seq.nextval into v_log_seq from dual;
 --                   Insert into log_exec_bi values (v_log_seq, 'Carga_Fat_Educacao_Hist_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.carga_fat_educacao_hist_prc(v_dt_inicio,v_dia_primeiro);
 --                   Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
 --               End Loop;
            elsif trunc(sysdate) = v_dia_quinze then
 --                   For r_par in c_par Loop
 --                   Select log_seq.nextval into v_log_seq from dual;
 --                   Insert into log_exec_bi values (v_log_seq, 'Carga_Fat_Educacao_Hist_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.carga_fat_educacao_hist_prc(v_dt_inicio,v_dia_quinze);
  --                  Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
  --              End Loop;
            else
               null;
            end if;
/*       else
           if trunc(sysdate) = v_dia_primeiro then
                For r_par in c_par Loop
                    Select log_seq.nextval into v_log_seq from dual;
                    Insert into log_exec_bi values (v_log_seq, 'Carga_Fat_Educacao_Hist_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.ods_base_historica_ges_prc(v_dt_inicio,v_dia_primeiro);
                    Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
                End Loop;
            elsif trunc(sysdate) = v_dia_quinze then
                    For r_par in c_par Loop
                    Select log_seq.nextval into v_log_seq from dual;
                    Insert into log_exec_bi values (v_log_seq, 'Carga_Fat_Educacao_Hist_Prc', sysdate, null, null);
                    
                    bi_educacao_pck.ods_base_historica_ges_prc(v_dt_inicio,v_dia_quinze);
                    Update log_exec_bi set dt_fim = sysdate where id = v_log_seq;
                    commit;
                End Loop;
            else
               null;
            end if;
        end;*/
    --
  End carga_fat_educacao_hist_Prc;
  
  ------------------------------------------------
Begin
  Bi_Util_Pck.Set_Tab_Men_Prc;
  
  
  
  
---- consulta

  select count(*) from
  (select sysdate data_carga,
         ddt.data_ini,

         case
           when curs.mepr_id = 14 then
            'eja'
           when curs.mepr_id = 20 then
            'ei criancas e adolescentes'
           when curs.mepr_id = 18 then
            'ecl'
           when curs.mepr_id = 12 then
            'educacao'
           else
            to_char(curs.mepr_id)
         end tipo,
         curs.mepr_id,
         unes.id uer_codigo,
         unes.descricao uer_titulo,
         unid.numero_unidade cat,
         unid.razao_social cat_nome,
         are.nome jurisdicao,
         curs.id produto_codigo,
         curs.titulo produto_titulo,
         modo.id curso_codigo,
         modo.titulo curso_titulo,
         alun.data_inclusao data_sistema,
         alun.data_matricula data_ingresso,
         alun.codigo_identificador,
         cca.nome nome,
         cca.cpf_cic cpf,
         cca.nit nit,
         cca.nome_mae nome_mae,
         cca.data_nascimento data_nascimento,
         cca.origem_escolar,
         case
           when cca.origem_escolar = 'm' then
            'municipal'
           when cca.origem_escolar = 'e' then
            'estadual'
           when cca.origem_escolar = 'f' then
            'federal'
           when cca.origem_escolar = 'p' then
            'particular'
           when (cca.origem_escolar is null or cca.origem_escolar = ' ') then
            cca.origem_escolar
           else
            cca.origem_escolar
         end desc_origem_escolar,
         trunc(months_between(sysdate, cca.data_nascimento) / 12) idade,
         cca.certidao_nascimento certidao_nascimento,
         decode(cca.tipo_responsavel, 'm', 'mae', 'p', 'pai', 'outro') tipo_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.nome_mae,
                'p',
                cca.nome_pai,
                cca.resp_candidato_aluno) nome_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.cpf_mae,
                'p',
                cca.cpf_pai,
                cca.cpf_responsavel) cpf_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.empresa_mae,
                'p',
                cca.empresa_pai,
                ' ') empresa_responsavel,
         cca.data_nascimento_responsavel data_nascimento_responsavel,
         decode(pes.id1,
                '',
                '',
                pes.id1 || '-' || lpad(pes.id2, 4, '0') || '/' ||
                lpad(pes.id3, 2, '0')) empresa_cnpj,
         pes.nome empresa_nome,
         cca.uf_sigla uf,
         cca.cep cep,
         mun.nome municipio,
         turm.sigla sigla_turma,
         decode(alun.situacao_saida_aluno,
                'atv',
                'ativo',
                'af',
                'afastado',
                'apt',
                'apto',
                'apr',
                'aprovado',
                'c',
                'concluinte',
                'can',
                'cancelado',
                'con',
                'concluinte',
                'ed',
                'em desenvolvimento',
                'exc',
                'excluído',
                'enc',
                'encerrado',
                'ev',
                'evadido',
                'nap',
                'não apto',
                'rep',
                'reprovado',
                'rem',
                'remanejamento',
                'tr',
                'transferido para',
                'tc',
                'trancamento',
                alun.situacao_saida_aluno) situacao_saida,
         alun.data_inicio_situacao_aluno data_inicio_situacao_aluno,
         replace(replace(alun.motivo_cancelamento, chr(10), ''), chr(9), '') motivo_cancelamento,
         decode(alun.clientela_sesi,
                'c',
                'comunidade',
                'd',
                'dependente sesi',
                'e',
                'ebep',
                'f',
                'sistema fiergs',
                's',
                'cliente sesi',
                alun.clientela_sesi) clientela_sesi,
         alun.isento isento,
         alun.gratuidade gratuidade,
         alun.baixa_renda baixa_renda,
         cre.codigo cr,
         cre.descricao cr_descricao,
         replace(replace(replace(replace(replace(turn.primeiro_turno || ' ' ||
                                                 turn.segundo_turno || ' ' ||
                                                 turn.terceiro_turno || ' ' ||
                                                 turn.turno_alternativo,
                                                 '1',
                                                 'manhã'),
                                         '2',
                                         'tarde'),
                                 '3',
                                 'noite'),
                         '4',
                         'normal'),
                 '5',
                 'vespertino') prog_turno,
         pcmo.data_inicio_realizacao prog_dt_inicio,
         pcmo.data_fim_realizacao prog_dt_fim,
         alun.unid_id alun_unid_id,
         alun.unid_gps_codigo alun_unid_gps_codigo,
         cca.id cca_id,
         alun.id alun_id,
         cca.unid_id cca_unid_id,
         cca.unid_gps_codigo cca_unid_gps_codigo,
         turm.id turm_id,
         turm.unid_id turm_unid_id,
         turm.unid_gps_codigo turm_unid_gps_codigo,
         pcmo.id pcmo_id,
         pcmo.unid_id pcmo_unid_id,
         pcmo.unid_gps_codigo pcmo_unid_gps_codigo,
         curm.id curm_id,
         curm.unid_id curm_unid_id,
         curm.unid_gps_codigo curm_unid_gps_codigo,
         curs.id curs_id,
         curs.unid_id curs_unid_id,
         curs.unid_gps_codigo curs_unid_gps_codigo,
         unid.id unid_id,
         unid.gps_codigo unid_unid_gps_codigo,
         modo.id modo_id,
         modo.unid_id modo_unid_id,
         modo.unid_gps_codigo modo_unid_gps_codigo,
         unes.id unes_id,
         unes.unid_gps_codigo unes_unid_gps_codigo,
         curssr.id curssr_id,
         cca.email e_mail,
         cca.rg rg,
         cca.sexo sexo,
         cna.codigo cna,
         cna.descricao cna_descricao,
         nvl(modo.ch_ensino_presencial, 0) ch_ensino_presencial,
         nvl(modo.ch_ensino_distancia, 0) ch_ensino_distancia,
         pcmo.valor_curso_modulo valor_curso,
         pcmo.enviado_dr enviado_dr,
         pcmo.liberado_dr liberado_dr,
         tpma.descricao tipo_matricula,
         tpcl.descricao tipo_cliente,
         decode(pcmo.na_empresa,
                'c',
                'cat',
                'o',
                'outros',
                'e',
                'empresa',
                '') local,

         alun.cargo_funcao cargo_funcao,
         alun.orgao_setor orgao_setor,
         nac.descricao nac_descricao,
         pcmo.cect_codigo cect_codigo,
         alun.data_bi data_bi,
         alun.usuario_inclusao usuario_inclusao_matr,
         alun.data_inclusao data_inclusao_matr,
         ssal.apelido ssal_apelido,
         ssal.descricao ssal_descricao,
         ssi.apelido ssi_apelido,
         ssi.descricao ssi_descricao,
         cca.cpf_cic,
         cca.rua,
         cca.numero,
         cca.complemento complemento,
         cca.bairro,
         cca.mun_codigo,
         case
           when alun.data_matricula between ddt.data_ini and ddt.data_fim then
            'data_matricula'
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                ddt.data_ini and ddt.data_fim then
            'data_bi'
           else
            '-'
         end as regra_data,
         case --quando for ensino infantil ei código 20, mantem o inscrito (i)
           when curs.mepr_id = 20 and alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr') then
            'somente situações válidas'
           when curs.mepr_id <> 20 and
                alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr', 'i') then
            'somente situações válidas'
           else
            'situações não contabilizadas para realizado matrícula'
         end regra_sit_aluno,
         case
           when alun.data_matricula between ddt.data_ini and ddt.data_fim then
            1
           else
            0
         end qtd_data_matricula,
         case
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                ddt.data_ini and ddt.data_fim then
            1
           else
            0
         end qtd_data_bi,

         cca.ddd_cobr,
         cca.fone_cobr,

         cca.ddd_comercial,
         cca.fone_comercial,

         cca.ddd_autorizado,
         cca.telefone_autorizado,

         cca.ddd_celular,
         cca.telefone_celular,

         cca.telefone_celular2,

         cca.ddd_mae,
         cca.telefone_mae,

         cca.ddd_pai,
         cca.telefone_pai,

         cca.ddd_recado,
         cca.telefone_recado,

         cca.ddd_residencial,
         cca.telefone_residencial,

         cca.ddd_responsavel,
         cca.telefone_responsavel,

         cca.tel_empresa_mae,
         cca.tel_empresa_pai,
         to_char(ddt.data_fim),  -- voltar com zero depois
         0,

         /*case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.telefone_residencial is not null or
            cca.telefone_celular is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_1,

         case
           when ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
                (cca.rua is not null and cca.numero is not null and
                cca.bairro is not null and cca.mun_codigo is not null and
                (cca.telefone_residencial is not null or
                cca.telefone_celular is not null or
                cca.fone_cobr is not null or
                cca.fone_comercial is not null or
                cca.telefone_recado is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_2,*/

         case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.fone_cobr is not null or cca.fone_comercial is not null or
            cca.telefone_autorizado is not null or
            cca.telefone_celular is not null or
            cca.telefone_celular2 is not null or
            cca.telefone_mae is not null or cca.telefone_pai is not null or
            cca.telefone_recado is not null or
            cca.telefone_residencial is not null or
            cca.telefone_responsavel is not null or
            cca.tel_empresa_mae is not null or
            cca.tel_empresa_pai is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_3

  -- select count(cca.id || alun.id), count(distinct cca.id || alun.id)

  --
  -- select count(1)
    from (select distinct trunc(data, 'mm') data_ini,
                          last_day(trunc(data, 'mm')) data_fim
            from dda_bi.dim_data ddt
           where ddt.data between '01/01/2017' and '01/03/2017') ddt
    join sis_alunos_matriculados alun -- 2.447.248
      on 1 = case
           when

            (alun.data_matricula between ddt.data_ini and ddt.data_fim) then
            1
           when TRUNC(NVL(ALUN.DATA_BI,
                    TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)))) BETWEEN
                DDT.DATA_INI AND DDT.DATA_FIM THEN
            1
           else
            0
         end
  --  and 1 = 0
    join sis_cadastro_candidatos_alunos cca -- 1.132.638
      on alun.cca_id = cca.id
     and alun.cca_unid_id = cca.unid_id
     and alun.cca_unid_gps_codigo = cca.unid_gps_codigo

    join sis_turmas turm --   141.777
      on alun.turm_id = turm.id
     and alun.turm_unid_id = turm.unid_id
     and alun.turm_unid_gps_codigo = turm.unid_gps_codigo
    join sis_programacao_cursos_modulos pcmo --   157.729
      on turm.pcmo_id = pcmo.id
     and turm.pcmo_unid_id = pcmo.unid_id
     and turm.pcmo_unid_gps_codigo = pcmo.unid_gps_codigo
    join sis_cursos_modulos curm --    25.948
      on pcmo.curm_id = curm.id
     and pcmo.curm_unid_id = curm.unid_id
     and pcmo.curm_unid_gps_codigo = curm.unid_gps_codigo
    join sis_cursos curs --    11.378
      on curm.curs_id = curs.id
     and curm.curs_unid_id = curs.unid_id
     and curs.mepr_gps_codigo = 2
     and curs.unid_gps_codigo = 2

    join sis_unidades unid --       162
      on nvl(pcmo.unid_executora, pcmo.unid_id) = unid.id
     and unid.gps_codigo = 2
    left join areas_jurisdicao are --       123
      on are.codigo = unid.are_codigo
     and are.gps_codigo = unid.are_gps_codigo
    join sis_modulos_ocupacionais modo --    20.813
      on curm.modo_id = modo.id
     and curm.modo_unid_id = modo.unid_id
     and curm.modo_unid_gps_codigo = modo.unid_gps_codigo
    left join ges_unid_estrategicas unes --         6
      on curs.unes_id = unes.id
     and curs.unes_gps_codigo = unes.unid_gps_codigo
     and 2 = unes.unid_gps_codigo
    left join ges_curs_sr curssr --       137
      on curs.id = curssr.curs_id
     and curs.unid_id = curssr.curs_unid_id
     and curs.unid_gps_codigo = curssr.curs_gps_codigo
    left join centros_resp cre --     7.444
      on curssr.cresp_id = cre.id
    left join municipios mun --     6.656
      on cca.mun_codigo = mun.codigo
    left join ges_tipos_matriculas tpma --         4
      on alun.ges_tpma_id = tpma.id
    left join ges_tipos_clientes tpcl --         3
      on alun.ges_tpcl_id = tpcl.id
    left join sis_turnos turn --        10
      on pcmo.turn_id = turn.id
    left join nacionalidades nac --        78
      on nac.codigo = cca.nac_codigo
    left join ges_situacao_saida_alunos ssal --        27
      on alun.ssal_id = ssal.id
    left join ges_situacao_saida_interna ssi --        25
      on ssal.ssi_apelido = ssi.apelido
    left join pessoas pes -- 2.882.326
      on alun.clse_pes_id1 = pes.id1
     and alun.clse_pes_id2 = pes.id2
     and alun.clse_pes_id3 = pes.id3
    left join cod_atv_nacional cna --     4.336
      on pes.cna_codigo = cna.codigo
   -- where rownum <= 100
   )
  ------------------- 
 SELECT * FROM FAT_EDUCACAO WHERE DCLI_ID = 59591
SELECT * FROM DIM_CLIENTES_PF WHERE ID = 59591
select * from dda.pessoas where id1 = 59591
select * from dda.empresa where em

select count(*) from ods_base_historica_ges
truncate table  ods_base_historica_ges
truncate table  FAT_EDUCACAO_HIST
truncate table ods_base_historica_ges
select count(*) from ods_base_historica_ges
select * from ods_base_historica_ges
select distinct data_ini from ods_base_historica_ges
select * from base_historica_ges

select distinct dt_carga from fat_educacao_hist

select add_months((to_date('20171001','yyyymmdd')),-1)from dual

select add_months(trunc(sysdate,'MONTH')+10,-8) from dual;

select count(*) from fat_educacao f where f.dt_id >= '201701' and f.demp_id = 2


----- procedure carrega base hitorica ges com bulk e forall

create or replace procedure ods_base_historica_ges_prc  is

cursor c_carga_ods (p_dt_ini date, p_dt_fim date) is
  select sysdate data_carga,
         ddt.data_ini,

         case
           when curs.mepr_id = 14 then
            'eja'
           when curs.mepr_id = 20 then
            'ei criancas e adolescentes'
           when curs.mepr_id = 18 then
            'ecl'
           when curs.mepr_id = 12 then
            'educacao'
           else
            to_char(curs.mepr_id)
         end tipo,
         curs.mepr_id,
         unes.id uer_codigo,
         unes.descricao uer_titulo,
         unid.numero_unidade cat,
         unid.razao_social cat_nome,
         are.nome jurisdicao,
         curs.id produto_codigo,
         curs.titulo produto_titulo,
         modo.id curso_codigo,
         modo.titulo curso_titulo,
         alun.data_inclusao data_sistema,
         alun.data_matricula data_ingresso,
         alun.codigo_identificador,
         cca.nome nome,
         cca.cpf_cic cpf,
         cca.nit nit,
         cca.nome_mae nome_mae,
         cca.data_nascimento data_nascimento,
         cca.origem_escolar,
         case
           when cca.origem_escolar = 'm' then
            'municipal'
           when cca.origem_escolar = 'e' then
            'estadual'
           when cca.origem_escolar = 'f' then
            'federal'
           when cca.origem_escolar = 'p' then
            'particular'
           when (cca.origem_escolar is null or cca.origem_escolar = ' ') then
            cca.origem_escolar
           else
            cca.origem_escolar
         end desc_origem_escolar,
         trunc(months_between(sysdate, cca.data_nascimento) / 12) idade,
         cca.certidao_nascimento certidao_nascimento,
         decode(cca.tipo_responsavel, 'm', 'mae', 'p', 'pai', 'outro') tipo_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.nome_mae,
                'p',
                cca.nome_pai,
                cca.resp_candidato_aluno) nome_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.cpf_mae,
                'p',
                cca.cpf_pai,
                cca.cpf_responsavel) cpf_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.empresa_mae,
                'p',
                cca.empresa_pai,
                ' ') empresa_responsavel,
         cca.data_nascimento_responsavel data_nascimento_responsavel,
         decode(pes.id1,
                '',
                '',
                pes.id1 || '-' || lpad(pes.id2, 4, '0') || '/' ||
                lpad(pes.id3, 2, '0')) empresa_cnpj,
         pes.nome empresa_nome,
         cca.uf_sigla uf,
         cca.cep cep,
         mun.nome municipio,
         turm.sigla sigla_turma,
         decode(alun.situacao_saida_aluno,
                'atv',
                'ativo',
                'af',
                'afastado',
                'apt',
                'apto',
                'apr',
                'aprovado',
                'c',
                'concluinte',
                'can',
                'cancelado',
                'con',
                'concluinte',
                'ed',
                'em desenvolvimento',
                'exc',
                'excluído',
                'enc',
                'encerrado',
                'ev',
                'evadido',
                'nap',
                'não apto',
                'rep',
                'reprovado',
                'rem',
                'remanejamento',
                'tr',
                'transferido para',
                'tc',
                'trancamento',
                alun.situacao_saida_aluno) situacao_saida,
         alun.data_inicio_situacao_aluno data_inicio_situacao_aluno,
         replace(replace(alun.motivo_cancelamento, chr(10), ''), chr(9), '') motivo_cancelamento,
         decode(alun.clientela_sesi,
                'c',
                'comunidade',
                'd',
                'dependente sesi',
                'e',
                'ebep',
                'f',
                'sistema fiergs',
                's',
                'cliente sesi',
                alun.clientela_sesi) clientela_sesi,
         alun.isento isento,
         alun.gratuidade gratuidade,
         alun.baixa_renda baixa_renda,
         cre.codigo cr,
         cre.descricao cr_descricao,
         replace(replace(replace(replace(replace(turn.primeiro_turno || ' ' ||
                                                 turn.segundo_turno || ' ' ||
                                                 turn.terceiro_turno || ' ' ||
                                                 turn.turno_alternativo,
                                                 '1',
                                                 'manhã'),
                                         '2',
                                         'tarde'),
                                 '3',
                                 'noite'),
                         '4',
                         'normal'),
                 '5',
                 'vespertino') prog_turno,
         pcmo.data_inicio_realizacao prog_dt_inicio,
         pcmo.data_fim_realizacao prog_dt_fim,
         alun.unid_id alun_unid_id,
         alun.unid_gps_codigo alun_unid_gps_codigo,
         cca.id cca_id,
         alun.id alun_id,
         cca.unid_id cca_unid_id,
         cca.unid_gps_codigo cca_unid_gps_codigo,
         turm.id turm_id,
         turm.unid_id turm_unid_id,
         turm.unid_gps_codigo turm_unid_gps_codigo,
         pcmo.id pcmo_id,
         pcmo.unid_id pcmo_unid_id,
         pcmo.unid_gps_codigo pcmo_unid_gps_codigo,
         curm.id curm_id,
         curm.unid_id curm_unid_id,
         curm.unid_gps_codigo curm_unid_gps_codigo,
         curs.id curs_id,
         curs.unid_id curs_unid_id,
         curs.unid_gps_codigo curs_unid_gps_codigo,
         unid.id unid_id,
         unid.gps_codigo unid_unid_gps_codigo,
         modo.id modo_id,
         modo.unid_id modo_unid_id,
         modo.unid_gps_codigo modo_unid_gps_codigo,
         unes.id unes_id,
         unes.unid_gps_codigo unes_unid_gps_codigo,
         curssr.id curssr_id,
         cca.email e_mail,
         cca.rg rg,
         cca.sexo sexo,
         cna.codigo cna,
         cna.descricao cna_descricao,
         nvl(modo.ch_ensino_presencial, 0) ch_ensino_presencial,
         nvl(modo.ch_ensino_distancia, 0) ch_ensino_distancia,
         pcmo.valor_curso_modulo valor_curso,
         pcmo.enviado_dr enviado_dr,
         pcmo.liberado_dr liberado_dr,
         tpma.descricao tipo_matricula,
         tpcl.descricao tipo_cliente,
         decode(pcmo.na_empresa,
                'c',
                'cat',
                'o',
                'outros',
                'e',
                'empresa',
                '') local,

         alun.cargo_funcao cargo_funcao,
         alun.orgao_setor orgao_setor,
         nac.descricao nac_descricao,
         pcmo.cect_codigo cect_codigo,
         alun.data_bi data_bi,
         alun.usuario_inclusao usuario_inclusao_matr,
         alun.data_inclusao data_inclusao_matr,
         ssal.apelido ssal_apelido,
         ssal.descricao ssal_descricao,
         ssi.apelido ssi_apelido,
         ssi.descricao ssi_descricao,
         cca.cpf_cic,
         cca.rua,
         cca.numero,
         cca.complemento complemento,
         cca.bairro,
         cca.mun_codigo,
         case
           when alun.data_matricula between ddt.data_ini and ddt.data_fim then
            'data_matricula'
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                ddt.data_ini and ddt.data_fim then
            'data_bi'
           else
            '-'
         end as regra_data,
         case --quando for ensino infantil ei código 20, mantem o inscrito (i)
           when curs.mepr_id = 20 and alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr') then
            'somente situações válidas'
           when curs.mepr_id <> 20 and
                alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr', 'i') then
            'somente situações válidas'
           else
            'situações não contabilizadas para realizado matrícula'
         end regra_sit_aluno,
         case
           when alun.data_matricula between ddt.data_ini and ddt.data_fim then
            1
           else
            0
         end qtd_data_matricula,
         case
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                ddt.data_ini and ddt.data_fim then
            1
           else
            0
         end qtd_data_bi,

         cca.ddd_cobr,
         cca.fone_cobr,

         cca.ddd_comercial,
         cca.fone_comercial,

         cca.ddd_autorizado,
         cca.telefone_autorizado,

         cca.ddd_celular,
         cca.telefone_celular,

         cca.telefone_celular2,

         cca.ddd_mae,
         cca.telefone_mae,

         cca.ddd_pai,
         cca.telefone_pai,

         cca.ddd_recado,
         cca.telefone_recado,

         cca.ddd_residencial,
         cca.telefone_residencial,

         cca.ddd_responsavel,
         cca.telefone_responsavel,

         cca.tel_empresa_mae,
         cca.tel_empresa_pai,
         to_char(ddt.data_fim),  -- voltar com zero depois
         0,

         /*case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.telefone_residencial is not null or
            cca.telefone_celular is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_1,

         case
           when ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
                (cca.rua is not null and cca.numero is not null and
                cca.bairro is not null and cca.mun_codigo is not null and
                (cca.telefone_residencial is not null or
                cca.telefone_celular is not null or
                cca.fone_cobr is not null or
                cca.fone_comercial is not null or
                cca.telefone_recado is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_2,*/

         case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.fone_cobr is not null or cca.fone_comercial is not null or
            cca.telefone_autorizado is not null or
            cca.telefone_celular is not null or
            cca.telefone_celular2 is not null or
            cca.telefone_mae is not null or cca.telefone_pai is not null or
            cca.telefone_recado is not null or
            cca.telefone_residencial is not null or
            cca.telefone_responsavel is not null or
            cca.tel_empresa_mae is not null or
            cca.tel_empresa_pai is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_3

  -- select count(cca.id || alun.id), count(distinct cca.id || alun.id)

  --
  -- select count(1)
    from (select distinct trunc(data, 'mm') data_ini,
                          last_day(trunc(data, 'mm')) data_fim
            from dda_bi.dim_data ddt
           where ddt.data between p_dt_ini and p_dt_fim) ddt
    join sis_alunos_matriculados alun -- 2.447.248
      on 1 = case
           when

            (alun.data_matricula between ddt.data_ini and ddt.data_fim) then
            1
           when TRUNC(NVL(ALUN.DATA_BI,
                    TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)))) BETWEEN
                DDT.DATA_INI AND DDT.DATA_FIM THEN
            1
           else
            0
         end
  --  and 1 = 0
    join sis_cadastro_candidatos_alunos cca -- 1.132.638
      on alun.cca_id = cca.id
     and alun.cca_unid_id = cca.unid_id
     and alun.cca_unid_gps_codigo = cca.unid_gps_codigo

    join sis_turmas turm --   141.777
      on alun.turm_id = turm.id
     and alun.turm_unid_id = turm.unid_id
     and alun.turm_unid_gps_codigo = turm.unid_gps_codigo
    join sis_programacao_cursos_modulos pcmo --   157.729
      on turm.pcmo_id = pcmo.id
     and turm.pcmo_unid_id = pcmo.unid_id
     and turm.pcmo_unid_gps_codigo = pcmo.unid_gps_codigo
    join sis_cursos_modulos curm --    25.948
      on pcmo.curm_id = curm.id
     and pcmo.curm_unid_id = curm.unid_id
     and pcmo.curm_unid_gps_codigo = curm.unid_gps_codigo
    join sis_cursos curs --    11.378
      on curm.curs_id = curs.id
     and curm.curs_unid_id = curs.unid_id
     and curs.mepr_gps_codigo = 2
     and curs.unid_gps_codigo = 2

    join sis_unidades unid --       162
      on nvl(pcmo.unid_executora, pcmo.unid_id) = unid.id
     and unid.gps_codigo = 2
    left join areas_jurisdicao are --       123
      on are.codigo = unid.are_codigo
     and are.gps_codigo = unid.are_gps_codigo
    join sis_modulos_ocupacionais modo --    20.813
      on curm.modo_id = modo.id
     and curm.modo_unid_id = modo.unid_id
     and curm.modo_unid_gps_codigo = modo.unid_gps_codigo
    left join ges_unid_estrategicas unes --         6
      on curs.unes_id = unes.id
     and curs.unes_gps_codigo = unes.unid_gps_codigo
     and 2 = unes.unid_gps_codigo
    left join ges_curs_sr curssr --       137
      on curs.id = curssr.curs_id
     and curs.unid_id = curssr.curs_unid_id
     and curs.unid_gps_codigo = curssr.curs_gps_codigo
    left join centros_resp cre --     7.444
      on curssr.cresp_id = cre.id
    left join municipios mun --     6.656
      on cca.mun_codigo = mun.codigo
    left join ges_tipos_matriculas tpma --         4
      on alun.ges_tpma_id = tpma.id
    left join ges_tipos_clientes tpcl --         3
      on alun.ges_tpcl_id = tpcl.id
    left join sis_turnos turn --        10
      on pcmo.turn_id = turn.id
    left join nacionalidades nac --        78
      on nac.codigo = cca.nac_codigo
    left join ges_situacao_saida_alunos ssal --        27
      on alun.ssal_id = ssal.id
    left join ges_situacao_saida_interna ssi --        25
      on ssal.ssi_apelido = ssi.apelido
    left join pessoas pes -- 2.882.326
      on alun.clse_pes_id1 = pes.id1
     and alun.clse_pes_id2 = pes.id2
     and alun.clse_pes_id3 = pes.id3
    left join cod_atv_nacional cna --     4.336
      on pes.cna_codigo = cna.codigo;
   -- where rownum <= 100

--);
 Type c_carga_ods_Type Is Table Of c_carga_ods%Rowtype Index By Pls_Integer;
    l_carga_ods c_carga_ods_Type;

v_dt_inicio date;
v_dt_fim    date;
--v_Limite number := 10000;
v_proximo number:=1;

begin

--execute immediate 'truncate table ods_base_historica_ges';
select trunc(sysdate,'YEAR') into v_dt_inicio from dual;
select add_months(trunc(sysdate,'YEAR'),v_proximo) into v_dt_fim from dual;


bi_util_pck.desabilita_indices_prc('ods_base_historica_ges');

 loop
 select add_months(trunc(sysdate,'YEAR'),v_proximo) into v_dt_fim from dual;
  Open c_carga_ods(v_dt_inicio, v_dt_fim); 
 
    Loop
      Fetch c_carga_ods Bulk Collect -- busca da sql engine com bulk e manda tudo junto apra a plsql engine
        Into l_carga_ods ;--Limit v_Limite;
      Forall i in 1 .. l_carga_ods.Count  -- cria collection e manda tudo da plsql engine para sql engine
        Insert Into ods_base_historica_ges Values l_carga_ods (i);
      --Exit When l_carga_ods.Count < v_Limite;
      Commit;
      --
    End loop;
   
    Close c_carga_ods;
    v_proximo := v_proximo + 1;
end loop;

bi_util_pck.rebuild_indices_prc('ods_base_historica_ges');

Exception
      When Others Then
        Pla_Gera_Log_Bi_Prc(p_Erro_Sql   => SQLERRM,
                            p_msg        => 'ODS_BASE_HISTORICA_GES_PRC',
                            p_tab        => 'ODS_BASE_HISTORICA_GES',
                            p_ctb_pre_id => 0,
                            p_tipo       => 'I');

end ods_base_historica_ges_prc;


select * from fat_educacao order by dalu_id

select add_months(trunc(sysdate,'MONTH'),-8)  from dual;
select trunc(sysdate,'YEAR')  from dual;
   
select   add_months(trunc(sysdate),-8) from dual
 
select add_months(trunc(sysdate,'MONTH')+10,-8) from dual
 
select trunc(sysdate,'MONTH')+14  from dual

select trunc(sysdate,'YEAR')  from dual;
select trunc(sysdate) from dual;

select add_months(trunc(sysdate,'YEAR'),1) from dual

select * from log_erros order by data desc





----------- ultima declare para colocar na package educacao ODS


declare
v_teste dda_bi.dim_data%rowtype;
v_dt_ini date;
v_dt_fim date;
begin
  for i in extract(month from (trunc(sysdate,'YEAR'))) .. extract(month from (trunc(add_months(sysdate,0)/*,'YEAR'*/)))--extract(month from sysdate)
    loop
  select min(ddt.data), max(ddt.data) into /*v_teste*/v_dt_ini, v_dt_fim from dda_bi.dim_data ddt
  where extract(month from data) = i 
  and   extract(year from data) = extract(year from sysdate);
/*select distinct trunc(data, 'mm'),
                          last_day(trunc(data, 'mm')) into v_teste
            from dda_bi.dim_data ddt
           where ddt.data between '01/01/2017' and '13/10/2017'*/
           dbms_output.put_line(v_dt_ini||' '||v_dt_fim||' '||' '||i);

insert into ODS_ODI_HIST_GES  (
select --null, --sysdate data_carga,
         v_dt_ini data_ini,
         v_dt_fim data_fim,
         cca.origem_escolar ,
         alun.data_matricula data_ingresso,
         alun.data_inclusao data_sistema,
         alun.baixa_renda baixa_renda,
         alun.cargo_funcao cargo_funcao,
         alun.clientela_sesi,
         alun.codigo_identificador,
         alun.data_bi,
         alun.data_inclusao,
         alun.data_inicio_situacao_aluno ,
         alun.data_matricula ,
         alun.gratuidade gratuidade,
         alun.id alun_id,
         alun.isento isento,
         alun.motivo_cancelamento,
         alun.orgao_setor orgao_setor,
         alun.situacao_saida_aluno,
         alun.unid_gps_codigo alun_unid_gps_codigo,
         alun.unid_id alun_unid_id,
         alun.usuario_inclusao usuario_inclusao_matr,
         are.nome jurisdicao,
         alun.data_inclusao data_inclusao_matr,
        cca.tel_empresa_mae,
        cca.tel_empresa_pai,
        cca.telefone_autorizado,
        cca.telefone_celular,
        cca.telefone_celular2,
        cca.telefone_mae,
        cca.telefone_pai,
        cca.telefone_recado,
        cca.telefone_residencial,
        cca.telefone_responsavel,
         cca.bairro,
         cca.cep cep,
         cca.certidao_nascimento certidao_nascimento,
         cca.complemento complemento,
         cca.cpf_cic cpf,
         cca.data_nascimento,
         cca.data_nascimento_responsavel data_nascimento_responsavel,
         cca.ddd_autorizado,
         cca.ddd_celular,
         cca.ddd_cobr,
         cca.ddd_comercial,
         cca.ddd_mae,
         cca.ddd_pai,
         cca.ddd_recado,
         cca.ddd_residencial,
         cca.ddd_responsavel,
         cca.email e_mail,
         cca.fone_cobr,
         cca.fone_comercial,
         cca.id cca_id,
         cca.mun_codigo,
         cca.nit nit,
         cca.nome nome,
         cca.nome_mae,
         cca.numero,
         cca.rg rg,
         cca.rua,
         cca.sexo sexo,
         cca.uf_sigla uf,
         cca.unid_gps_codigo cca_unid_gps_codigo,
         cca.unid_id cca_unid_id,
         cca.cpf_responsavel,
         cca.empresa_pai,
         cca.empresa_mae,
         cca.tipo_responsavel,
         cca.cpf_pai,
         cca.cpf_mae,
         cca.resp_candidato_aluno,
         cca.nome_pai,
         cna.codigo cna,
         cna.descricao cna_descricao,
         cre.codigo cr,
         cre.descricao cr_descricao,
         curm.id curm_id,
         curm.unid_gps_codigo curm_unid_gps_codigo,
         curm.unid_id curm_unid_id,
         curs.id curs_id,
         curs.id produto_codigo,
         curs.mepr_id,
         curs.titulo produto_titulo,
         curs.unid_gps_codigo curs_unid_gps_codigo,
         curs.unid_id curs_unid_id,
         curssr.id curssr_id,
         --ddt.data_ini,
         modo.ch_ensino_distancia,
         modo.ch_ensino_presencial,
         modo.id curso_codigo,
         modo.id modo_id,
         modo.titulo curso_titulo,
         modo.unid_gps_codigo modo_unid_gps_codigo,
         modo.unid_id modo_unid_id,
         mun.nome municipio,
         nac.descricao nac_descricao,
         pcmo.cect_codigo cect_codigo,
         pcmo.data_fim_realizacao prog_dt_fim,
         pcmo.data_inicio_realizacao prog_dt_inicio,
         pcmo.enviado_dr enviado_dr,
         pcmo.id pcmo_id,
         pcmo.liberado_dr liberado_dr,
         pcmo.na_empresa,
         pcmo.unid_gps_codigo pcmo_unid_gps_codigo,
         pcmo.unid_id pcmo_unid_id,
         pcmo.valor_curso_modulo valor_curso,
         pes.id1,
         pes.id2,
         pes.id3, 
         pes.nome empresa_nome,
         ssal.apelido ssal_apelido,
         ssal.descricao ssal_descricao,
         ssi.apelido ssi_apelido,
         ssi.descricao ssi_descricao,
         --ddt.data_fim,  -- voltar com zero depois
         tpcl.descricao tipo_cliente,
         tpma.descricao tipo_matricula,
         turm.id turm_id,
         turm.sigla sigla_turma,
         turm.unid_gps_codigo turm_unid_gps_codigo,
         turm.unid_id turm_unid_id,
         turn.primeiro_turno,
         turn.segundo_turno,
         turn.terceiro_turno,
         turn.turno_alternativo,
         unes.descricao uer_titulo,
         unes.id uer_codigo,
         unes.id unes_id,
         unes.unid_gps_codigo unes_unid_gps_codigo,
         unid.gps_codigo unid_unid_gps_codigo,
         unid.id unid_id,
         unid.numero_unidade cat,
         unid.razao_social cat_nome
    from /*(select distinct trunc(data, 'mm') data_ini,
                          last_day(trunc(data, 'mm')) data_fim
            from dda_bi.dim_data ddt
           where ddt.data between '01/01/2017' and '13/10/2017') ddt*/
    /*join*/ sis_alunos_matriculados alun -- 2.447.248
      /*on*//*where 1 = case
           when

            (alun.data_matricula between '01/01/2017' \*ddt.data_ini*\ and '13/10/2017'\*ddt.data_fim*\) then
            1
           when TRUNC(NVL(ALUN.DATA_BI,
                    TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)))) BETWEEN
                '01/01/2017'\*DDT.DATA_INI*\ AND '13/10/2017'\*DDT.DATA_FIM*\ THEN
            1
           else
            0
         end*/
  --  and 1 = 0
    join sis_cadastro_candidatos_alunos cca -- 1.132.638
      on alun.cca_id = cca.id
     and alun.cca_unid_id = cca.unid_id
     and alun.cca_unid_gps_codigo = cca.unid_gps_codigo
     and 1 = case
           when

            (alun.data_matricula between v_dt_ini /*ddt.data_ini*/ and v_dt_fim/*ddt.data_fim*/) then
            1
           when TRUNC(NVL(ALUN.DATA_BI,
                    TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)))) BETWEEN
                v_dt_ini/*DDT.DATA_INI*/ AND v_dt_fim/*DDT.DATA_FIM*/ THEN
            1
           else
            0
         end

    join sis_turmas turm --   141.777
      on alun.turm_id = turm.id
     and alun.turm_unid_id = turm.unid_id
     and alun.turm_unid_gps_codigo = turm.unid_gps_codigo
    join sis_programacao_cursos_modulos pcmo --   157.729
      on turm.pcmo_id = pcmo.id
     and turm.pcmo_unid_id = pcmo.unid_id
     and turm.pcmo_unid_gps_codigo = pcmo.unid_gps_codigo
    join sis_cursos_modulos curm --    25.948
      on pcmo.curm_id = curm.id
     and pcmo.curm_unid_id = curm.unid_id
     and pcmo.curm_unid_gps_codigo = curm.unid_gps_codigo
    join sis_cursos curs --    11.378
      on curm.curs_id = curs.id
     and curm.curs_unid_id = curs.unid_id
     and curs.mepr_gps_codigo = 2
     and curs.unid_gps_codigo = 2

    join sis_unidades unid --       162
      on nvl(pcmo.unid_executora, pcmo.unid_id) = unid.id
     and unid.gps_codigo = 2
    left join areas_jurisdicao are --       123
      on are.codigo = unid.are_codigo
     and are.gps_codigo = unid.are_gps_codigo
    join sis_modulos_ocupacionais modo --    20.813
      on curm.modo_id = modo.id
     and curm.modo_unid_id = modo.unid_id
     and curm.modo_unid_gps_codigo = modo.unid_gps_codigo
    left join ges_unid_estrategicas unes --         6
      on curs.unes_id = unes.id
     and curs.unes_gps_codigo = unes.unid_gps_codigo
     and 2 = unes.unid_gps_codigo
    left join ges_curs_sr curssr --       137
      on curs.id = curssr.curs_id
     and curs.unid_id = curssr.curs_unid_id
     and curs.unid_gps_codigo = curssr.curs_gps_codigo
    left join centros_resp cre --     7.444
      on curssr.cresp_id = cre.id
    left join municipios mun --     6.656
      on cca.mun_codigo = mun.codigo
    left join ges_tipos_matriculas tpma --         4
      on alun.ges_tpma_id = tpma.id
    left join ges_tipos_clientes tpcl --         3
      on alun.ges_tpcl_id = tpcl.id
    left join sis_turnos turn --        10
      on pcmo.turn_id = turn.id
    left join nacionalidades nac --        78
      on nac.codigo = cca.nac_codigo
    left join ges_situacao_saida_alunos ssal --        27
      on alun.ssal_id = ssal.id
    left join ges_situacao_saida_interna ssi --        25
      on ssal.ssi_apelido = ssi.apelido
    left join pessoas pes -- 2.882.326
      on alun.clse_pes_id1 = pes.id1
     and alun.clse_pes_id2 = pes.id2
     and alun.clse_pes_id3 = pes.id3
    left join cod_atv_nacional cna --     4.336
      on pes.cna_codigo = cna.codigo
      );
      commit;
        end loop;
        
        
      insert into ods_base_historica_ges (  
       select   sysdate data_carga,
         data_ini,

         case
           when mepr_id = 14 then
            'eja'
           when mepr_id = 20 then
            'ei criancas e adolescentes'
           when mepr_id = 18 then
            'ecl'
           when mepr_id = 12 then
            'educacao'
           else
            to_char(mepr_id)
         end tipo,
         mepr_id,
         uer_codigo,
         uer_titulo,
         cat,
         cat_nome,
         jurisdicao,
         produto_codigo,
         produto_titulo,
         curso_codigo,
         curso_titulo,
         data_sistema,
         data_ingresso,
         codigo_identificador,
         nome,
         cpf,
         nit,
         nome_mae,
         data_nascimento,
         origem_escolar,
         case
           when origem_escolar = 'm' then
            'municipal'
           when origem_escolar = 'e' then
            'estadual'
           when origem_escolar = 'f' then
            'federal'
           when origem_escolar = 'p' then
            'particular'
           when (origem_escolar is null or origem_escolar = ' ') then
            origem_escolar
           else
            origem_escolar
         end desc_origem_escolar,
         trunc(months_between(sysdate, data_nascimento) / 12) idade,
         certidao_nascimento,
         decode(tipo_responsavel, 'm', 'mae', 'p', 'pai', 'outro') tipo_responsavel,
         decode(tipo_responsavel,
                'm',
                nome_mae,
                'p',
                nome_pai,
                resp_candidato_aluno) nome_responsavel,
         decode(tipo_responsavel,
                'm',
                cpf_mae,
                'p',
                cpf_pai,
                cpf_responsavel) cpf_responsavel,
         decode(tipo_responsavel,
                'm',
                empresa_mae,
                'p',
                empresa_pai,
                ' ') empresa_responsavel,
         data_nascimento_responsavel data_nascimento_responsavel,
         decode(id1,
                '',
                '',
                id1 || '-' || lpad(id2, 4, '0') || '/' ||
                lpad(id3, 2, '0')) empresa_cnpj,
         empresa_nome,
         uf,
         cep,
         municipio,
         sigla_turma,
         decode(situacao_saida_aluno,
                'atv',
                'ativo',
                'af',
                'afastado',
                'apt',
                'apto',
                'apr',
                'aprovado',
                'c',
                'concluinte',
                'can',
                'cancelado',
                'con',
                'concluinte',
                'ed',
                'em desenvolvimento',
                'exc',
                'excluído',
                'enc',
                'encerrado',
                'ev',
                'evadido',
                'nap',
                'não apto',
                'rep',
                'reprovado',
                'rem',
                'remanejamento',
                'tr',
                'transferido para',
                'tc',
                'trancamento',
                situacao_saida_aluno) situacao_saida,
         data_inicio_situacao_aluno data_inicio_situacao_aluno,
         replace(replace(motivo_cancelamento, chr(10), ''), chr(9), '') motivo_cancelamento,
         decode(clientela_sesi,
                'c',
                'comunidade',
                'd',
                'dependente sesi',
                'e',
                'ebep',
                'f',
                'sistema fiergs',
                's',
                'cliente sesi',
                clientela_sesi) clientela_sesi,
         isento,
         gratuidade,
         baixa_renda,
         cr,
         cr_descricao,
         replace(replace(replace(replace(replace(primeiro_turno || ' ' ||
                                                 segundo_turno || ' ' ||
                                                 terceiro_turno || ' ' ||
                                                 turno_alternativo,
                                                 '1',
                                                 'manhã'),
                                         '2',
                                         'tarde'),
                                 '3',
                                 'noite'),
                         '4',
                         'normal'),
                 '5',
                 'vespertino') prog_turno,
         prog_dt_inicio,
         prog_dt_fim,
         alun_unid_id,
         alun_unid_gps_codigo,
         cca_id,
         alun_id,
         cca_unid_id,
         cca_unid_gps_codigo,
         turm_id,
         turm_unid_id,
         turm_unid_gps_codigo,
         pcmo_id,
         pcmo_unid_id,
         pcmo_unid_gps_codigo,
         curm_id,
         curm_unid_id,
         curm_unid_gps_codigo,
         curs_id,
         curs_unid_id,
         curs_unid_gps_codigo,
         unid_id,
         unid_unid_gps_codigo,
         modo_id,
         modo_unid_id,
         modo_unid_gps_codigo,
         unes_id,
         unes_unid_gps_codigo,
         curssr_id,
         e_mail,
         rg,
         sexo,
         cna,
         cna_descricao,
         nvl(ch_ensino_presencial, 0) ch_ensino_presencial,
         nvl(ch_ensino_distancia, 0) ch_ensino_distancia,
         valor_curso,
         enviado_dr,
         liberado_dr,
         tipo_matricula,
         tipo_cliente,
         decode(na_empresa,
                'c',
                'cat',
                'o',
                'outros',
                'e',
                'empresa',
                '') local,

         cargo_funcao,
         orgao_setor,
         nac_descricao,
         cect_codigo,
         data_bi,
         usuario_inclusao_matr,
         data_inclusao_matr,
         ssal_apelido,
         ssal_descricao,
         ssi_apelido,
         ssi_descricao,
         cpf cpf_cic,
         rua,
         numero,
         complemento,
         bairro,
         mun_codigo,
         case
           when data_matricula between data_ini and data_fim then
            'data_matricula'
           when nvl(data_bi,
                    trunc(greatest(data_inclusao, data_matricula))) between
                data_ini and data_fim then
            'data_bi'
           else
            '-'
         end as regra_data,
         case --quando for ensino infantil ei código 20, mantem o inscrito (i)
           when mepr_id = 20 and situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr') then
            'somente situações válidas'
           when mepr_id <> 20 and
                situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr', 'i') then
            'somente situações válidas'
           else
            'situações não contabilizadas para realizado matrícula'
         end regra_sit_aluno,
         case
           when data_matricula between data_ini and data_fim then
            1
           else
            0
         end qtd_data_matricula,
         case
           when nvl(data_bi,
                    trunc(greatest(data_inclusao, data_matricula))) between
                data_ini and data_fim then
            1
           else
            0
         end qtd_data_bi,

         ddd_cobr,
         fone_cobr,

         ddd_comercial,
         fone_comercial,

         ddd_autorizado,
         telefone_autorizado,

         ddd_celular,
         telefone_celular,

         telefone_celular2,

         ddd_mae,
         telefone_mae,

         ddd_pai,
         telefone_pai,

         ddd_recado,
         telefone_recado,

         ddd_residencial,
         telefone_residencial,

         ddd_responsavel,
         telefone_responsavel,

         tel_empresa_mae,
         tel_empresa_pai,
         0,  -- voltar com zero depois
         0,

         /*case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.telefone_residencial is not null or
            cca.telefone_celular is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_1,

         case
           when ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
                (cca.rua is not null and cca.numero is not null and
                cca.bairro is not null and cca.mun_codigo is not null and
                (cca.telefone_residencial is not null or
                cca.telefone_celular is not null or
                cca.fone_cobr is not null or
                cca.fone_comercial is not null or
                cca.telefone_recado is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_2,*/

         case
           when

            ((cpf is not null or cpf_responsavel is not null) and
            (rua is not null and numero is not null and
            bairro is not null and mun_codigo is not null and
            (fone_cobr is not null or fone_comercial is not null or
            telefone_autorizado is not null or
            telefone_celular is not null or
            telefone_celular2 is not null or
            telefone_mae is not null or telefone_pai is not null or
            telefone_recado is not null or
            telefone_residencial is not null or
            telefone_responsavel is not null or
            tel_empresa_mae is not null or
            tel_empresa_pai is not null
            ))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_3

  -- select count(cca.id || alun.id), count(distinct cca.id || alun.id)

  --
  -- select count(1)*/
    from ODS_ODI_HIST_GES);
    commit;
 end;
 
 -- 
 
 -- foi visto que os planos de hml e prd estavam bem diferentes, existem indices e outros objetos de bancos
 -- que estao em um e nao estao em outro.
 -- identificadas as tabelas onde geravam mais cartesiano ou 
 -- dificil saber que tinha sido a dim_tempo por ser pequena, mas foi a retirada dela do join que ajudou 
 -- na parte do select, o restante foi retirar as trasnformacoes do select
 --- Retiradas todas as transformacoes (decodes, cases, to_...) do select
 --- pego somente o select puro e os joins e levado para uma tabela temporaria
 -- retirada a tabela dim_tempo do subselect que recebia os parametros de data (between) e colocado
 -- fora do join. Criado um select anterior e populada as datas em um loop que sao passadas para a query
 -- dinamicamente (bind) dentro do loop.
 -- Apos é feito um insert com com todas as transformações na tabela final
 -- Qq transformacao no select gera temp de todo o codigo, no caso, estava sendo feito join com tabelas
 -- de 3 owners distintos e com muitas transformações, o que estourava a temporaria.
 -- sysdate no select também gera e temporario de todo o codigo.
 
 
 
 select * from all_tables where  owner = 'RMCARGAS' and num_rows = 0 and table_name like 'S%'
 
-- query completa SIS-GES 
 
 select 'cursos',siscur.*, 'curso_modulo',siscmod.*, 'mod_ocup',smodocup.*,'pcmo', sprocm.*, 'turmas', stur.*, 
       'curmoddsic',scmodisc.*, 'discip',sdisc.*
from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

--> pcmo -> turmas
inner join  sis_turmas stur

on stur.PCMO_ID = sprocm.ID 
and stur.PCMO_UNID_ID = sprocm.UNID_ID 
and stur.PCMO_UNID_GPS_CODIGO = sprocm.UNID_GPS_CODIGO 

inner join sis_cursos_modulos_disciplinas scmodisc

--> curso_modulo -> curso_modulo_disciplina

on scmodisc.CURM_ID = siscmod.ID
and scmodisc.CURM_UNID_ID = siscmod.UNID_ID 
and scmodisc.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO 

--> disciplinas -> curso_modulo_disciplina

inner join  sis_disciplinas sdisc
on scmodisc.DISC_ID = sdisc.ID 
and scmodisc.DISC_UNID_ID = sdisc.UNID_ID
and scmodisc.DISC_UNID_GPS_CODIGO = sdisc.UNID_GPS_CODIGO 



-------------------- validacao educ_audit online obiee ------------------------------------

-- aparentemente dados ok de acordo com regras
-- duplicacao de linhas pela dim_data será feita dentro do obiee

----- query de validacao da view

--- da view - 
--select count(*) from (
--select distinct regra_data3 from(
select --*
         DATA_BI
--       ,DATA_CARGA
       ,DATA_INCLUSAO_MATR
       ,DATA_INGRESSO
--       ,DATA_INICIO_SITUACAO_ALUNO
--       ,DATA_NASCIMENTO
--       ,DATA_NASCIMENTO_RESPONSAVEL
--       ,DATA_SISTEMA
       ,regra_data
       ,regra_data2 
--       ,regra_data3 
       , qtd_data_bi
       ,qtd_data_matricula
       ,cpf
from (
select sysdate data_carga,
        -- ddt.data_ini,

         case
           when curs.mepr_id = 14 then
            'eja'
           when curs.mepr_id = 20 then
            'ei criancas e adolescentes'
           when curs.mepr_id = 18 then
            'ecl'
           when curs.mepr_id = 12 then
            'educacao'
           else
            to_char(curs.mepr_id)
         end tipo,
         curs.mepr_id,
         unes.id uer_codigo,
         unes.descricao uer_titulo,
         unid.numero_unidade cat,
         unid.razao_social cat_nome,
         are.nome jurisdicao,
         curs.id produto_codigo,
         curs.titulo produto_titulo,
         modo.id curso_codigo,
         modo.titulo curso_titulo,
         alun.data_inclusao data_sistema,
         alun.data_matricula data_ingresso,
         (SELECT ID FROM DIM_DATA DD WHERE TRUNC(DD.DATA)=TRUNC(data_matricula)) DT_ID,
         TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)) MAIOR_DT_INC_MAT,
         alun.codigo_identificador,
         cca.nome nome,
         cca.cpf_cic cpf,
         cca.nit nit,
         cca.nome_mae nome_mae,
         cca.data_nascimento data_nascimento,
         cca.origem_escolar,
         case
           when cca.origem_escolar = 'm' then
            'municipal'
           when cca.origem_escolar = 'e' then
            'estadual'
           when cca.origem_escolar = 'f' then
            'federal'
           when cca.origem_escolar = 'p' then
            'particular'
           when (cca.origem_escolar is null or cca.origem_escolar = ' ') then
            cca.origem_escolar
           else
            cca.origem_escolar
         end desc_origem_escolar,
         trunc(months_between(sysdate, cca.data_nascimento) / 12) idade,
         cca.certidao_nascimento certidao_nascimento,
         decode(cca.tipo_responsavel, 'm', 'mae', 'p', 'pai', 'outro') tipo_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.nome_mae,
                'p',
                cca.nome_pai,
                cca.resp_candidato_aluno) nome_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.cpf_mae,
                'p',
                cca.cpf_pai,
                cca.cpf_responsavel) cpf_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.empresa_mae,
                'p',
                cca.empresa_pai,
                ' ') empresa_responsavel,
         cca.data_nascimento_responsavel data_nascimento_responsavel,
         decode(pes.id1,
                '',
                '',
                pes.id1 || '-' || lpad(pes.id2, 4, '0') || '/' ||
                lpad(pes.id3, 2, '0')) empresa_cnpj,
         pes.nome empresa_nome,
         cca.uf_sigla uf,
         cca.cep cep,
         mun.nome municipio,
         turm.sigla sigla_turma,
         decode(alun.situacao_saida_aluno,
                'atv',
                'ativo',
                'af',
                'afastado',
                'apt',
                'apto',
                'apr',
                'aprovado',
                'c',
                'concluinte',
                'can',
                'cancelado',
                'con',
                'concluinte',
                'ed',
                'em desenvolvimento',
                'exc',
                'excluído',
                'enc',
                'encerrado',
                'ev',
                'evadido',
                'nap',
                'não apto',
                'rep',
                'reprovado',
                'rem',
                'remanejamento',
                'tr',
                'transferido para',
                'tc',
                'trancamento',
                alun.situacao_saida_aluno) situacao_saida,
         alun.data_inicio_situacao_aluno data_inicio_situacao_aluno,
         replace(replace(alun.motivo_cancelamento, chr(10), ''), chr(9), '') motivo_cancelamento,
         decode(alun.clientela_sesi,
                'c',
                'comunidade',
                'd',
                'dependente sesi',
                'e',
                'ebep',
                'f',
                'sistema fiergs',
                's',
                'cliente sesi',
                alun.clientela_sesi) clientela_sesi,
         alun.isento isento,
         alun.gratuidade gratuidade,
         alun.baixa_renda baixa_renda,
         cre.codigo cr,
         cre.descricao cr_descricao,
         replace(replace(replace(replace(replace(turn.primeiro_turno || ' ' ||
                                                 turn.segundo_turno || ' ' ||
                                                 turn.terceiro_turno || ' ' ||
                                                 turn.turno_alternativo,
                                                 '1',
                                                 'manhã'),
                                         '2',
                                         'tarde'),
                                 '3',
                                 'noite'),
                         '4',
                         'normal'),
                 '5',
                 'vespertino') prog_turno,
         pcmo.data_inicio_realizacao prog_dt_inicio,
         pcmo.data_fim_realizacao prog_dt_fim,
         alun.unid_id alun_unid_id,
         alun.unid_gps_codigo alun_unid_gps_codigo,
         cca.id cca_id,
         alun.id alun_id,
         cca.unid_id cca_unid_id,
         cca.unid_gps_codigo cca_unid_gps_codigo,
         turm.id turm_id,
         turm.unid_id turm_unid_id,
         turm.unid_gps_codigo turm_unid_gps_codigo,
         pcmo.id pcmo_id,
         pcmo.unid_id pcmo_unid_id,
         pcmo.unid_gps_codigo pcmo_unid_gps_codigo,
         curm.id curm_id,
         curm.unid_id curm_unid_id,
         curm.unid_gps_codigo curm_unid_gps_codigo,
         curs.id curs_id,
         curs.unid_id curs_unid_id,
         curs.unid_gps_codigo curs_unid_gps_codigo,
         unid.id unid_id,
         unid.gps_codigo unid_unid_gps_codigo,
         modo.id modo_id,
         modo.unid_id modo_unid_id,
         modo.unid_gps_codigo modo_unid_gps_codigo,
         unes.id unes_id,
         unes.unid_gps_codigo unes_unid_gps_codigo,
         curssr.id curssr_id,
         cca.email e_mail,
         cca.rg rg,
         cca.sexo sexo,
         cna.codigo cna,
         cna.descricao cna_descricao,
         nvl(modo.ch_ensino_presencial, 0) ch_ensino_presencial,
         nvl(modo.ch_ensino_distancia, 0) ch_ensino_distancia,
         pcmo.valor_curso_modulo valor_curso,
         pcmo.enviado_dr enviado_dr,
         pcmo.liberado_dr liberado_dr,
         tpma.descricao tipo_matricula,
         tpcl.descricao tipo_cliente,
         decode(pcmo.na_empresa,
                'c',
                'cat',
                'o',
                'outros',
                'e',
                'empresa',
                '') local,

         alun.cargo_funcao cargo_funcao,
         alun.orgao_setor orgao_setor,
         nac.descricao nac_descricao,
         pcmo.cect_codigo cect_codigo,
         alun.data_bi data_bi,
         alun.usuario_inclusao usuario_inclusao_matr,
         alun.data_inclusao data_inclusao_matr,
         ssal.apelido ssal_apelido,
         ssal.descricao ssal_descricao,
         ssi.apelido ssi_apelido,
         ssi.descricao ssi_descricao,
         cca.cpf_cic,
         cca.rua,
         cca.numero,
         cca.complemento complemento,
         cca.bairro,
         cca.mun_codigo,
--1
----------------------- Implementar no OBIEE  -----------------------------------------
/*         case
           when alun.data_matricula between '01/01/2017' and '31/10/2017' then
            'data_matricula'
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                '01/01/2017' and '31/10/2017' then
            'data_bi'
           else
            '-'
         end as regra_data,


         case
             when alun.data_matricula between '01/01/2017' and '31/10/2017'
             and nvl(alun.data_bi, trunc(greatest(alun.data_inclusao, alun.data_matricula))) 
             not between '01/01/2017' and '31/10/2017' then 'data_matricula'
         when nvl(alun.data_bi, trunc(greatest(alun.data_inclusao, alun.data_matricula))) 
             between '01/01/2017' and '31/10/2017' then 'data_bi'
         else '-'
         end as regra_data2,*/
----------------------------------------------------------------------------------------




         case --quando for ensino infantil ei código 20, mantem o inscrito (i)
           when curs.mepr_id = 20 and alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr') then
            'somente situações válidas'
           when curs.mepr_id <> 20 and
                alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr', 'i') then
            'somente situações válidas'
           else
            'situações não contabilizadas para realizado matrícula'
         end regra_sit_aluno,
--2





------------------- Implementar no OBIEE  ---------------------------------------
/*         case
           when alun.data_matricula between '01/01/2017' and '31/10/2017' then
            1
           else
            0
         end qtd_data_matricula,
         case
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
               '01/01/2017' and '31/10/2017' then
            1
           else
            0
         end qtd_data_bi,*/
----------------------------------------------------------------------------------



         cca.ddd_cobr,
         cca.fone_cobr,

         cca.ddd_comercial,
         cca.fone_comercial,

         cca.ddd_autorizado,
         cca.telefone_autorizado,

         cca.ddd_celular,
         cca.telefone_celular,

         cca.telefone_celular2,

         cca.ddd_mae,
         cca.telefone_mae,

         cca.ddd_pai,
         cca.telefone_pai,

         cca.ddd_recado,
         cca.telefone_recado,

         cca.ddd_residencial,
         cca.telefone_residencial,

         cca.ddd_responsavel,
         cca.telefone_responsavel,

         cca.tel_empresa_mae,
         cca.tel_empresa_pai,
         --0,  -- voltar com zero depois
         --0,

         /*case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.telefone_residencial is not null or
            cca.telefone_celular is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_1,

         case
           when ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
                (cca.rua is not null and cca.numero is not null and
                cca.bairro is not null and cca.mun_codigo is not null and
                (cca.telefone_residencial is not null or
                cca.telefone_celular is not null or
                cca.fone_cobr is not null or
                cca.fone_comercial is not null or
                cca.telefone_recado is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_2,*/

         case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.fone_cobr is not null or cca.fone_comercial is not null or
            cca.telefone_autorizado is not null or
            cca.telefone_celular is not null or
            cca.telefone_celular2 is not null or
            cca.telefone_mae is not null or cca.telefone_pai is not null or
            cca.telefone_recado is not null or
            cca.telefone_residencial is not null or
            cca.telefone_responsavel is not null or
            cca.tel_empresa_mae is not null or
            cca.tel_empresa_pai is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_3

  -- select count(cca.id || alun.id), count(distinct cca.id || alun.id)

  --
  -- select count(1)
    from
/*    (select distinct trunc(data, 'mm') data_ini,
                          last_day(trunc(data, 'mm')) data_fim
            from dda_bi.dim_data ddt
           where ddt.data between :p_dt_ini and :p_dt_fim) ddt,*/
     -- 2.447.248
    --  on
  --  and 1 = 0
  (  sis_alunos_matriculados alun join sis_cadastro_candidatos_alunos cca -- 1.132.638
      on alun.cca_id = cca.id
     and alun.cca_unid_id = cca.unid_id
     and alun.cca_unid_gps_codigo = cca.unid_gps_codigo



--------------- Implementar no OBIEE ---------------------------------------------------
/*     and  1 =

      case
           when

            (alun.data_matricula between '01/01/2017'\*ddt.data_ini*\ and '31/10/2017'\*ddt.data_fim*\) then
            1
           when TRUNC(NVL(ALUN.DATA_BI,
                    TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)))) BETWEEN
                '01/01/2017'\*DDT.DATA_INI*\ AND '31/10/2017'\*DDT.DATA_FIM*\ THEN
            1
           else
            0
         end*/
-----------------------------------------------------------------------------------------





    join sis_turmas turm --   141.777
      on alun.turm_id = turm.id
     and alun.turm_unid_id = turm.unid_id
     and alun.turm_unid_gps_codigo = turm.unid_gps_codigo
    join sis_programacao_cursos_modulos pcmo --   157.729
      on turm.pcmo_id = pcmo.id
     and turm.pcmo_unid_id = pcmo.unid_id
     and turm.pcmo_unid_gps_codigo = pcmo.unid_gps_codigo
    join sis_cursos_modulos curm --    25.948
      on pcmo.curm_id = curm.id
     and pcmo.curm_unid_id = curm.unid_id
     and pcmo.curm_unid_gps_codigo = curm.unid_gps_codigo
    join sis_cursos curs --    11.378
      on curm.curs_id = curs.id
     and curm.curs_unid_id = curs.unid_id
     and curs.mepr_gps_codigo = 2
     and curs.unid_gps_codigo = 2

    join sis_unidades unid --       162
      on nvl(pcmo.unid_executora, pcmo.unid_id) = unid.id
     and unid.gps_codigo = 2
    left join areas_jurisdicao are --       123
      on are.codigo = unid.are_codigo
     and are.gps_codigo = unid.are_gps_codigo
    join sis_modulos_ocupacionais modo --    20.813
      on curm.modo_id = modo.id
     and curm.modo_unid_id = modo.unid_id
     and curm.modo_unid_gps_codigo = modo.unid_gps_codigo
    left join ges_unid_estrategicas unes --         6
      on curs.unes_id = unes.id
     and curs.unes_gps_codigo = unes.unid_gps_codigo
     and 2 = unes.unid_gps_codigo
    left join ges_curs_sr curssr --       137
      on curs.id = curssr.curs_id
     and curs.unid_id = curssr.curs_unid_id
     and curs.unid_gps_codigo = curssr.curs_gps_codigo
    left join centros_resp cre --     7.444
      on curssr.cresp_id = cre.id
    left join municipios mun --     6.656
      on cca.mun_codigo = mun.codigo
    left join ges_tipos_matriculas tpma --         4
      on alun.ges_tpma_id = tpma.id
    left join ges_tipos_clientes tpcl --         3
      on alun.ges_tpcl_id = tpcl.id
    left join sis_turnos turn --        10
      on pcmo.turn_id = turn.id
    left join nacionalidades nac --        78
      on nac.codigo = cca.nac_codigo
    left join ges_situacao_saida_alunos ssal --        27
      on alun.ssal_id = ssal.id
    left join ges_situacao_saida_interna ssi --        25
      on ssal.ssi_apelido = ssi.apelido
    left join pessoas pes -- 2.882.326
      on alun.clse_pes_id1 = pes.id1
     and alun.clse_pes_id2 = pes.id2
     and alun.clse_pes_id3 = pes.id3
    left join cod_atv_nacional cna --     4.336
      on pes.cna_codigo = cna.codigo)
      )
--      where regra_data = '-'
where trunc(data_ingresso,'MON') <> trunc(data_bi,'MON')
--and cpf = 2362876055
 and cpf in (971050074,4625407079)
order by regra_data2 desc--data_sistema




----- query Gabriel


-- query gabriel
select --*
          DATA_BI
       ,DATA_CARGA
       ,DATA_INCLUSAO_MATR
       ,DATA_INGRESSO
--       ,DATA_INICIO_SITUACAO_ALUNO
--       ,DATA_NASCIMENTO
--       ,DATA_NASCIMENTO_RESPONSAVEL
       ,DATA_SISTEMA
       ,DATA_INI
       ,regra_data
      ,regra_data2 
      ,qtd_data_bi
      ,qtd_data_matricula
      ,cpf
       from ( 
 select sysdate data_carga,
         ddt.data_ini,

         case
           when curs.mepr_id = 14 then
            'eja'
           when curs.mepr_id = 20 then
            'ei criancas e adolescentes'
           when curs.mepr_id = 18 then
            'ecl'
           when curs.mepr_id = 12 then
            'educacao'
           else
            to_char(curs.mepr_id)
         end tipo,
         curs.mepr_id,
         unes.id uer_codigo,
         unes.descricao uer_titulo,
         unid.numero_unidade cat,
         unid.razao_social cat_nome,
         are.nome jurisdicao,
         curs.id produto_codigo,
         curs.titulo produto_titulo,
         modo.id curso_codigo,
         modo.titulo curso_titulo,
         alun.data_inclusao data_sistema,
         alun.data_matricula data_ingresso,
         alun.codigo_identificador,
         cca.nome nome,
         cca.cpf_cic cpf,
         cca.nit nit,
         cca.nome_mae nome_mae,
         cca.data_nascimento data_nascimento,
         cca.origem_escolar,
         case
           when cca.origem_escolar = 'm' then
            'municipal'
           when cca.origem_escolar = 'e' then
            'estadual'
           when cca.origem_escolar = 'f' then
            'federal'
           when cca.origem_escolar = 'p' then
            'particular'
           when (cca.origem_escolar is null or cca.origem_escolar = ' ') then
            cca.origem_escolar
           else
            cca.origem_escolar
         end desc_origem_escolar,
         trunc(months_between(sysdate, cca.data_nascimento) / 12) idade,
         cca.certidao_nascimento certidao_nascimento,
         decode(cca.tipo_responsavel, 'm', 'mae', 'p', 'pai', 'outro') tipo_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.nome_mae,
                'p',
                cca.nome_pai,
                cca.resp_candidato_aluno) nome_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.cpf_mae,
                'p',
                cca.cpf_pai,
                cca.cpf_responsavel) cpf_responsavel,
         decode(cca.tipo_responsavel,
                'm',
                cca.empresa_mae,
                'p',
                cca.empresa_pai,
                ' ') empresa_responsavel,
         cca.data_nascimento_responsavel data_nascimento_responsavel,
         decode(pes.id1,
                '',
                '',
                pes.id1 || '-' || lpad(pes.id2, 4, '0') || '/' ||
                lpad(pes.id3, 2, '0')) empresa_cnpj,
         pes.nome empresa_nome,
         cca.uf_sigla uf,
         cca.cep cep,
         mun.nome municipio,
         turm.sigla sigla_turma,
         decode(alun.situacao_saida_aluno,
                'atv',
                'ativo',
                'af',
                'afastado',
                'apt',
                'apto',
                'apr',
                'aprovado',
                'c',
                'concluinte',
                'can',
                'cancelado',
                'con',
                'concluinte',
                'ed',
                'em desenvolvimento',
                'exc',
                'excluído',
                'enc',
                'encerrado',
                'ev',
                'evadido',
                'nap',
                'não apto',
                'rep',
                'reprovado',
                'rem',
                'remanejamento',
                'tr',
                'transferido para',
                'tc',
                'trancamento',
                alun.situacao_saida_aluno) situacao_saida,
         alun.data_inicio_situacao_aluno data_inicio_situacao_aluno,
         replace(replace(alun.motivo_cancelamento, chr(10), ''), chr(9), '') motivo_cancelamento,
         decode(alun.clientela_sesi,
                'c',
                'comunidade',
                'd',
                'dependente sesi',
                'e',
                'ebep',
                'f',
                'sistema fiergs',
                's',
                'cliente sesi',
                alun.clientela_sesi) clientela_sesi,
         alun.isento isento,
         alun.gratuidade gratuidade,
         alun.baixa_renda baixa_renda,
         cre.codigo cr,
         cre.descricao cr_descricao,
         replace(replace(replace(replace(replace(turn.primeiro_turno || ' ' ||
                                                 turn.segundo_turno || ' ' ||
                                                 turn.terceiro_turno || ' ' ||
                                                 turn.turno_alternativo,
                                                 '1',
                                                 'manhã'),
                                         '2',
                                         'tarde'),
                                 '3',
                                 'noite'),
                         '4',
                         'normal'),
                 '5',
                 'vespertino') prog_turno,
         pcmo.data_inicio_realizacao prog_dt_inicio,
         pcmo.data_fim_realizacao prog_dt_fim,
         alun.unid_id alun_unid_id,
         alun.unid_gps_codigo alun_unid_gps_codigo,
         cca.id cca_id,
         alun.id alun_id,
         cca.unid_id cca_unid_id,
         cca.unid_gps_codigo cca_unid_gps_codigo,
         turm.id turm_id,
         turm.unid_id turm_unid_id,
         turm.unid_gps_codigo turm_unid_gps_codigo,
         pcmo.id pcmo_id,
         pcmo.unid_id pcmo_unid_id,
         pcmo.unid_gps_codigo pcmo_unid_gps_codigo,
         curm.id curm_id,
         curm.unid_id curm_unid_id,
         curm.unid_gps_codigo curm_unid_gps_codigo,
         curs.id curs_id,
         curs.unid_id curs_unid_id,
         curs.unid_gps_codigo curs_unid_gps_codigo,
         unid.id unid_id,
         unid.gps_codigo unid_unid_gps_codigo,
         modo.id modo_id,
         modo.unid_id modo_unid_id,
         modo.unid_gps_codigo modo_unid_gps_codigo,
         unes.id unes_id,
         unes.unid_gps_codigo unes_unid_gps_codigo,
         curssr.id curssr_id,
         cca.email e_mail,
         cca.rg rg,
         cca.sexo sexo,
         cna.codigo cna,
         cna.descricao cna_descricao,
         nvl(modo.ch_ensino_presencial, 0) ch_ensino_presencial,
         nvl(modo.ch_ensino_distancia, 0) ch_ensino_distancia,
         pcmo.valor_curso_modulo valor_curso,
         pcmo.enviado_dr enviado_dr,
         pcmo.liberado_dr liberado_dr,
         tpma.descricao tipo_matricula,
         tpcl.descricao tipo_cliente,
         decode(pcmo.na_empresa,
                'c',
                'cat',
                'o',
                'outros',
                'e',
                'empresa',
                '') local,

         alun.cargo_funcao cargo_funcao,
         alun.orgao_setor orgao_setor,
         nac.descricao nac_descricao,
         pcmo.cect_codigo cect_codigo,
         alun.data_bi data_bi,
         alun.usuario_inclusao usuario_inclusao_matr,
         alun.data_inclusao data_inclusao_matr,
         ssal.apelido ssal_apelido,
         ssal.descricao ssal_descricao,
         ssi.apelido ssi_apelido,
         ssi.descricao ssi_descricao,
         cca.cpf_cic,
         cca.rua,
         cca.numero,
         cca.complemento complemento,
         cca.bairro,
         cca.mun_codigo,
         case
           when alun.data_matricula between ddt.data_ini and ddt.data_fim then
            'data_matricula'
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                ddt.data_ini and ddt.data_fim then
            'data_bi'
           else
            '-'
         end as regra_data,
         
         ----------------incluido agora para testes, verificar se esta igual ao meu codigo
      case
             when alun.data_matricula between ddt.data_ini and ddt.data_fim
             and nvl(alun.data_bi, trunc(greatest(alun.data_inclusao, alun.data_matricula))) 
             not between ddt.data_ini and ddt.data_fim then 'data_matricula'
         when nvl(alun.data_bi, trunc(greatest(alun.data_inclusao, alun.data_matricula))) 
             between ddt.data_ini and ddt.data_fim then 'data_bi'
         else '-'
         end as regra_data2,
         
       -----------------------------------------------------------------------------------  
         case --quando for ensino infantil ei código 20, mantem o inscrito (i)
           when curs.mepr_id = 20 and alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr') then
            'somente situações válidas'
           when curs.mepr_id <> 20 and
                alun.situacao_saida_aluno not in
                ('des', 'exc', 'tri', 'rem', 'tr', 'i') then
            'somente situações válidas'
           else
            'situações não contabilizadas para realizado matrícula'
         end regra_sit_aluno,
         
         case
           when alun.data_matricula between ddt.data_ini and ddt.data_fim then
            1
           else
            0
         end qtd_data_matricula,
         
         case
           when nvl(alun.data_bi,
                    trunc(greatest(alun.data_inclusao, alun.data_matricula))) between
                ddt.data_ini and ddt.data_fim then
            1
           else
            0
         end qtd_data_bi,

         cca.ddd_cobr,
         cca.fone_cobr,

         cca.ddd_comercial,
         cca.fone_comercial,

         cca.ddd_autorizado,
         cca.telefone_autorizado,

         cca.ddd_celular,
         cca.telefone_celular,

         cca.telefone_celular2,

         cca.ddd_mae,
         cca.telefone_mae,

         cca.ddd_pai,
         cca.telefone_pai,

         cca.ddd_recado,
         cca.telefone_recado,

         cca.ddd_residencial,
         cca.telefone_residencial,

         cca.ddd_responsavel,
         cca.telefone_responsavel,

         cca.tel_empresa_mae,
         cca.tel_empresa_pai,
         to_char(ddt.data_fim),  -- voltar com zero depois
         0,

         /*case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.telefone_residencial is not null or
            cca.telefone_celular is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_1,

         case
           when ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
                (cca.rua is not null and cca.numero is not null and
                cca.bairro is not null and cca.mun_codigo is not null and
                (cca.telefone_residencial is not null or
                cca.telefone_celular is not null or
                cca.fone_cobr is not null or
                cca.fone_comercial is not null or
                cca.telefone_recado is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_2,*/

         case
           when

            ((cca.cpf_cic is not null or cca.cpf_responsavel is not null) and
            (cca.rua is not null and cca.numero is not null and
            cca.bairro is not null and cca.mun_codigo is not null and
            (cca.fone_cobr is not null or cca.fone_comercial is not null or
            cca.telefone_autorizado is not null or
            cca.telefone_celular is not null or
            cca.telefone_celular2 is not null or
            cca.telefone_mae is not null or cca.telefone_pai is not null or
            cca.telefone_recado is not null or
            cca.telefone_residencial is not null or
            cca.telefone_responsavel is not null or
            cca.tel_empresa_mae is not null or
            cca.tel_empresa_pai is not null))) then
            'rastreável'
           else
            'não rastreável'
         end regra_rastreavel_3

  -- select count(cca.id || alun.id), count(distinct cca.id || alun.id)

  --
  -- select count(1)
    from (select distinct trunc(data, 'mm') data_ini,
                          last_day(trunc(data,'mm') ) data_fim
            from dda_bi.dim_data ddt
           where ddt.data between '01/01/2017' and '01/10/2017') ddt
    join sis_alunos_matriculados alun -- 2.447.248
      on 1 = case
           when

            (alun.data_matricula between ddt.data_ini and ddt.data_fim) then
            1
           when TRUNC(NVL(ALUN.DATA_BI,
                    TRUNC(GREATEST(ALUN.DATA_INCLUSAO, ALUN.DATA_MATRICULA)))) BETWEEN
                DDT.DATA_INI AND DDT.DATA_FIM THEN
            1
           else
            0
         end
  --  and 1 = 0
    join sis_cadastro_candidatos_alunos cca -- 1.132.638
      on alun.cca_id = cca.id
     and alun.cca_unid_id = cca.unid_id
     and alun.cca_unid_gps_codigo = cca.unid_gps_codigo

    join sis_turmas turm --   141.777
      on alun.turm_id = turm.id
     and alun.turm_unid_id = turm.unid_id
     and alun.turm_unid_gps_codigo = turm.unid_gps_codigo
    join sis_programacao_cursos_modulos pcmo --   157.729
      on turm.pcmo_id = pcmo.id
     and turm.pcmo_unid_id = pcmo.unid_id
     and turm.pcmo_unid_gps_codigo = pcmo.unid_gps_codigo
    join sis_cursos_modulos curm --    25.948
      on pcmo.curm_id = curm.id
     and pcmo.curm_unid_id = curm.unid_id
     and pcmo.curm_unid_gps_codigo = curm.unid_gps_codigo
    join sis_cursos curs --    11.378
      on curm.curs_id = curs.id
     and curm.curs_unid_id = curs.unid_id
     and curs.mepr_gps_codigo = 2
     and curs.unid_gps_codigo = 2

    join sis_unidades unid --       162
      on nvl(pcmo.unid_executora, pcmo.unid_id) = unid.id
     and unid.gps_codigo = 2
    left join areas_jurisdicao are --       123
      on are.codigo = unid.are_codigo
     and are.gps_codigo = unid.are_gps_codigo
    join sis_modulos_ocupacionais modo --    20.813
      on curm.modo_id = modo.id
     and curm.modo_unid_id = modo.unid_id
     and curm.modo_unid_gps_codigo = modo.unid_gps_codigo
    left join ges_unid_estrategicas unes --         6
      on curs.unes_id = unes.id
     and curs.unes_gps_codigo = unes.unid_gps_codigo
     and 2 = unes.unid_gps_codigo
    left join ges_curs_sr curssr --       137
      on curs.id = curssr.curs_id
     and curs.unid_id = curssr.curs_unid_id
     and curs.unid_gps_codigo = curssr.curs_gps_codigo
    left join centros_resp cre --     7.444
      on curssr.cresp_id = cre.id
    left join municipios mun --     6.656
      on cca.mun_codigo = mun.codigo
    left join ges_tipos_matriculas tpma --         4
      on alun.ges_tpma_id = tpma.id
    left join ges_tipos_clientes tpcl --         3
      on alun.ges_tpcl_id = tpcl.id
    left join sis_turnos turn --        10
      on pcmo.turn_id = turn.id
    left join nacionalidades nac --        78
      on nac.codigo = cca.nac_codigo
    left join ges_situacao_saida_alunos ssal --        27
      on alun.ssal_id = ssal.id
    left join ges_situacao_saida_interna ssi --        25
      on ssal.ssi_apelido = ssi.apelido
    left join pessoas pes -- 2.882.326
      on alun.clse_pes_id1 = pes.id1
     and alun.clse_pes_id2 = pes.id2
     and alun.clse_pes_id3 = pes.id3
    left join cod_atv_nacional cna --     4.336
      on pes.cna_codigo = cna.codigo
      )
--      where regra_data = '-'
where trunc(data_ingresso,'MON') <> trunc(data_bi,'MON')
and   cpf in (971050074,4625407079)
order by regra_data2 desc


--===== ESTUDOS DE CASOS DEMISSAO =============
-- verficar o erro ENCONTRADO MUITOS REGISTROS PARA O BENFICIARIO : MARLON SOARES DA SILVA NA EMPRESA: 1 . ERRO : ORA-01422: a extração exata retorna mais do que o número solicitado de linhas

         
-- encontra as informações do Marlos Soares da Silva 
--cbeneficiarios aqui eu pego os beneficiarios, mas tb encontra os dependentes?
 Select id,
           emp_cod,
           chapa,
           pfis_numero,
           operacao,
           cli_pes_id1,
           cli_pes_id2,
           cli_pes_id3,
           tit_pes_id1,
           tit_pes_id2,
           tit_pes_id3,
           nome,
           tit_sexo,
           tit_est_civil,
           tit_dt_nascimento,
           tit_rg,
           tit_endereco,
           tit_bairro,
           tit_cep,
           tit_nacionalidade,
           tit_orgao_expedidor,
           dep_tit_pes_id1,
           dep_tit_pes_id2,
           dep_tit_pes_id3,
           dep_pes_id1,
           dep_pes_id2,
           dep_pes_id3,
           dep_sexo,
           dep_est_civil,
           dep_dt_nascimento,
           dep_rg,
           dep_endereco,
           dep_bairro,
           dep_cep,
           dep_nacionalidade,
           dep_orgao_expedidor,
           cod_beneficio,
           data_ini_beneficio,
           data_fim_beneficio,
           ocorrencia,
           status,
           data_rescisao,
           usuario_inclusao
      From uni_beneficiario_gerado
     Where ((/*p_operacao*/'E' = 'I'
          And data_ini_beneficio Between '01/10/2017'
          And '31/10/2017')
         Or (/*p_operacao*/'E' = 'E'
          And ((data_fim_beneficio Between '01/10/2017' And '31/10/2017')
            Or
           (data_rescisao Between '01/10/2017' And '31/10/2017'))))
       And operacao = 'E'
   --    And emp_cod Between p_emp_cod And p_emp_cod_final
       And status <> 'P'
       and chapa = 267988--(claiton)--2023090 (marlon)
       And tit_pes_id1 Is Not Null
     Order By cli_pes_id1,
              cli_pes_id2,
              cli_pes_id3,
              chapa;
              
 --caso marlon             aqui nao encontrou 2 registros
      Select *
    --    Into r_rlp_titular
        From relacoes_pessoas
       Where pes_id1 = 937210640--v_tr02_pes_id1                 tit_pes_id1
         And pes_id2 = 0--v_tr02_pes_id2                         0
         And pes_id3 = 20--v_tr02_pes_id3                        tit_pes_id3
         And pes_id1_vinculado = 92953967--v_tr01_pes_id1        cli_pes_id1
         And pes_id2_vinculado = 1--v_tr01_pes_id2               cli_pes_id2
         And pes_id3_vinculado = 6--v_tr01_pes_id3               cli_pes_id3
         And data_inc_rsaude Is Not Null
         And familia_rsaude Is Not Null; 
         
         
      
 
              
-- encontrado aqui como dependente  aqui eu pego os dependentes
-- encontrado o marlon mas nao o claiton
--cbeneficiarios_dep       
Select id,
           emp_cod,
           chapa,
           pfis_numero,
           operacao,
           cli_pes_id1,
           cli_pes_id2,
           cli_pes_id3,
           tit_pes_id1,
           tit_pes_id2,
           tit_pes_id3,
           nome,
           tit_sexo,
           tit_est_civil,
           tit_dt_nascimento,
           tit_rg,
           tit_endereco,
           tit_bairro,
           tit_cep,
           tit_nacionalidade,
           tit_orgao_expedidor,
           dep_tit_pes_id1,
           dep_tit_pes_id2,
           dep_tit_pes_id3,
           dep_pes_id1,
           dep_pes_id2,
           dep_pes_id3,
           dep_sexo,
           dep_est_civil,
           dep_dt_nascimento,
           dep_rg,
           dep_endereco,
           dep_bairro,
           dep_cep,
           dep_nacionalidade,
           dep_orgao_expedidor,
           cod_beneficio,
           data_ini_beneficio,
           data_fim_beneficio,
           ocorrencia,
           status,
           data_rescisao
      From uni_beneficiario_gerado
     Where ( (   /*p_operacao*/'E' = 'I' 
             And data_ini_beneficio Between '01/10/2017'
          And '31/10/2017' ) 
           Or (   /*p_operacao*/'E' = 'E' 
              And (  data_fim_beneficio Between '01/10/2017'
          And '31/10/2017'  
                  Or data_rescisao      Between '01/10/2017'
          And '31/10/2017' )))
       And operacao          = 'E'
       And status           <> 'P'
    --   And emp_cod     Between p_emp_cod And p_emp_cod_final
       And dep_tit_pes_id1  Is Not Null
       And chapa             = 267988--(claiton)--2023090 (marlon)/*vchapa*/
     Order By cli_pes_id1
            , cli_pes_id2
            , cli_pes_id3
            , chapa;
            

       --caso claiton     aqui encontrou 2 registros, um mais antigo        
      Select *
    --    Into r_rlp_titular
        From relacoes_pessoas
       Where pes_id1 = 23416300--v_tr02_pes_id1                 tit_pes_id1
         And pes_id2 = 0--v_tr02_pes_id2                         0
         And pes_id3 = 30--v_tr02_pes_id3                        tit_pes_id3
         And pes_id1_vinculado = 3775159--v_tr01_pes_id1        cli_pes_id1
         And pes_id2_vinculado = 1--v_tr01_pes_id2               cli_pes_id2
         And pes_id3_vinculado = 76--v_tr01_pes_id3               cli_pes_id3
         And data_inc_rsaude Is Not Null
         And familia_rsaude Is Not Null;    
             
           
 -- consulta com as alterações da relacao_pessoas
 
 
 select *
  from (
   select 
-- ID
  PES_ID1,
  PES_ID2,
  PES_ID3,
  PES_ID1_VINCULADO,
  PES_ID2_VINCULADO,
  PES_ID3_VINCULADO,
  DATA_ADMISSAO,
  DATA_DESLIGAMENTO,
  STATUS_RELACAO,
  TRL_CODIGO,
  MATRICULA,
  PFIS_NUMERO_RSAUDE,
  OBSERVACAO,
  r.RLP_ID            r_rlp_id,
  r.DATA_INCLUSAO     r_data_inclusao,
  r.USUARIO_INCLUSAO  r_usuario_inclusao,
  r.DATA_ALTERACAO    r_data_alteracao ,
  r.USUARIO_ALTERACAO as r_usuario_alteracao,
--  ID,
  rr.RLP_ID            rr_rlp_id,
  RTS_ID,
  DATA_INICIO,
  DATA_FIM,
  rr.DATA_INCLUSAO     rr_data_inclusao,
  rr.USUARIO_INCLUSAO  rr_usuario_inclusao,
  rr.DATA_ALTERACAO    rr_data_alteracao,
  rr.USUARIO_ALTERACAO as rr_usuario_alteracao,
--  ID                 ,
  RRR_ID,
  FAMILIA_RSAUDE,
  GRAU_DEP_RSAUDE,
  PLM_CODIGO,
  rsa.DATA_INCLUSAO       rsa_data_inclusao,
  rsa.USUARIO_INCLUSAO    rsa_usuario_inclusao,
  rsa.DATA_ALTERACAO      rsa_data_alteracao,
  rsa.USUARIO_ALTERACAO   as rsa_usuario_alteracao
  from rsa_rel_pessoas  r
     , rsa_rlp_rts     rr
     , rsa_relacao_rsaude rsa
where r.id = rr.rlp_id
  and rr.rts_id = 1
  and rr.id = rsa.rrr_id 
 -- and r.status_relacao = 'A'
  --and pfis_numero_rsaude = 2023090--267988 (claiton)
  and matricula = '267988'
order by matricula) teste

       Where pes_id1 = 23416300--v_tr02_pes_id1                 tit_pes_id1
         And pes_id2 = 0--v_tr02_pes_id2                         0
         And pes_id3 = 30--v_tr02_pes_id3                        tit_pes_id3
         And pes_id1_vinculado = 3775159--v_tr01_pes_id1        cli_pes_id1
         And pes_id2_vinculado = 1--v_tr01_pes_id2               cli_pes_id2
         And pes_id3_vinculado = 76--v_tr01_pes_id3               cli_pes_id3
    --     And data_inc_rsaude Is Not Null
         And familia_rsaude Is Not Null;  
         
         
--================ caso Enio Stalhoefer  -- verificando por que ficou com status ativo e não processou

--cbeneficiarios_dep    
--   traz as 3 linhas dos dependentes
Select id,
           emp_cod,
           chapa,
           pfis_numero,
           operacao,
           cli_pes_id1,
           cli_pes_id2,
           cli_pes_id3,
           tit_pes_id1,
           tit_pes_id2,
           tit_pes_id3,
           nome,
           tit_sexo,
           tit_est_civil,
           tit_dt_nascimento,
           tit_rg,
           tit_endereco,
           tit_bairro,
           tit_cep,
           tit_nacionalidade,
           tit_orgao_expedidor,
           dep_tit_pes_id1,
           dep_tit_pes_id2,
           dep_tit_pes_id3,
           dep_pes_id1,
           dep_pes_id2,
           dep_pes_id3,
           dep_sexo,
           dep_est_civil,
           dep_dt_nascimento,
           dep_rg,
           dep_endereco,
           dep_bairro,
           dep_cep,
           dep_nacionalidade,
           dep_orgao_expedidor,
           cod_beneficio,
           data_ini_beneficio,
           data_fim_beneficio,
           ocorrencia,
           status,
           data_rescisao
      From uni_beneficiario_gerado
     Where ( (   /*p_operacao*/'E' = 'I' 
             And data_ini_beneficio Between '01/10/2017'
          And '31/10/2017' ) 
           Or (   /*p_operacao*/'E' = 'E' 
              And (  data_fim_beneficio Between '01/10/2017'
          And '31/10/2017'  
                  Or data_rescisao      Between '01/10/2017'
          And '31/10/2017' )))
       And operacao          = 'E'
       And status           <> 'P'
    --   And emp_cod     Between p_emp_cod And p_emp_cod_final
       And dep_tit_pes_id1  Is Not Null
       And chapa             = 2024244--(claiton)--2023090 (marlon)/*vchapa*/
     Order By cli_pes_id1
            , cli_pes_id2
            , cli_pes_id3
            , chapa;
            

       --caso  Enio Stalhoefer    
       --    traz uma linha, logo nao da erro de too many values  
      Select *
    --    Into r_rlp_titular
        From relacoes_pessoas
       Where pes_id1 = 354212580--23416300--v_tr02_pes_id1                 tit_pes_id1
         And pes_id2 = 0--v_tr02_pes_id2                         0
         And pes_id3 = 68--v_tr02_pes_id3                        tit_pes_id3
         And pes_id1_vinculado = 92953967--v_tr01_pes_id1        cli_pes_id1
         And pes_id2_vinculado = 1--v_tr01_pes_id2               cli_pes_id2
         And pes_id3_vinculado = 6--v_tr01_pes_id3               cli_pes_id3
         And data_inc_rsaude Is Not Null
         And familia_rsaude Is Not Null;    
             
           
 -- consulta com as alterações da relacao_pessoas
 
 
 select *
  from (
   select 
-- ID
  PES_ID1,
  PES_ID2,
  PES_ID3,
  PES_ID1_VINCULADO,
  PES_ID2_VINCULADO,
  PES_ID3_VINCULADO,
  DATA_ADMISSAO,
  DATA_DESLIGAMENTO,
  STATUS_RELACAO,
  TRL_CODIGO,
  MATRICULA,
  PFIS_NUMERO_RSAUDE,
  OBSERVACAO,
  r.RLP_ID            r_rlp_id,
  r.DATA_INCLUSAO     r_data_inclusao,
  r.USUARIO_INCLUSAO  r_usuario_inclusao,
  r.DATA_ALTERACAO    r_data_alteracao ,
  r.USUARIO_ALTERACAO as r_usuario_alteracao,
--  ID,
  rr.RLP_ID            rr_rlp_id,
  RTS_ID,
  DATA_INICIO,
  DATA_FIM,
  rr.DATA_INCLUSAO     rr_data_inclusao,
  rr.USUARIO_INCLUSAO  rr_usuario_inclusao,
  rr.DATA_ALTERACAO    rr_data_alteracao,
  rr.USUARIO_ALTERACAO as rr_usuario_alteracao,
--  ID                 ,
  RRR_ID,
  FAMILIA_RSAUDE,
  GRAU_DEP_RSAUDE,
  PLM_CODIGO,
  rsa.DATA_INCLUSAO       rsa_data_inclusao,
  rsa.USUARIO_INCLUSAO    rsa_usuario_inclusao,
  rsa.DATA_ALTERACAO      rsa_data_alteracao,
  rsa.USUARIO_ALTERACAO   as rsa_usuario_alteracao
  from rsa_rel_pessoas  r
     , rsa_rlp_rts     rr
     , rsa_relacao_rsaude rsa
where r.id = rr.rlp_id
  and rr.rts_id = 1
  and rr.id = rsa.rrr_id 
 -- and r.status_relacao = 'A'
  --and pfis_numero_rsaude = 2023090--267988 (claiton)
  and matricula = '2024244'
order by matricula) teste

       Where pes_id1 = 354212580--23416300--v_tr02_pes_id1                 tit_pes_id1
         And pes_id2 = 0--v_tr02_pes_id2                         0
         And pes_id3 = 68--v_tr02_pes_id3                        tit_pes_id3
         And pes_id1_vinculado = 92953967--v_tr01_pes_id1        cli_pes_id1
         And pes_id2_vinculado = 1--v_tr01_pes_id2               cli_pes_id2
         And pes_id3_vinculado = 6--v_tr01_pes_id3               cli_pes_id3
     --    And data_inc_rsaude Is Not Null
         And familia_rsaude Is Not Null;  
         
         
select * from dda.relacoes_pessoas where matricula = '2024244'

--linhas 4401 e 4402 da procedure, parece que napo executa o update na relacoes_pessoas
/*    Elsif r_rlp_titular.familia_rsaude Is Not Null
          And v_tr02_dt_rescisao Is Not Null Then*/
          
select * from dda.relacoes_pessoas order by data_inclusao desc















---- educacao

select * from dim_situacao_aluno

select * from scurso@erphml.sistemafiergs.org.br where codcurso like 'ECO%'

select * from sge_stage.scurso$d2 where curs_id$ = 30834

select distinct produto_titulo, curso_codigo, curso_titulo, curs_id,cca_unid_gps_codigo, 
                alun_unid_gps_codigo,turm_unid_gps_codigo,pcmo_unid_gps_codigo,
                curm_unid_gps_codigo,curs_unid_gps_codigo,unid_unid_gps_codigo,
                modo_unid_gps_codigo,unes_unid_gps_codigo
from dda_bi.ods_base_historica_ges where curs_id = 30834


select stipocurso.nome tipo_curso, scur.codcurso, scur.nome curso,/*scur.descricao, */shab.codhabilitacao, shab.nome nome_habilit,/*shab.descricao,*/sgra.codgrade, sgra.descricao grade, sper.codperiodo, sper.descricao desc_periodo
from scurso@erphml.sistemafiergs.org.br scur, 
     shabilitacao@erphml.sistemafiergs.org.br shab,
     sgrade@erphml.sistemafiergs.org.br sgra,
     speriodo@erphml.sistemafiergs.org.br sper,
     STIPOCURSO@erphml.sistemafiergs.org.br,
     smodalidadecurso@erphml.sistemafiergs.org.br smodcur--,
--     smodalidade@erphml.sistemafiergs.org.br
where scur.CODCOLIGADA = STIPOCURSO.CODCOLIGADA  
AND   scur.CODTIPOCURSO = STIPOCURSO.CODTIPOCURSO
and   scur.CODCOLIGADA =  smodcur.CODCOLIGADA
and   scur.CODMODALIDADECURSO = smodcur.CODMODALIDADECURSO
--and   smodcur.   = 
--and   smodcur.   = 
AND   scur.codcoligada = shab.codcoligada
and   scur.codcurso    = shab.codcurso
and   shab.codhabilitacao = sgra.codhabilitacao
and   sgra.codcoligada = shab.codcoligada
and   sgra.codcurso = shab.codcurso
and   sgra.codgrade = sper.codgrade
and   sper.codcoligada = shab.codcoligada
and   sper.codcurso = shab.codcurso
and   sper.codhabilitacao = sgra.codhabilitacao
--and   scur.codcurso like '%EJA EM%'
order by 1,3,5,7




select SP.CODPREDIO, SP.NOME PREDIO,  SB.CODBLOCO, SB.DESCRICAO BLOCO, SS.CODSALA, SS.DESCRICAO SALA
from Spredio SP INNER JOIN SBLOCO SB
ON SP.CODCOLIGADA = SB.CODCOLIGADA
AND SP.CODFILIAL   = SB.CODFILIAL
AND SP.CODPREDIO   = SB.CODPREDIO

INNER JOIN SSALA SS
ON SS.CODCOLIGADA = SB.CODCOLIGADA
AND SS.CODFILIAL   = SB.CODFILIAL
AND SS.CODPREDIO   = SB.CODPREDIO


---teste carga turmas

select stgt.codturma, stgt.turm_id$, sist.id, sget.codturma
from dda_sis.sis_turmas sist, rmcargas.sturma@ERPHML.sistemafiergs.org.br sget, sge_stage.sturma$D2 stgt
where sist.id = stgt.turm_id$
--and   stgt.codturma = sget.codturma 
--and sist.id = 152881

select * from sge_stage.sturma$D2 where turm_id$ = 152881

select * from rmcapacitacao.sturma@ERPDES.sistemafiergs.org.br

select * from rmcargas.sturma@ERPHML.sistemafiergs.org.br sget


select * from dim_situacao_aluno

select * from scurso@erphml.sistemafiergs.org.br where codcurso like 'ECO%'

select * from sge_stage.scurso$d2 where curs_id$ = 30834

select distinct produto_titulo, curso_codigo, curso_titulo, curs_id,cca_unid_gps_codigo, 
                alun_unid_gps_codigo,turm_unid_gps_codigo,pcmo_unid_gps_codigo,
                curm_unid_gps_codigo,curs_unid_gps_codigo,unid_unid_gps_codigo,
                modo_unid_gps_codigo,unes_unid_gps_codigo
from dda_bi.ods_base_historica_ges where curs_id = 30834


select stipocurso.nome tipo_curso, scur.codcurso, scur.nome curso,/*scur.descricao, */shab.codhabilitacao, shab.nome nome_habilit,/*shab.descricao,*/sgra.codgrade, sgra.descricao grade, sper.codperiodo, sper.descricao desc_periodo
from scurso@erphml.sistemafiergs.org.br scur, 
     shabilitacao@erphml.sistemafiergs.org.br shab,
     sgrade@erphml.sistemafiergs.org.br sgra,
     speriodo@erphml.sistemafiergs.org.br sper,
     STIPOCURSO@erphml.sistemafiergs.org.br,
     smodalidadecurso@erphml.sistemafiergs.org.br smodcur--,
--     smodalidade@erphml.sistemafiergs.org.br
where scur.CODCOLIGADA = STIPOCURSO.CODCOLIGADA  
AND   scur.CODTIPOCURSO = STIPOCURSO.CODTIPOCURSO
and   scur.CODCOLIGADA =  smodcur.CODCOLIGADA
and   scur.CODMODALIDADECURSO = smodcur.CODMODALIDADECURSO
--and   smodcur.   = 
--and   smodcur.   = 
AND   scur.codcoligada = shab.codcoligada
and   scur.codcurso    = shab.codcurso
and   shab.codhabilitacao = sgra.codhabilitacao
and   sgra.codcoligada = shab.codcoligada
and   sgra.codcurso = shab.codcurso
and   sgra.codgrade = sper.codgrade
and   sper.codcoligada = shab.codcoligada
and   sper.codcurso = shab.codcurso
and   sper.codhabilitacao = sgra.codhabilitacao
--and   scur.codcurso like '%EJA EM%'
order by 1,3,5,7


/*
EI II,  EJA EF II,   EI I,   EJA EM,   EF II,  EJA EF I,  EM,   NOVA EJA,  EF I
*/

select distinct scur.codcurso, scur.nome, count(shab.codhabilitacao)
from scurso@erphml.sistemafiergs.org.br scur, shabilitacao@erphml.sistemafiergs.org.br shab
where scur.codcoligada = shab.codcoligada
and   scur.codcurso    = shab.codcurso
group by scur.codcurso,scur.nome
having count(shab.codhabilitacao)>1



select distinct scur.codcurso, scur.nome, count(shab.codhabilitacao)
from scurso@erphml.sistemafiergs.org.br scur, shabilitacao@erphml.sistemafiergs.org.br shab
where scur.codcoligada = shab.codcoligada
and   scur.codcurso    = shab.codcurso
group by scur.codcurso,scur.nome
having count(shab.codhabilitacao)=1

select 'cursos',siscur.*, 'curso_modulo',siscmod.*, 'mod_ocup',smodocup.*,'pcmo', sprocm.*, 'turmas', stur.*, 
       'curmoddsic',scmodisc.*, 'discip',sdisc.*
from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

--> pcmo -> turmas
inner join  sis_turmas stur

on stur.PCMO_ID = sprocm.ID 
and stur.PCMO_UNID_ID = sprocm.UNID_ID 
and stur.PCMO_UNID_GPS_CODIGO = sprocm.UNID_GPS_CODIGO 

inner join sis_cursos_modulos_disciplinas scmodisc

--> curso_modulo -> curso_modulo_disciplina

on scmodisc.CURM_ID = siscmod.ID
and scmodisc.CURM_UNID_ID = siscmod.UNID_ID 
and scmodisc.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO 

--> disciplinas -> curso_modulo_disciplina

inner join  sis_disciplinas sdisc
on scmodisc.DISC_ID = sdisc.ID 
and scmodisc.DISC_UNID_ID = sdisc.UNID_ID
and scmodisc.DISC_UNID_GPS_CODIGO = sdisc.UNID_GPS_CODIGO 




select * from 

sis_cursos siscur , 
sis_cursos_modulos siscmod, 
sis_programacao_cursos_modulos sprocm, 
sis_turmas stur,
sis_cursos_modulos_disciplinas scmodisc,
sis_disciplinas sdisc

where
--> curso -> curso_modulo
siscmod.CURS_ID = siscur.ID and   
siscmod.CURS_UNID_ID = siscur.UNID_ID and 
siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO and

--> pcmo -> curso_modulo
sprocm.CURM_ID = siscmod.ID and 
sprocm.CURM_UNID_ID = siscmod.UNID_ID and 
sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO and

--> pcmo -> turmas

stur.PCMO_ID = sprocm.ID and 
stur.PCMO_UNID_ID = sprocm.UNID_ID and
stur.PCMO_UNID_GPS_CODIGO = sprocm.UNID_GPS_CODIGO and

--> curso_modulo -> curso_modulo_disciplina

scmodisc.CURM_ID = siscmod.ID
scmodisc.CURM_UNID_ID = siscmod.UNID_ID and
scmodisc.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO and

--> disciplinas -> curso_modulo_disciplina

scmodisc.DISC_ID = sdisc.ID and  
scmodisc.DISC_UNID_ID = sdisc.UNID_ID and 
scmodisc.DISC_UNID_GPS_CODIGO = sdisc.UNID_GPS_CODIGO


select alun.situacao_saida_aluno
  from  sis_alunos_matriculados alun -- 2.447.248
  join sis_cadastro_candidatos_alunos cca -- 1.132.638
    on alun.cca_id = cca.id
   and alun.cca_unid_id = cca.unid_id
   and alun.cca_unid_gps_codigo = cca.unid_gps_codigo
 where alun.id = 623372


select smodocup.id, smodocup.titulo modulo, siscur.id, 
       siscur.titulo curso, sprocm.id pcmo, stur.id, stur.sigla turma, 
       sdisc.id, sdisc.descricao disciplina

from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

--> pcmo -> turmas
inner join  sis_turmas stur

on stur.PCMO_ID = sprocm.ID 
and stur.PCMO_UNID_ID = sprocm.UNID_ID 
and stur.PCMO_UNID_GPS_CODIGO = sprocm.UNID_GPS_CODIGO 

inner join sis_cursos_modulos_disciplinas scmodisc

--> curso_modulo -> curso_modulo_disciplina

on scmodisc.CURM_ID = siscmod.ID
and scmodisc.CURM_UNID_ID = siscmod.UNID_ID 
and scmodisc.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO 

--> disciplinas -> curso_modulo_disciplina

inner join  sis_disciplinas sdisc
on scmodisc.DISC_ID = sdisc.ID 
and scmodisc.DISC_UNID_ID = sdisc.UNID_ID
and scmodisc.DISC_UNID_GPS_CODIGO = sdisc.UNID_GPS_CODIGO 

and smodocup.id = 18118
order by 1, 3 , 5,6, 8



-------------------------------------

-- maioria cursos individuais tem varios cursos abaixo de um modulo
-- ensino fundamental tem varios modulos abaixo de um curso
-- EJA tem varios modulos abaixo de um curso
-- ensino medio tem varios modulos abaixo de um curso

select smodocup.id, smodocup.titulo modulo, siscur.id, 
       siscur.titulo curso, sprocm.id pcmo, stur.id, stur.sigla turma, 
       sdisc.id, sdisc.descricao disciplina

from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

--> pcmo -> turmas
inner join  sis_turmas stur

on stur.PCMO_ID = sprocm.ID 
and stur.PCMO_UNID_ID = sprocm.UNID_ID 
and stur.PCMO_UNID_GPS_CODIGO = sprocm.UNID_GPS_CODIGO 

inner join sis_cursos_modulos_disciplinas scmodisc

--> curso_modulo -> curso_modulo_disciplina

on scmodisc.CURM_ID = siscmod.ID
and scmodisc.CURM_UNID_ID = siscmod.UNID_ID 
and scmodisc.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO 

--> disciplinas -> curso_modulo_disciplina

inner join  sis_disciplinas sdisc
on scmodisc.DISC_ID = sdisc.ID 
and scmodisc.DISC_UNID_ID = sdisc.UNID_ID
and scmodisc.DISC_UNID_GPS_CODIGO = sdisc.UNID_GPS_CODIGO 

and siscur.titulo like '%EJA MÉDIO%'
order by 1, 3 , 5,6, 8



--------------------------------------------------



select smodocup.id, smodocup.titulo modulo, siscur.id, 
       siscur.titulo curso, sprocm.id pcmo, stur.id, stur.sigla turma/*, 
       sdisc.id, sdisc.descricao disciplina*/

from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

--> pcmo -> turmas
inner join  sis_turmas stur

on stur.PCMO_ID = sprocm.ID 
and stur.PCMO_UNID_ID = sprocm.UNID_ID 
and stur.PCMO_UNID_GPS_CODIGO = sprocm.UNID_GPS_CODIGO 

inner join sis_cursos_modulos_disciplinas scmodisc

--> curso_modulo -> curso_modulo_disciplina

on scmodisc.CURM_ID = siscmod.ID
and scmodisc.CURM_UNID_ID = siscmod.UNID_ID 
and scmodisc.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO 

/*--> disciplinas -> curso_modulo_disciplina

inner join  sis_disciplinas sdisc
on scmodisc.DISC_ID = sdisc.ID 
and scmodisc.DISC_UNID_ID = sdisc.UNID_ID
and scmodisc.DISC_UNID_GPS_CODIGO = sdisc.UNID_GPS_CODIGO */

--and siscur.titulo like '%EJA MÉDIO%'
order by 3


-- 3.657 cursos com somente um curso modulo
-- 6.569 cursos com mais de um curso modulo
select siscur.id,siscur.titulo,count(siscmod.id)tot_curso_modulo from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

group by siscur.id,siscur.titulo
having count(siscmod.id) = 1




select smodocup.id, smodocup.titulo modulo ,siscur.id,siscur.titulo curso from 
--> curso -> curso_modulo

sis_cursos siscur 
inner join  sis_cursos_modulos siscmod
on siscmod.CURS_ID = siscur.ID  
and siscmod.CURS_UNID_ID = siscur.UNID_ID
and siscmod.CURS_UNID_GPS_CODIGO = siscur.UNID_GPS_CODIGO

--> curso_modulo -> pcmo 

inner join sis_programacao_cursos_modulos sprocm 
on sprocm.CURM_ID = siscmod.ID 
and sprocm.CURM_UNID_ID = siscmod.UNID_ID 
and sprocm.CURM_UNID_GPS_CODIGO = siscmod.UNID_GPS_CODIGO

-->modulos_ocupacionais -> curso_modulo
inner join sis_modulos_ocupacionais smodocup
on siscmod.MODO_ID = smodocup.ID 
and siscmod.MODO_UNID_ID = smodocup.UNID_ID 
and siscmod.MODO_UNID_GPS_CODIGO = smodocup.UNID_GPS_CODIGO

order by 1

select * from sis_cursos cur, sis_unidades uni 
where (1=1)
and cur.unid_id = uni.id
and cur.unid_gps_codigo = uni.gps_codigo
and cur.id = 30834

select * from sis_turmas where id = 82818


select * from dda.centros_de_custo
select * from dda.centros_resp where codigo = '3070303'
select * from sis_centro_responsabilidade where codigo_centro_responsabilidade = 3070303
select * from dda.unidades_org

select * from dim_centros_resp
select * from dim_unidades_org
select * from dim_unidades_org_lotacao


select * from dim_rastreabilidade

select * from fat_educacao 
where dt_id = '201701'
and dturm_id = 452032
order by dt_id

select * from dim_turmas where id = 452032

------ PROCESSOS UNIVERSAL X REDE SAUDE

select * from UNI_MENSAGENS_PROCESSAMENTO order by 8 desc

-- 54 rescisoes em dezembro até 08/12
select * from dda_rh.reg_empregos where to_char(dt_rescisao,'mmyyyy') = '122017'
order by chapa

-- 32 admissoes em dezembro até 08/12
select * from dda_rh.reg_empregos where to_char(dt_admissao,'mmyyyy') = '122017'
order by chapa


-- ANALISE TITULAR

--identifica o titular na reg_empregos
select * from dda_rh.reg_empregos where chapa = 275603
--identifica o titulas na dimesao de profissionais
select * from dda_bi.dim_profissionais where matricula = 275603
-- identifica se o titular esta na tabela de pessoas
select * from pessoas where nome = 'LAURA DA COSTA LEITE AZEVEDO' -- 
-- IDENTIFICA SE TITULAR ESTA NA PESSOAS_FISICAS
select * from dda_rh.pessoas_fisicas where nome like 'LAURA DA COSTA LEITE AZEVEDO%'  --- NA ESTA EM PESSOAS_FISICAS
select * from dda_rh.pessoas_fisicas where numero = 275603
--IDENTIFICA SE ESTA NA RELACOES_PESSOAS
select * from dda.relacoes_pessoas where matricula = '275603' -- 
--identifica se o titular esta na reg_uniorgs
select * from dda.reg_uniorgs where remp_chapa = '275603' -- 
-- identifica se o titular tem beneficios
select * from dda_rh.REG_BENEFICIOS t WHERE REMP_CHAPA = 275603 -- 
--identifica se tem dependentes
select * from dda_rh.reg_dependentes where pfis_numero_pf =  275603
--identifica se o dependente tem compromissos
select * from dda_rh.REG_COMPROMISSOS t WHERE DEP_PFIS_NUMERO_PF = 275603 -- OK DEPENDENTE POSSUI BENEF NA SAUDE
--IDENTIFICA SE ESTA NA UNI_BENEFICIARIOS_GERADOS
select t.*, t.rowid from dda_rh.UNI_BENEFICIARIO_GERADO t where chapa =275603 -- ESTA NA UNI_BENEFICIARIOS

-- analise dos dependentes
select * from dda_rh.pessoas where id1 = '549444300'
select * from dda_rh.pessoas_fisicas where nome = 'TATIANA JULIUS STAHLHOEFER'
select * from dda_rh.REG_COMPROMISSOS t WHERE DEP_PFIS_NUMERO_DEP = 9949215


-- mensagens de erro
select * from uni_mensagens_processamento where chapa = 268607 order by data_inclusao desc, CHAPA 

--consulta estrutura relacoes_pessoas

   select 
 'RSA_REL_PESSOAS',
 R.ID REL_PESSOAS_ID,
  PES_ID1,
  PES_ID2,
  PES_ID3,
  PES_ID1_VINCULADO,
  PES_ID2_VINCULADO,
  PES_ID3_VINCULADO,
  DATA_ADMISSAO,
  DATA_DESLIGAMENTO,
  STATUS_RELACAO,
  TRL_CODIGO,
  MATRICULA,
  PFIS_NUMERO_RSAUDE,
  OBSERVACAO,
  r.RLP_ID            r_rlp_id,
  r.DATA_INCLUSAO     r_data_inclusao,
  r.USUARIO_INCLUSAO  r_usuario_inclusao,
  r.DATA_ALTERACAO    r_data_alteracao ,
  r.USUARIO_ALTERACAO as r_usuario_alteracao,
  'RSA_RLP_RTS',
  RR.ID RLP_id,
  rr.RLP_ID            rr_rlp_id,
  RTS_ID,
  DATA_INICIO,
  DATA_FIM,
  rr.DATA_INCLUSAO     rr_data_inclusao,
  rr.USUARIO_INCLUSAO  rr_usuario_inclusao,
  rr.DATA_ALTERACAO    rr_data_alteracao,
  rr.USUARIO_ALTERACAO as rr_usuario_alteracao,
  'RSA_RELACAO_SAUDE',
  RSA.ID          REL_SAUDE_ID       ,
  RRR_ID,
  FAMILIA_RSAUDE,
  GRAU_DEP_RSAUDE,
  PLM_CODIGO,
  rsa.DATA_INCLUSAO       rsa_data_inclusao,
  rsa.USUARIO_INCLUSAO    rsa_usuario_inclusao,
  rsa.DATA_ALTERACAO      rsa_data_alteracao,
  rsa.USUARIO_ALTERACAO   as rsa_usuario_alteracao
  from rsa_rel_pessoas  r
     , rsa_rlp_rts     rr
     , rsa_relacao_rsaude rsa
where r.id = rr.rlp_id
  and rr.rts_id = 1
  and rr.id = rsa.rrr_id 
--  and r.status_relacao = 'A'
 -- and pfis_numero_rsaude in (267988)--267988 (claiton)
  and matricula in ( )
and to_char(data_admissao,'yyyymm') = '201711'
order by matricula




-- reprocessamento da estrutura de relações pessoas

DELETE FROM rsa_relacao_rsaude WHERE ID IN (211257)

delete FROM rsa_rlp_rts WHERE ID IN (628513)

--delete from rsa_cartoes_gerados where id in ()

delete  from  RSA_REL_PESSOAS WHERE ID in (3832073)


-- reprocessamento de beneficiarios da uni_beneficiarios_gerados

UPDATE dda_rh.UNI_BENEFICIARIO_GERADO SET STATUS = 'A' where pfis_numero in (268607)

DELETE FROM dda_rh.UNI_BENEFICIARIO_GERADO WHERE STATUS = 'P' and OPERACAO = 'E' and trunc(data_inclusao,'MON') = to_date('201712','yyyymm')

UPDATE dda_rh.UNI_BENEFICIARIO_GERADO SET STATUS = 'A' where STATUS = 'P' and OPERACAO = 'I' and trunc(data_inclusao,'MON') = to_date('201712','yyyymm')


-- FAZER UMA CONSULTA PELA CHAPA E O PES_ID_VINCULADO EM UNI_BENEF PARA BUSCAR O TITULAR SEM DEPENDER DO CURSOR DE INCLUSAO
 SELECT PES_ID1,
                 PES_ID2,
                 PES_ID3,
                 PES_ID1_VINCULADO,
                 PES_ID2_VINCULADO,
                 PES_ID3_VINCULADO,
                 FAMILIA_RSAUDE,
                 DATA_INICIO,
                 TRL_CODIGO
           -- INTO R_RLP_TITULAR
            FROM (SELECT *
                    FROM RSA_REL_PESSOAS    R,
                         RSA_RLP_RTS        RR,
                         RSA_RELACAO_RSAUDE RSA
                   WHERE R.ID = RR.RLP_ID
                     AND RR.RTS_ID = 1
                     AND RR.ID = RSA.RRR_ID
                  -- AND R.STATUS_RELACAO = 'A'
                  )
           WHERE MATRICULA = '268607' 
             AND PES_ID1 = 727613770
             AND PES_ID2 = 0
             AND PES_ID3 = 87
             AND PES_ID1_VINCULADO = 3775159
             AND PES_ID2_VINCULADO = 1
             AND PES_ID3_VINCULADO = 76
             AND TRUNC(DATA_ADMISSAO) <= TRUNC(SYSDATE)
                

             AND TRUNC(DATA_INICIO) <= TRUNC(SYSDATE)
             AND TRUNC(NVL(DATA_FIM, SYSDATE)) >= TRUNC(SYSDATE) -- SOL.5271
  
             AND DATA_DESLIGAMENTO IS NULL
             AND TRL_CODIGO = 1;



-- verifica se a consulta da rsa_integra_univ_rsaude esta trazendo o titular que ja existia
  SELECT TO_CHAR(R.CHAPA) MATRICULA,
             R.EMP_COD COD_EMPRESA,
             PESS.NOME,
             PESS.NUMERO,
             PESS.DT_NASC,
             PESS.CID_NASC,
             PESS.UF_SIGLA_NASCIM,
             PESS.SEXO,
             PESS.NOME_MAE,
             PESS.NOME_PAI,
             PESS.ECIV_COD,
             PESS.NAC_COD NAC_COD,
             R.DT_ADMISSAO,
             TO_NUMBER(CPF.COD) COD_CPF,
             TO_NUMBER(SUBSTR(CPF.COD, 1, 9)) PES_ID1,
             TO_NUMBER(SUBSTR(CPF.COD, 10, 10)) PES_ID3,
             RG.COD IDENTIDADE,
             RG.DT_EMISSAO RG_DT_EMISSAO,
             RG.UF_SIGLA RG_UF_SIGLA,
             RG.ORGAO_EMISSOR,
             BEN.BENE_COD,
             BEN.DT_INI_VIG,
             BEN.DT_FIM_VIG,
             R.DT_RESCISAO
        FROM DDA_RH.REG_EMPREGOS    R,
             DDA_RH.PESSOAS_FISICAS PESS,
             DDA_RH.REG_UNIORGS     RUNI,
             (SELECT DOC.COD, DOC.PFIS_NUMERO
                FROM DDA_RH.DOCUMENTOS DOC
               WHERE DOC.TDOC_COD = 7) CPF,
             (SELECT DOC.COD,
                     DOC.DT_EMISSAO,
                     DOC.UF_SIGLA,
                     DOC.ORGAO_EMISSOR,
                     DOC.PFIS_NUMERO
                FROM DDA_RH.DOCUMENTOS DOC
               WHERE DOC.TDOC_COD = 1) RG,
             DDA_RH.REG_BENEFICIOS BEN
       WHERE R.PFIS_NUMERO = CPF.PFIS_NUMERO(+)
         AND R.PFIS_NUMERO = RG.PFIS_NUMERO(+)
         AND R.PFIS_NUMERO = PESS.NUMERO
         AND BEN.REMP_EMP_COD = R.EMP_COD
         AND BEN.REMP_CHAPA = R.CHAPA
         AND BEN.DT_INI_VIG IS NOT NULL
         AND (BEN.DT_FIM_VIG > to_date('30/11/2017','dd/mm/yyyy') OR -- ver se é data final mesmo
             BEN.DT_FIM_VIG IS NULL)
         AND BEN.BENE_COD IN (15, 16)
         AND R.EMP_COD = RUNI.REMP_EMP_COD
         AND R.CHAPA = RUNI.REMP_CHAPA
         AND (R.DT_RESCISAO IS NULL OR R.DT_RESCISAO >= SYSDATE)
         AND RUNI.DT_MOV = (SELECT MAX(RU.DT_MOV)
                              FROM REG_UNIORGS RU
                             WHERE RU.REMP_EMP_COD = R.EMP_COD
                               AND RU.REMP_CHAPA = R.CHAPA)
         AND R.EMP_COD BETWEEN 2 AND 2
         and R.CHAPA = 31859


-- exemplo varios campos de tabelas como tabelas no from


SELECT
    Pess.Numero,
	PESS.NOME ,
	PESS.DT_NASC ,
	PESS.CID_NASC ,
	PESS.UF_SIGLA_NASCIM ,
	PESS.SEXO ,
	PESS.NOME_MAE ,
	PESS.NOME_PAI ,
    Pess.Eciv_Cod,
    Pess.Nac_Cod,
    to_number(cpf.cod) cod_cpf ,
	TO_NUMBER(substr(CPF.COD,1,9))pes_id1 ,
    to_number(substr(cpf.cod,10,10))pes_id3,
    RG.COD Identidade,
	RG.DT_EMISSAO Rg_Data_Emissao,
	RG.UF_SIGLA Rg_Uf_Sigla,
	RG.ORGAO_EMISSOR,
	TO_NUMBER(PIS.COD) Pis_Cod,
	CP.COD Cp_Cod,
	CP.SERIE Cp_Serie,
	CP.DT_EMISSAO Cp_Dt_Emissao,
	CP.UF_SIGLA Cp_Uf_Sigla,
	TE.COD Te_Cod,
	TE.ZONA,
	TE.SERIE Te_Serie,
	TE.DT_EMISSAO Te_Dt_Emissao,
	TE.UF_SIGLA Te_Sigla,
	CM.COD Cm_Cod,
	CM.CATEGORIA Cm_Categoria,
	CM.DT_EMISSAO Cm_Dt_Emissao,
	CM.UF_SIGLA Cm_Uf_Sigla ,
	CH.COD Ch_Cod,
	CH.SERIE Ch_Serie,
	CH.DT_VALIDADE Ch_Dt_Validade,
	ENDER ,
	BAIRRO         ,
	CID            ,
	UF_SIGLA_RESIDEN ,
	CEP_RESID          ,
	Comp.TCom_Cod,
	Comp.Dt_ini_vig,
	Comp.Dt_Fim_vig
FROM
	PESSOAS_FISICAS PESS,
	(SELECT DOC.COD , DOC.PFIS_NUMERO
	 FROM   DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 7) CPF,
	(SELECT DOC.COD , DOC.DT_EMISSAO , DOC.UF_SIGLA , DOC.ORGAO_EMISSOR, DOC.PFIS_NUMERO
	 FROM DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 1 ) RG ,
	(SELECT DOC.COD , DOC.DT_EMISSAO , DOC.UF_SIGLA , DOC.SERIE , DOC.ZONA , DOC.PFIS_NUMERO
	 FROM DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 3) TE,
	(SELECT DOC.COD , DOC.PFIS_NUMERO
	 FROM DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 8 ) PIS ,
	(SELECT DOC.COD , DOC.DT_EMISSAO , DOC.UF_SIGLA , DOC.SERIE , DOC.PFIS_NUMERO
	 FROM DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 6 ) CP,
	(SELECT DOC.COD , DOC.DT_EMISSAO , DOC.UF_SIGLA , DOC.PFIS_NUMERO ,CATEGORIA
	 FROM DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 5 ) CM,
	(SELECT DOC.COD , DOC.PFIS_NUMERO , DOC.DT_VALIDADE , DOC.SERIE
	 FROM DOCUMENTOS DOC
	 WHERE DOC.TDOC_COD = 2) CH,
    Reg_Dependentes Dep ,
    Reg_Compromissos Comp
WHERE pess.numero = CPF.PFIS_NUMERO(+)
AND pess.numero = RG.PFIS_NUMERO(+)
AND pess.numero = TE.PFIS_NUMERO(+)
AND pess.numero = PIS.PFIS_NUMERO(+)
AND pess.numero = CP.PFIS_NUMERO(+)
AND pess.numero = CM.PFIS_NUMERO(+)
AND pess.numero = CH.PFIS_NUMERO(+)
AND pess.numero = PESS.NUMERO
And Dep.Pfis_Numero_Dep      = Pess.numero
And Comp.Dep_Pfis_Numero_PF  = Dep.Pfis_Numero_PF
AND Comp.Dep_Pfis_Numero_DEP = Dep.Pfis_Numero_DEP
AND Comp.TCom_Cod in (15,16,17)
And Comp.Dt_ini_vig between P_Data_Inicial and P_Data_Final
And (Comp.Dt_fim_vig >= P_Data_Inicial or Comp.Dt_Fim_Vig is Null)
And Dep.Pfis_Numero_Pf in (Select numero from pessoas_fisicas where numero = vTitular);


-- busca finais de semana

   
   select a.dt  from
    ( select trunc(sysdate,'YEAR') + rownum - 1 dt,
             to_char(trunc(sysdate,'YEAR') + rownum -1 ,'D') day

-- note this table can be any table that has at least 366 rows

        from all_objects 
        where trunc(sysdate,'YEAR') + rownum <=
              Add_months(trunc(sysdate,'YEAR'),12) - 1 ) a
where a.day in (1,7)


--- update com bulk e forall pegando pelo rowid

declare

vPeriodo number(10);
v_limite number:= 10000;

cursor c_atualiza(pPeriodo in number) is
select fe.rowid,fe.dcr_turm_id from dda_bi.fat_educacao fe where dt_id >= vPeriodo;

/*TYPE c_atualiza_type IS TABLE OF c_atualiza%ROWTYPE INDEX BY PLS_INTEGER;
     l_atualiza c_atualiza_type;*/
     
TYPE lv_atualiza_type is Varray(10000) of varchar2(255);
TYPE ln_atualiza_type is Varray(10000) of number;

lv_atualiza lv_atualiza_type;
ln_atualiza ln_atualiza_type;

begin
  
      select min(dt_id) into vPeriodo from fat_educacao;     

      open c_atualiza(vPeriodo);
      loop
        fetch c_atualiza bulk collect
          into lv_atualiza,ln_atualiza limit v_limite;
        begin
          forall i in 1 .. lv_atualiza.count
            update fat_educacao fat set dcr_turm_id = 0 
            where fat.rowid = lv_atualiza(i)
            and dcr_turm_id is null ;
        end;
        exit when lv_atualiza.count < v_limite;
        commit;
      end loop;
      close c_atualiza;
      commit;
end;


--- 

-- necessidades especiais -  total 979 em producao igual ao relatorio da Cris
select ssp.necessidade_especial,count(*) from DDA_SIS.SIS_PARAMETROS_APROP_PROD pap, 
                                                 DDA_SIS.sis_scop_producao_cgu ssp,
                                                 dda.municipios mun
                                                 
where pap.id = ssp.pap_id
and necessidade_especial is not null
and necessidade_especial not in(9)
and   ssp.mun_codigo = mun.codigo
and uf_sigla = 'RS'
and pap.ano = 2017
--and pap_id
and mes <= 11
group by necessidade_especial


select distinct necessidade_especial from DDA_SIS.sis_scop_producao

select * from DDA_SIS.sis_scop_producao

select * from sis_cursos where ead = 'S' and situacao_curso = 'A'

select * from sis_ciclo_aluno

select * from dda.municipios

select * from cg_ref_codes where rv_domain = 'SCOP_NECESSIDADE_ESPECIAL'--like '%NECESS%'

select * from dda.municipios

select am.codigo_pne, am.codigo_identificador, am.tipo_pne, am.* from sis_alunos_matriculados am where am.codigo_pne is not null

select * from fat_educacao

--- levar necessidade_especial para a fato_educacao

select */*distinct dcurm_id, count(*)*/ from (   
   Select scal.Cca_Id        DALU_ID -- Utilizado para chamar a função em memória para chegar no aluno.
            ,
             scal.cca_unid_id   DCLI_ID -- Utilizado para chamar a função em memória para chegar no aluno. Valor é zero para o SENAI
            ,
             a.pcmo_cect_codigo DCR_ID -- Utilizado para chamar função em memória
            ,
             curs.id            DCURM_ID -- Utilizado para chamar função em memória para chegar no curso
            ,
             4                  DEMP_ID,
             curs.unid_id       DRAST_ID -- Utilizado para chamar função em memória para chegar no curso
            ,
             0                  DSIAL_ID
             /*, scop.turm_id*/,
             (select t.turm_id
                from dda_sis.SIS_SCOP_PRODUCAO t
               where t.scal_id = a.scal_id
                 and rownum = 1) DTURM_ID -- Utilizado para chamar função em memória para chegar na turma
            ,
             dt.id DT_ID,
             a.pcmo_cect_codigo DUORG_ID -- Utilizado para chamar função em memória
            ,
             0 PREVISTO_AH,
             0 PREVISTO_MATRICULA,
             nvl(a.total_horas, 0) REALIZADO_AH,
             nvl(Decode(a.mes,
                        1,
                        a.entrada_nova + a.entrada_residual +
                        a.entrada_transferencia - a.saida_transferido,
                        a.entrada_nova + a.entrada_transferencia -
                        a.saida_transferido),
                 0) REALIZADO_MATRICULA,
             nvl(a.saida_transferido, 0) ENTR_DISC_SAIDA,
             0 VALOR_CURSO,
             0 VALOR_TOTAL,
             0 VALOR_DESCONTO,
             0 VALOR_EFETIVO,
             '01/jan/1901' DATA_SISTEMA,
             '01/jan/1901' DATA_INGRESSO,
             0 IDADE,
             '01/jan/1901' DATA_INI_SIT_ALUN,
             curs.titulo MOTIVO_CANCELAMENTO -- Utilizado para chamar a função em memória para chegar no curso. No SENAI esse valor é nulo.
            ,
             '-' CLIENTELA_SESI,
             '-' ISENTO,
             '-' GRATUIDADE,
             '-' BAIXA_RENDA,
             '-' DECLARACAO,
             0 PREVISTO_AH_MES_ANT,
             0 REALIZADO_AH_MES_ANT,
             0 PREVISTO_AH_ANO_MES_ANT,
             0 REALIZADO_AH_ANO_MES_ANT,
             0 PREVISTO_MT_MES_ANT,
             0 REALIZADO_MT_MES_ANT,
             0 PREVISTO_MT_ANO_MES_ANT,
             0 REALIZADO_MT_ANO_MES_ANT,
             0 VALOR_CURSO_MES_ANT,
             0 VALOR_CURSO_ANO_MES_ANT,
             0 VALOR_TOTAL_MES_ANT,
             0 VALOR_TOTAL_ANO_MES_ANT,
             0 VALOR_DESCONTO_MES_ANT,
             0 VALOR_DESCONTO_ANO_MES_ANT,
             0 VALOR_EFETIVO_MES_ANT,
             0 VALOR_EFETIVO_ANO_MES_ANT,
             0 DTPMA_ID,
             0 DTPCL_ID,
             'Não' CR_LOT,
             'Não' IND_PROD,
             0 PREVISTO_HH,
             0 PREVISTO_ATENDIMENTO,
             0 REALIZADO_HH,
             0 REALIZADO_ATENDIMENTO,
             0 PREVISTO_HH_MES_ANT,
             0 REALIZADO_HH_MES_ANT,
             0 PREVISTO_HH_ANO_MES_ANT,
             0 REALIZADO_HH_ANO_MES_ANT,
             0 PREVISTO_AT_MES_ANT,
             0 REALIZADO_AT_MES_ANT,
             0 PREVISTO_AT_ANO_MES_ANT,
             0 REALIZADO_AT_ANO_MES_ANT,
             0 DST_ID,
             0 DCGS_ID,
             'Não' IND_ATEND,
             'Não' IND_DN,
             0 DPLA_ID,
             '-' CHAVE,
             '-' CHAVE_BSC,
             0 EM_ANDAMENTO,
             0 DCTA_ID,
             nvl(a.entrada_nova, 0) ENTRADA_NOVA,
             nvl(a.entrada_residual, 0) ENTRADA_RESIDUAL,
             nvl(a.entrada_transferencia, 0) ENTRADA_TRANSFERENCIA,
             nvl(a.entrada_trancamento, 0) ENTRADA_TRANCAMENTO,
             nvl(a.saida_concluido, 0) SAIDA_CONCLUIDO,
             nvl(a.saida_evadido, 0) SAIDA_EVADIDO,
             nvl(a.saida_eliminado, 0) SAIDA_ELIMINADO,
             nvl(a.saida_trancado, 0) SAIDA_TRANCADO,
             nvl(a.saida_transferido, 0) SAIDA_TRANSFERIDO,
             nvl(a.saida_residual, 0) SAIDA_RESIDUAL,
/*             get_nome_tipo_gratuidade_by_id(
                                            --    scop.tipo_gratuidade)                            TIPO_GRATUIDADE
                                            (Select sp.tipo_gratuidade
                                               From (select *
                                                       from Sis_Scop_Producao
                                                      order by Data_Inclusao desc) sp
                                              where sp.scal_id = scal.id
                                                and sp.tipo_gratuidade is not null
                                                and rownum <= 1)) TIPO_GRATUIDADE,*/
             0 DDISC_ID,
             0 DPRO_ID_INSTRUTOR,
             0 DCLIPF_ID,
             0 DCLIPJ_ID,
             '01/jan/1901' DATA_BI,
             0 ENSAIOS,
             0 RELATORIOS,
             0 PROJETOS,
             0 PREVISTO_LAUDOS,
             0 PREVISTO_ENSAIOS,
             nvl(hrs.realizado_horas_efetivas_est, 0) REALIZADO_HORAS_EFETIVAS_EST,
             nvl(hrs.realizado_qt_horas_pr_apr, 0) REALIZADO_QT_HORAS_PR_APR,
             nvl(hrs.realizado_horas_total, 0) REALIZADO_QT_HORAS_TOTAL,
             0 DCR_TURM_ID,
             scal.necessidade_especial CODIGO_PNE --- teste
        From sis_aux_consolidado_scop a

        join sis_ciclo_aluno scal
          on scal.id = a.scal_id
         and scal.unid_id = a.unid_id
         and scal.unid_gps_codigo = a.unid_gps_codigo

        join sis_cursos curs
          on curs.id = scal.curs_id
         and curs.unid_id = scal.curs_unid_id
         and curs.unid_gps_codigo = scal.curs_unid_gps_codigo

        join dda_bi.dim_tempo dt
          on dt.ano = a.ano
         and dt.mes = a.mes

        left join (select (qt_horas_efetivas_est) realizado_horas_efetivas_est,
                          (qt_horas_pratica_apr) realizado_qt_horas_pr_apr,
                          (qt_horas_total) realizado_horas_total,
                          (qt_horas_efetivas) realizado_horas_efetivas,
                          ch.pap_id,
                          pap.ano,
                          pap.mes,
                          scpr.scal_id,
                          scpr.unid_id,
                          scpr.unid_gps_codigo,
                          scpr.cca_id,
                          scpr.cca_unid_id,
                          scpr.cca_unid_gps_codigo
                     from dda_sis.sis_scop_ch ch

                     join dda_sis.sis_scop_producao_cgu scpr
                       on ch.scpr_id = scpr.id

                     join dda_sis.sis_parametros_aprop_prod pap
                       on pap.id = ch.pap_id

                    where pap.ano = 2017
                      and pap.mes <= 11) hrs
          on hrs.ano = dt.ano
         and hrs.mes = dt.mes
         and a.scal_id = hrs.scal_id
         and scal.cca_id = hrs.cca_id
         and scal.cca_unid_id = hrs.cca_unid_id
         and scal.cca_unid_gps_codigo = hrs.cca_unid_gps_codigo
         and a.unid_id = hrs.unid_id
         and a.unid_gps_codigo = hrs.unid_gps_codigo

       Where dt.ano = 2017
         And dt.mes <= 11

      Union All

      Select ingr.Cca_Id DALU_ID -- Utilizado para chamar a função em memória para chegar no aluno.
            ,
             ingr.cca_unid_id DCLI_ID -- Utilizado para chamar a função em memória para chegar no aluno. Valor é zero para o SENAI
            ,
             a.pcmo_cect_codigo DCR_ID -- Utilizado para chamar função em memória
            ,
             curf_id DCURM_ID -- Utilizado para chamar função em memória para chegar no curso
            ,
             4 DEMP_ID,
             44 DRAST_ID -- Utilizado para chamar função em memória para chegar no curso
            ,
             0 DSIAL_ID,
             0 DTURM_ID,
             dt.id DT_ID,
             a.pcmo_cect_codigo DUORG_ID -- Utilizado para chamar função em memória
            ,
             0 PREVISTO_AH,
             0 PREVISTO_MATRICULA,
             nvl(a.total_horas, 0) REALIZADO_AH,
             nvl(Decode(a.mes,
                        1,
                        a.entrada_nova + a.entrada_residual +
                        a.entrada_transferencia - a.saida_transferido,
                        a.entrada_nova + a.entrada_transferencia -
                        a.saida_transferido),
                 0) REALIZADO_MATRICULA,
             nvl(a.saida_transferido, 0) ENTR_DISC_SAIDA,
             0 VALOR_CURSO,
             0 VALOR_TOTAL,
             0 VALOR_DESCONTO,
             0 VALOR_EFETIVO,
             '01/jan/1901' DATA_SISTEMA,
             '01/jan/1901' DATA_INGRESSO,
             0 IDADE,
             '01/jan/1901' DATA_INI_SIT_ALUN,
             curf.titulo MOTIVO_CANCELAMENTO -- Utilizado para chamar a função em memória para chegar no curso. No SENAI esse valor é nulo.
            ,
             '-' CLIENTELA_SESI,
             '-' ISENTO,
             '-' GRATUIDADE,
             '-' BAIXA_RENDA,
             '-' DECLARACAO,
             0 PREVISTO_AH_MES_ANT,
             0 REALIZADO_AH_MES_ANT,
             0 PREVISTO_AH_ANO_MES_ANT,
             0 REALIZADO_AH_ANO_MES_ANT,
             0 PREVISTO_MT_MES_ANT,
             0 REALIZADO_MT_MES_ANT,
             0 PREVISTO_MT_ANO_MES_ANT,
             0 REALIZADO_MT_ANO_MES_ANT,
             0 VALOR_CURSO_MES_ANT,
             0 VALOR_CURSO_ANO_MES_ANT,
             0 VALOR_TOTAL_MES_ANT,
             0 VALOR_TOTAL_ANO_MES_ANT,
             0 VALOR_DESCONTO_MES_ANT,
             0 VALOR_DESCONTO_ANO_MES_ANT,
             0 VALOR_EFETIVO_MES_ANT,
             0 VALOR_EFETIVO_ANO_MES_ANT,
             0 DTPMA_ID,
             0 DTPCL_ID,
             'Não' CR_LOT,
             'Não' IND_PROD,
             0 PREVISTO_HH,
             0 PREVISTO_ATENDIMENTO,
             0 REALIZADO_HH,
             0 REALIZADO_ATENDIMENTO,
             0 PREVISTO_HH_MES_ANT,
             0 REALIZADO_HH_MES_ANT,
             0 PREVISTO_HH_ANO_MES_ANT,
             0 REALIZADO_HH_ANO_MES_ANT,
             0 PREVISTO_AT_MES_ANT,
             0 REALIZADO_AT_MES_ANT,
             0 PREVISTO_AT_ANO_MES_ANT,
             0 REALIZADO_AT_ANO_MES_ANT,
             0 DST_ID,
             0 DCGS_ID,
             'Não' IND_ATEND,
             'Não' IND_DN,
             0 DPLA_ID,
             '-' CHAVE,
             '-' CHAVE_BSC,
             0 EM_ANDAMENTO,
             0 DCTA_ID,
             nvl(a.entrada_nova, 0) ENTRADA_NOVA,
             nvl(a.entrada_residual, 0) ENTRADA_RESIDUAL,
             nvl(a.entrada_transferencia, 0) ENTRADA_TRANSFERENCIA,
             nvl(a.entrada_trancamento, 0) ENTRADA_TRANCAMENTO,
             nvl(a.saida_concluido, 0) SAIDA_CONCLUIDO,
             nvl(a.saida_evadido, 0) SAIDA_EVADIDO,
             nvl(a.saida_eliminado, 0) SAIDA_ELIMINADO,
             nvl(a.saida_trancado, 0) SAIDA_TRANCADO,
             nvl(a.saida_transferido, 0) SAIDA_TRANSFERIDO,
             nvl(a.saida_residual, 0) SAIDA_RESIDUAL,
/*             get_nome_tipo_gratuidade_by_id(
                                            --    scop.tipo_gratuidade)                            TIPO_GRATUIDADE
                                            (Select sp.tipo_gratuidade
                                               From (select *
                                                       from Sis_Scop_Producao
                                                      order by Data_Inclusao desc) sp
                                              where sp.scal_id = a.scal_id
                                                and sp.tipo_gratuidade is not null
                                                and rownum <= 1)) TIPO_GRATUIDADE,*/
             0 DDISC_ID,
             0 DPRO_ID_INSTRUTOR,
             0 DCLIPF_ID,
             0 DCLIPJ_ID,
             '01/jan/1901' DATA_BI,
             0 ENSAIOS,
             0 RELATORIOS,
             0 PROJETOS,
             0 PREVISTO_LAUDOS,
             0 PREVISTO_ENSAIOS,
             0 REALIZADO_HORAS_EFETIVAS_EST,
             0 REALIZADO_QT_HORAS_PR_APR,
             0 REALIZADO_QT_HORAS_TOTAL,
                          0 DCR_TURM_ID,
                          0 CODIGO_PNE
        From sis_aux_consolidado_scop a,
             sis_ingresso             ingr,
             dda_bi.dim_tempo                dt,
             sis_cursos_fatec         curf,
             sis_grade_curricular     grad,
             sis_scop_producao        scop
       Where Ingr.Id = a.Ingr_Id
         And dt.ano = a.ano
         And dt.mes = a.mes
         And grad.id = ingr.grad_id
         And curf.id = grad.curf_id
         And a.pap_id = scop.pap_id(+)
         And a.scal_id = scop.scal_id(+)
         And dt.ano = 2017
         And dt.mes <= 11 --alterado de igual para penor ou igual para teste
         )
         where codigo_pne not in (0,9)
       --  and demp_id = 4
       --  group by dcurm_id
       and realizado_matricula = 1
       
       
-- levar campo EAD para a dimensao de cursos modulos
-- cursor c_Curf
    Select nvl(curs.id, 0) Curf_id,
             nvl(curs.unid_id, 0) Curf_unid_id,
             nvl(curs.unid_gps_codigo, 0) Curf_unid_gps_codigo,
             nvl(curs.titulo, '-') Curf_titulo,
             nvl(aat.codigo_senai, 0) aat_codigo,
             nvl(aat.descricao, '-') aat_descricao,
             curs.ead
        From sis_cursos curs, areas_atuacoes aat
       where curs.aat_codigo = aat.codigo(+)
      Union All
      Select nvl(curf.id, 0) Curf_id,
             44 Curf_unid_id,
             4 Curf_unid_gps_codigo,
             nvl(curf.titulo, '-') Curf_titulo,
             nvl(aat.codigo_senai, 0) aat_codigo,
             nvl(aat.descricao, '-') aat_descricao,
             'N-Fatec'
        From sis_cursos_fatec     curf,
             sis_grade_curricular grad,
             areas_atuacoes       aat
       Where curf.id = grad.curf_id
         and curf.aat_codigo = aat.codigo(+)
         
         
        -- (1-Presencial, 2-Móvel, 3-A distância) --UTILIZAR A FLAG "EAD" da tela de curso      --(Select  Decode(Curs.Ead, 'N', '1', 'S', '2')-- || ' - ' || curs.codigo_sae
              From   Sis_Cursos         Curs
                    ,Sis_Cursos_Modulos Curm
              Where  Curm.Curs_Id = Curs.Id
              And    Curm.Curs_Unid_Id = Curs.Unid_Id
              And    Curm.Curs_Unid_Gps_Codigo = Curs.Unid_Gps_Codigo
              And    Curm.Id = scpr.curm_id
              And    Curm.Unid_Id = scpr.curm_unid_id
              And    Curm.Unid_Gps_Codigo = scpr.curm_unid_gps_codigo
             ) Curs_EAD
     
    
-- identificação dos cargos baseados no SAB
-- GECON

--select distinct processo from (
select univ.*, sab.* ,  (case when setor = 205  then 
                                                     (case when cod_proc = 16 then
                                                                            (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                  when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                  when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                  when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                             else desc_cargo end)
                                                           
                                                      
                                                           when cod_proc = 38 then
                                                                              (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                    when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                    when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                    when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                               else desc_cargo end)
                                                           
                                                      
                                                           when cod_proc = 40 then
                                                                               (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                     when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                     when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                     when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                                else desc_cargo end)
                                                           
                                                      
                                                           when cod_proc = 66  then
                                                                               (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                     when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                     when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                     when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                                else desc_cargo end)
                                                           
                                                       end)
                                                   end )cargo_novo from (
select gps.desc_pastas_ecm empresa, 
         --  mprc.dsc_cod,
           mrps.cod_gps codigo_empresa, 
           mrps.id_mprc cod_macro, 
           mprc.dsc_cod||'-'||dsc_mprc macroprocesso, 
           mprc.dsc_cod setor, 
           mrps.id_prc cod_proc, 
           prc.cod_prc||'-'||prc.dsc_prc processo, 
      --     mrps.id_crg cod_cargo, 
           crg.cod_crg cod_cargo_univ,
           crg.cod_crg||'-'||crg.dsc_crg cargo, 
           mrps.id_arat cod_area, 
           arat.dsc_arat area_atuacao, 
           mrps.situacao, 
           mrps.fl_analise_curricular, 
           mrps.fl_prova_conhecimento, 
           mrps.fl_prova_tecnica, 
           mrps.fl_prova_pratica, 
           mrps.fl_dinamica_grupo, 
           mrps.fl_avaliacao_psicologica, 
           mrps.fl_entrevista, 
           mrps.formacoes, 
           mrps.atividades_desempenhadas, 
           mrps.conhecimentos_1, 
           mrps.conhecimentos_2, 
           mrps.experiencias_1, 
           mrps.experiencias_2, 
           mrps.requisitos_competencias, 
           dbms_lob.substr(mrps.conteudo_prova_conhecimento, 4000, 1) As conteudo_prova_conhecimento, 
           dbms_lob.substr(mrps.conteudo_prova_tecnica, 4000, 1) As conteudo_prova_tecnica, 
           dbms_lob.substr(mrps.conteudo_prova_pratica, 4000, 1) As conteudo_prova_pratica, 
           length(dbms_lob.substr(mrps.conteudo_prova_conhecimento, 4000, 1)) As ccc, 
           length(dbms_lob.substr(mrps.conteudo_prova_tecnica, 4000, 1)) As cpt, 
           length(dbms_lob.substr(mrps.conteudo_prova_pratica, 4000, 1)) As cpp 
      from sab_modelos_rq_pessoas mrps, 
           sab_macro_processos mprc, 
           sab_processos prc, 
           sab_cargos crg, 
           sab_areas_atuacao arat, 
           grupos_pessoas gps 
     where mrps.cod_gps = gps.codigo 
      -- and mrps.cod_gps = 3 
       and mrps.id_mprc = mprc.id_mprc 
       and mrps.id_prc  = prc.id_prc 
       and mrps.id_crg  = crg.id_crg 
       and mprc.dsc_cod =  205 --gecon 23 geduc
       and mrps.id_arat = arat.id_arat(+) 
       --
--       and crg.cod_crg = 5004
       --
     order by mrps.situacao, 
              mprc.situacao, 
              mprc.dsc_mprc, 
              prc.situacao, 
              prc.dsc_prc, 
              crg.situacao, 
              crg.dsc_crg, 
              arat.situacao, 
              arat.dsc_arat) sab,
              
              
 (select max(dt_mov), 
         car.emp_cod, 
         car.car_cod, 
         car.nome desc_cargo , 
         descricao_uo, 
         chapa,
         numero,
         pf.nome, 
         frh.nome nome_batimento 
         
  from reg_cargos rc, reg_empregos re, pessoas_fisicas pf, dda_rh.cargos car, 
         dda.srs_funcionario_rh frh
 where rc.car_emp_cod = re.emp_cod
 and rc.remp_chapa = re.chapa
 and pf.numero = re.chapa
 and car.emp_cod = rc.car_emp_cod
 and car.cod = rc.car_cod
 and frh.matricula = re.chapa
 and re.dt_rescisao is null
 and Re.VINC_COD <> 9
-- and car.car_cod = 5004 -- cod cargo para gecon
 and descricao_uo like '%GECON%'
 
 group by car.emp_cod, car.car_cod, car.nome  , descricao_uo, chapa,numero,pf.nome, frh.nome
 
 
 ) univ
 
 where  univ.car_cod = sab.cod_cargo_univ (+)
-- and car_cod >= 4500
-- and cod_proc = 24
 
-- and chapa = 28138 -- gecon
--   and chapa = 118907  -- geduc
-- and univ.emp_cod = decode(sab.codigo_empresa,2,1,4,2)


 
-- select * from dda.srs_funcionario_rh where descricao_setor = 'GECON' descricao_uo like '%CONTROLAD%'
--)case when cod_proc = 24 then(case when car.nome like '%TÉCNICO%' then 'TECNICO'
                                                                             

---- GEDUC


--select distinct processo from (
select univ.*, sab.* ,  (case when setor = 23  then 
                                                     (case when cod_proc = 16 then
                                                                            (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                  when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                  when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                  when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                             else desc_cargo end)
                                                           
                                                      
                                                           when cod_proc = 24 then
                                                                              (case when desc_cargo like '%ASSISTENTE%'    then 'ASSISTENTE'
                                                                                    when desc_cargo like '%TÉCNICO%'       then 'TECNICO' 
                                                                                    when desc_cargo like '%BIBLIOTECÁRIO%' then 'BIBLIOTECARIO'
                                                                               else desc_cargo end)
                                                           
                                                      
                                                           when cod_proc = 52 then
                                                                               (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                     when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                     when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                     when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                                else desc_cargo end)
                                                           
                                                      
                                                           when cod_proc = 53  then
                                                                               (case when desc_cargo like '%ANALISTA%JÚNIOR%'    then 'ANALISTA JR'
                                                                                     when desc_cargo like 'ANALISTA%PLENO'       then 'ANALISTA PL'
                                                                                     when desc_cargo like 'ANALISTA%SÊNIOR'      then 'ANALISTA SR' 
                                                                                     when desc_cargo like '%ASSISTENTE%'         then 'ASSISTENTE'
                                                                                else desc_cargo end)
                                                           
                                                       end)
                                                   end )cargo_novo from (
select gps.desc_pastas_ecm empresa, 
         --  mprc.dsc_cod,
           mrps.cod_gps codigo_empresa, 
           mrps.id_mprc cod_macro, 
           mprc.dsc_cod||'-'||dsc_mprc macroprocesso, 
           mprc.dsc_cod setor, 
           mrps.id_prc cod_proc, 
           prc.cod_prc||'-'||prc.dsc_prc processo, 
      --     mrps.id_crg cod_cargo, 
           crg.cod_crg cod_cargo_univ,
           crg.cod_crg||'-'||crg.dsc_crg cargo, 
           mrps.id_arat cod_area, 
           arat.dsc_arat area_atuacao, 
           mrps.situacao, 
           mrps.fl_analise_curricular, 
           mrps.fl_prova_conhecimento, 
           mrps.fl_prova_tecnica, 
           mrps.fl_prova_pratica, 
           mrps.fl_dinamica_grupo, 
           mrps.fl_avaliacao_psicologica, 
           mrps.fl_entrevista, 
           mrps.formacoes, 
           mrps.atividades_desempenhadas, 
           mrps.conhecimentos_1, 
           mrps.conhecimentos_2, 
           mrps.experiencias_1, 
           mrps.experiencias_2, 
           mrps.requisitos_competencias, 
           dbms_lob.substr(mrps.conteudo_prova_conhecimento, 4000, 1) As conteudo_prova_conhecimento, 
           dbms_lob.substr(mrps.conteudo_prova_tecnica, 4000, 1) As conteudo_prova_tecnica, 
           dbms_lob.substr(mrps.conteudo_prova_pratica, 4000, 1) As conteudo_prova_pratica, 
           length(dbms_lob.substr(mrps.conteudo_prova_conhecimento, 4000, 1)) As ccc, 
           length(dbms_lob.substr(mrps.conteudo_prova_tecnica, 4000, 1)) As cpt, 
           length(dbms_lob.substr(mrps.conteudo_prova_pratica, 4000, 1)) As cpp 
      from sab_modelos_rq_pessoas mrps, 
           sab_macro_processos mprc, 
           sab_processos prc, 
           sab_cargos crg, 
           sab_areas_atuacao arat, 
           grupos_pessoas gps 
     where mrps.cod_gps = gps.codigo 
      -- and mrps.cod_gps = 3 
       and mrps.id_mprc = mprc.id_mprc 
       and mrps.id_prc  = prc.id_prc 
       and mrps.id_crg  = crg.id_crg 
       and mprc.dsc_cod =  23 --gecon 23 geduc
       and mrps.id_arat = arat.id_arat(+) 
       --
--       and crg.cod_crg = 5004
       --
     order by mrps.situacao, 
              mprc.situacao, 
              mprc.dsc_mprc, 
              prc.situacao, 
              prc.dsc_prc, 
              crg.situacao, 
              crg.dsc_crg, 
              arat.situacao, 
              arat.dsc_arat) sab,
              
              
 (select max(dt_mov), 
         car.emp_cod, 
         car.car_cod, 
         car.nome desc_cargo , 
         descricao_uo, 
         chapa,
         numero,
         pf.nome, 
         frh.nome nome_batimento 
         
  from reg_cargos rc, reg_empregos re, pessoas_fisicas pf, dda_rh.cargos car, 
         dda.srs_funcionario_rh frh
 where rc.car_emp_cod = re.emp_cod
 and rc.remp_chapa = re.chapa
 and pf.numero = re.chapa
 and car.emp_cod = rc.car_emp_cod
 and car.cod = rc.car_cod
 and frh.matricula = re.chapa
 and re.dt_rescisao is null
 and Re.VINC_COD <> 9
-- and car.car_cod = 5004 -- cod cargo para gecon
 and descricao_uo like '%GEDUC%'
 
 group by car.emp_cod, car.car_cod, car.nome  , descricao_uo, chapa,numero,pf.nome, frh.nome
 
 
 ) univ
 
 where sab.cod_cargo_univ = univ.car_cod
-- and cod_proc = 24
 
-- and chapa = 28138 -- gecon
--   and chapa = 118907  -- geduc
-- and univ.emp_cod = decode(sab.codigo_empresa,2,1,4,2)


 
-- select * from dda.srs_funcionario_rh where descricao_setor = 'GECON' descricao_uo like '%CONTROLAD%'
--)case when cod_proc = 24 then(case when car.nome like '%TÉCNICO%' then 'TECNICO'


--------------------------------------------------------------------------------------                                                                              
-- necessidades especiais -  total 979 em producao igual ao relatorio da Cris
select ssp.necessidade_especial,count(*) from DDA_SIS.SIS_PARAMETROS_APROP_PROD pap, 
                                                 DDA_SIS.sis_scop_producao_cgu ssp,
                                                 dda.municipios mun
                                                 
where pap.id = ssp.pap_id
and necessidade_especial is not null
and necessidade_especial not in(9)
and   ssp.mun_codigo = mun.codigo
and uf_sigla = 'RS'
and pap.ano = 2017
--and pap_id
and mes <= 11
group by necessidade_especial

select distinct necessidade_especial from DDA_SIS.sis_scop_producao

select * from DDA_SIS.sis_scop_producao

select * from sis_cursos where ead = 'S' and situacao_curso = 'A'

select * from sis_ciclo_aluno

select * from cg_ref_codes where rv_domain like '%NECESS%'

------------------------------------------------------------------------------------------------
/************************************************************************************
* Nome         : Procedure Atualiza_Cedidos_prc                                     *                   *
* Analista     : Alexandre Dall'Alba                                                *
* Desenvolvedor: Alexandre Dall'Alba                                                *
* Data criação : 15/01/2018                                                         *
* Objetivo     : Identificar os funcionários cedidos para outras casas              *
* Observação   : A chamada está na Popula_bi_pck                                    *
*************************************************************************************/
  
  
Procedure Atualiza_Cedidos_prc(p_ano varchar2, p_mes varchar2) is

  v_cedido1     varchar2(200);
  v_cedido2     varchar2(200);
  v_cedido3     varchar2(200);
  v_cedido4     varchar2(200);
  v_cedido5     varchar2(200);
  v_cedido6     varchar2(200);
  contador      number := 1;
  v_flag_cedido char(1);
  v_prof_atual  number;
  v_prof_ant    number;
/*--------------------------------------------------------
 Busca os cedidos para o período passado por parâmetro
--------------------------------------------------------*/
begin
  for i in (select ri.*,
                   ti.cod              ind_cod,
                   ti.descricao        ind_desc,
                   dti.id,
                   fat.dpro_id,
                   fat.dt_id,
                   fat.dti_ced_emp1_id,
                   fat.dti_ced_emp2_id,
                   fat.dti_ced_emp3_id,
                   fat.dti_ced_emp4_id,
                   fat.dti_ced_emp5_id,
                   fat.dti_ced_emp6_id
              from dda_rh.reg_indicadores       ri,
                   dda_rh.tipo_indicadores      ti,
                   dda_bi.dim_tipos_indicadores dti,
                   dda_bi.fat_recursos_humanos  fat
             where ti.cod = ri.rtin_tind_cod
               and ti.cod = dti.cod
               and ri.rtin_remp_chapa = fat.dpro_id
               and to_char(ri.dt_ini_vig, 'yyyymm') = fat.dt_id
               and dti.flag_atual = 'S'
               and fat.dtpmov_id = 5
               and ri.rtin_tind_cod in (1001, 1002, 1003, 1006, 1007, 1008)
               and fat.dt_id <= p_ano || p_mes
             order by fat.dt_id desc) loop
  
    v_prof_atual := i.rtin_remp_chapa;
    
    if v_prof_atual != v_prof_ant then
      
      contador  := 1;
      v_cedido1 := null;
      v_cedido2 := null;
      v_cedido3 := null;
      v_cedido4 := null;
      v_cedido5 := null;
      v_cedido6 := null;
      
    end if;
/*----------------------------------------------------------------------------
 Como podem existir cedências parciais, os diferentes códigos são armazenados na
tabela como FK's para a dimensão dim_tipos_indicadores
------------------------------------------------------------------------------*/
  
    v_prof_ant := v_prof_atual;
  
    if contador = 1 then
      v_cedido1 := i.id;
    
    elsif contador = 2 then
      v_cedido2 := i.id;
    
    elsif contador = 3 then
      v_cedido3 := i.id;
    
    elsif contador = 4 then
      v_cedido4 := i.id;
    
    elsif contador = 5 then
      v_cedido5 := i.id;
    
    else
      v_cedido6 := i.id;
    
    end if;
  
    Case
      when v_cedido1 is not null then
        v_flag_cedido := 'S';
      Else
        v_flag_cedido := 'N';
    End case;

/*----------------------------------------------------------------------------
  Faz o update dos códigos para cada funcionário cedido encontrado dos campos FKs
 e a Flag_Cedido da tabela Fat_Recursos_Humanos
------------------------------------------------------------------------------*/  

    update fat_recursos_humanos fatt
       set flag_cedido          = v_flag_cedido,
           fatt.dti_ced_emp1_id = nvl(v_cedido1, 0),
           fatt.dti_ced_emp2_id = nvl(v_cedido2, 0),
           fatt.dti_ced_emp3_id = nvl(v_cedido3, 0),
           fatt.dti_ced_emp4_id = nvl(v_cedido4, 0),
           fatt.dti_ced_emp5_id = nvl(v_cedido5, 0),
           fatt.dti_ced_emp6_id = nvl(v_cedido6, 0)
     where fatt.dpro_id = v_prof_ant
       and substr(to_char(fatt.dt_id), 1, 4) = p_ano
       and fatt.dt_id >= to_char(i.dt_ini_vig, 'yyyymm')
       and substr(to_char(fatt.dt_id), 5, 2) <= p_mes
       and fatt.dtpmov_id = 5;
  
    commit;
  
    contador := contador + 1;
  
  end loop;

Exception

  When Others Then
    Pla_Gera_Log_Bi_Prc(p_Erro_Sql   => Sqlerrm,
                        p_Msg        => 'Erro inesperado',
                        p_Tab        => 'FAT_REC_HUMAN_PRC',
                        p_Ctb_Pre_Id => 0,
                        p_Tipo       => 'INSERIR');
  
End Atualiza_Cedidos_prc;




----- Identifica cadastro de empresa com vlr diferente de nivel salarial das demais empresas a partir de out/17

select nome,dc.emp_cod,
      dc.cod,
      max(dns.dt_ini_vig) dns_dt_ini_vig
from dda_rh.cargos            dc,
      dda_rh.tabelas_salariais dts,
      dda_rh.faixas_salariais  dfs,
      dda_rh.reg_regioes       dr1,
      dda_rh.niveis_salariais  dns
where dc.fxsl_tsal_cod = dts.cod
  and dc.fxsl_tsal_cod =
      dfs.tsal_cod
  and dc.fxsl_cod = dfs.cod
  and dc.fxsl_tsal_cod =
      dr1.fxsl_tsal_cod
  and dr1.fxsl_cod = dc.fxsl_cod
  and dc.fxsl_cod =
      dns.rere_fxsl_cod
  and dc.fxsl_tsal_cod =
      dns.rere_fxsl_tsal_cod
  and dc.emp_cod = tsal_emp_cod
  and dc.emp_cod = dts.emp_cod
  and dfs.tsal_cod = dts.cod
  and dts.emp_cod =
      dfs.Tsal_Emp_Cod
  and dfs.Tsal_Emp_Cod =
      dns.rere_fxsl_tsal_emp_cod
  and dr1.fxsl_tsal_emp_cod =
      dns.rere_fxsl_tsal_emp_cod
  and dts.cod in (30, 31, 32, 33)
  and dns.cod in ('5', '2B')
  and '31/01/2018' >=
      dns.dt_ini_vig
  and dc.cod = 9515
--  and dc.emp_cod = 2
group by nome, dc.cod, dc.emp_cod


-- grant sql dinamico

select 'grant select on ' ||OBJECT_NAME||' to ODI_DDABI_EXEC with grant option; 'FROM USER_OBJECTS WHERE OBJECT_TYPE = 'SEQUENCE' AND OBJECT_NAME LIKE 'ODS_%';

--delete dinamico

select 'delete from '||table_name||' where sistema_origem = ''SGE'';'  from user_tables where table_name like 'DIM%'

-- GRANT ROLE ODI_DDABI_EXEC
select * from dba_sys_privs where grantee = 'ODI_DDABI_EXEC'

grant select, insert, update, delete on ODS_STURNO to BI_ODI_EXEC ; 



--select dinamico EDA Oracle all_tab_columns

SELECT * FROM all_tab_columns
WHERE owner = 'RM' AND table_name = 'PFUNC'


SELECT column_name, data_type, data_length, data_precision,  data_scale, nullable,num_distinct, low_value, high_value, density,num_nulls
FROM all_tab_columns
WHERE owner = 'RM' AND table_name = 'PFUNC'
ORDER BY 2

SELECT 'select distinct '||column_name||' from '||table_name FROM all_tab_columns
WHERE owner = 'RM' AND table_name = 'PFUNCAO'

SELECT column_name, data_type, data_length, data_precision,  data_scale, nullable,num_distinct, low_value, high_value, density,num_nulls
FROM all_tab_columns
WHERE owner = 'RM' AND table_name = 'PFUNCAO'
ORDER BY 2
Select count(1) from PFUNCAO
Select distinct * from PFUNCAO





----------- codigo para procurar conteudo dentro de tabelas oracle
            
declare
  v_old_table user_tab_columns.table_name%type;
  v_where     Varchar2(4000);
  v_first_col boolean := true;
  type rc     is ref cursor;
  c           rc;
  v_rowid     varchar2(20);

begin
  for r in (
    select
      t.*
    from
      user_tab_cols t, user_all_tables a
    where t.table_name = a.table_name
      and t.data_type like '%CHAR%'
    order by t.table_name) loop
 
    if v_old_table is null then
      v_old_table := r.table_name;
    end if;
 
    if v_old_table <> r.table_name then
      v_first_col := true;
 
      -- dbms_output.put_line('searching ' || v_old_table);
 
      open c for 'select rowid from "' || v_old_table || '" ' || v_where;
 
      fetch c into v_rowid;
      loop
        exit when c%notfound;
        dbms_output.put_line('  rowid: ' || v_rowid || ' in ' || v_old_table);
        fetch c into v_rowid;
      end loop;
 
      v_old_table := r.table_name;
    end if;
 
    if v_first_col then
      v_where := ' where ' || r.column_name || ' like ''%' || 'Docente' || '%''';
      v_first_col := false;
    else
      v_where := v_where || ' or ' || r.column_name || ' like ''%' || 'Docente' || '%''';
    end if;
 
  end loop;
  --return 'Success';
end;
/





-----------------------------------------------------------------

-- function funcao com tabela como parametro

create or replace function busca_linhas_fnc 
(
  p_tabela in varchar2 
) return number as 
p_linhas number;
begin
execute immediate 'select count(*)from '||p_tabela into p_linhas;
return p_linhas;
end busca_linhas_fnc;


-- tratamento XML

declare
  my_var   long;
  my_var2  long;
  my_var3 long;
  my_var4 long;
begin
  for i in (select dbms_lob.SUBSTR(xml_retorno_lote, 2000, 1) teste from dda_rh.ubi_lotes_esocial) loop
    my_var := i.teste;
    insert into testexml(teste) values (my_var);
    for j in (select dbms_lob.SUBSTR(xml_retorno_lote, 2000, 2000) teste2
                from dda_rh.ubi_lotes_esocial) loop
      my_var2 := j.teste2;
      for k in (select dbms_lob.SUBSTR(xml_retorno_lote, 2000, 4000) teste3
                  from dda_rh.ubi_lotes_esocial) loop
        my_var3 := k.teste3;
        my_var4 := my_var||my_var2||my_var3;
      
        
        insert into testexml(teste3) values (my_var4);        
        dbms_output.put_line(substr(my_var,10));
      end loop;
    end loop;
  end loop;
end;

-- ACHAR LINKS DAS APLICACOES WEB INCLUINDO SIS
select * from aplicacoes_web 
where sigla = 'SIS'


-- chamada procedure ODI



1. criar a procedure e parametros no banco
2. criar a procedure com mesmo nome no odi
3. criar as variaveis no odi para passar os parametros
4. fazer a chamada da procedure na origem ou no destino, nao esquecer de colocar o # na frente das variaveis
BEGIN
<%=odiRef.getSchemaName("ORACLE_DBDES_DDA_BI", "DESENVOLVIMENTO", "D")%>.BI_DELETE_PLA_EDUC_PRC(
                        p_tabela        => #V_TABELA,
                        p_coluna        => #V_COLUNA,
                        p_valor         => #V_VALOR);
     Commit;
END;
5. chamar dentro de uma package passando os valores para as variaveis
6. verificar se precisa criar as opções para usar com as variaveis ou nao


--criacao de dims com scd no ODI
---ods
criar tabela ods com campos dt_ini_vig, dt_fim_vif e flag_atual
importar para o odi
criar seuqnece para a ods
alterar tabela importada para scd, cuidando para setar corretamente os campos de chave natural (chaves da origem e destino, importante pq o odi ira usa-las nos joins para a criacao das c$ e i$), substituta, datas, flag
e quais campos serao alterados ou adiciondo nova linha
criar mapeamento da origem para o destino 
setar sysdate para as data_ini_vig e dt_fim_vig e 1 para flag_atual
na aba logica do mapeamento setar a tabela em alvo para dimensao que muda lentamente
alterar executar na dica para orgem

-- dim

criar a dimensao no banco, cuidar para levar as chaves que serao a chave natural para ligar com a origem ou ods posteriormente
criar com os campos dt_ini_vig, dt_fim_vif e flag_atual
importar tabela no odi
alterar tabela importada para scd, cuidando para setar corretamente os campos de chave natural (chaves da origem e destino, importante pq o odi ira usa-las nos joins para a criacao das c$ e i$), substituta, datas, flag
criar mapeamento da origem para o destino 
usar filtro ou no join para buscar somente os dados de origem setados como flag-atual = 1 para evitar duplicar registros no subselect da c$
na aba logica do mapeamento setar a tabela em alvo para dimensao que muda lentamente
colocar a sequence no campo chave substituta
setar sysdate para as data_ini_vig e dt_fim_vig e 1 para flag_atual
na camada fisica 

-- para resolver o problema de tipo de dados dos bancos anteriores a 12c (varchar) pode-se criar um tipo de dado novo
-- https://www.rittmanmead.com/blog/2014/04/ditips-odi12c-char-or-byte/

-- se a tabela nao tem PK nada impede de ter linhas repetidas mesmo com todos os campos iguais
-- para consultas que retornam mais registros tem que verificar o campo que esta repetido e ligar no join
-- para consultas que retornam menos linhas existe alguma restrição de inner join ou falta left ou right join


-- estrutura curso -> matricula
-- traz somente os cursos EJA
select * from
rm.smatricpl sma left join rm.shabilitacaoaluno sha
on sma.codcoligada = sha.codcoligada
and sma.idhabilitacaofilial = sha.idhabilitacaofilial
and sma.ra = sha.ra
left join rm.shabilitacaofilial shf
on sha.codcoligada = shf.codcoligada
and sha.idhabilitacaofilial = shf.idhabilitacaofilial
left join rm.sgrade sgr
on shf.codcoligada = sgr.codcoligada
and shf.codcurso = sgr.codcurso
and shf.codhabilitacao = sgr.codhabilitacao
and shf.codgrade = sgr.codgrade
left join rm.shabilitacao shb
on shb.codcoligada = sgr.codcoligada
and shb.codcurso = sgr.codcurso
and shb.codhabilitacao = sgr.codhabilitacao
left join rm.scurso scu
on scu.codcoligada = shb.codcoligada
and scu.codcurso = shb.codcurso
where scu.codcurso IN ('NOVA EJA', 'EJA-PRO', 'EJA EM', 'EJA EF II')




-----------

SELECT  
       PEMCU.NOME                 PEMCU_NOME
      ,PEMPL.NOME                 PEMPL_NOME
      ,PEMDI.NOME                 PEMDI_NOME
      ,PEMCU.SEXO                 PEMCU_SEXO
      ,PEMCU.DTNASCIMENTO         PEMCU_DTNASC
      ,PEMCU.RUA||'-'||PEMCU.NUMERO||'-'||PEMCU.COMPLEMENTO||'-'||PEMCU.BAIRRO||'-'||PEMCU.CIDADE PEMCU_ENDERECO
      ,PEMCU.CEP
      ,PEMCU.NATURALIZADO
      ,PEMCU.NROFILHOSBRASIL
      ,PCOR.DESCRICAO             PCOR_DESCRICAO
      ,CASE WHEN PEMCU.DEFICIENTEINTELECTUAL <> 0 THEN 'S'
            WHEN PEMCU.DEFICIENTEMOBREDUZIDA <> 0 THEN 'S'
            WHEN PEMCU.DEFICIENTEAUDITIVO    <> 0 THEN 'S'
            WHEN PEMCU.DEFICIENTEFALA        <> 0 THEN 'S'
            WHEN PEMCU.DEFICIENTEVISUAL      <> 0 THEN 'S'
            WHEN PEMCU.DEFICIENTEMENTAL      <> 0 THEN 'S' 
            ELSE 'N'
        END                       PEMCU_DEFICIENCIA
      ,PEMCU.GRAUINSTRUCAO
      ,PEMCU.CODPROFISSAO
      ,STP.NOME                   STP_NOME
      ,STP.APRESENTACAO           STP_APRESENTACAO
      ,STI.DESCRICAO              STI_DESCRICAO
      ,ALMCU.CODINSTORIGEM        ALMCU_INSTORIGEM
      ,HF.CODCOLIGADA             HF_CODCOLIGADA
      ,GFIL.CODFILIAL             GFIL_CODFILIAL
      ,GFIL.NOMEFANTASIA          GFIL_NOMEFANTASIA
      ,HF.CODTURNO                HF_CODTURNO
      ,HF.CODCURSO                HF_CODCURSO
      ,HF.CODHABILITACAO          HF_CODHABILITACAO
      ,HH.NOME                    HH_NOME
      ,HF.CODGRADE                HF_CODGRADE
      ,HA.RA                      HA_RA
      ,NVL(HA.CODSTATUS,0)        HA_CODSTATUS
      ,HA.DTINGRESSO              HA_DTINGRESSO
      ,HA.RECMODIFIEDON           HA_RECMODIFIEDON
      ,MP.IDPERLET                MP_IDPERLET
      ,MP.RA                      MP_RA
      ,MP.CODTURMA                MP_CODTURMA
      ,NVL(MP.CODSTATUSRES,0)     MP_CODSTATUSRES
      ,NVL(MP.CODSTATUS,0)        MP_CODSTATUS
      ,MP.DTMATRICULA             MP_DTMATRICULA
      ,MP.DTRESULTADO             MP_DTRESULTADO
      ,MP.DTSOLICITACAOALTERACAO  MP_DTSOLICITACAOALTERACAO
      ,MP.DTMATRICULAENCERRA      MP_DTMATRICULAENCERRA
      ,MP.RECMODIFIEDON           MP_RECMODIFIEDON 
      ,MA.IDTURMADISC             MA_IDTURMADISC
      ,STM.DESCRICAO              STM_TIPOMATRICULA
      ,MA.RA                      MA_RA
      ,NVL(MA.CODSTATUS,0)        MA_CODSTATUS
      ,NVL(MA.CODSTATUSRES,0)     MA_CODSTATUSRES
      ,MA.DTMATRICULA             MA_DTMATRICULA
      ,MA.DTALTERACAO             MA_DTALTERACAO 
      ,MA.DTALTERACAOSIST         MA_DTALTERACAOSIST
      ,MA.RECMODIFIEDON           MA_RECMODIFIEDON 
      ,MA.OBSHISTORICO            MA_OBSHISTORICO
      ,MA.TIPOMAT                 MA_TIPOMAT
      ,MA.TIPODISCIPLINA          MA_TIPODISCIPLINA
      ,MA.IDPERLET                MA_IDPERLET  
      ,PEMCU.DTNASCIMENTO         PEMCU_DTNASCIMENTO
      ,PEMPL.DTNASCIMENTO         PEMPL_DTNASCIMENTO                  
      ,PEMDI.DTNASCIMENTO         PEMDI_DTNASCIMENTO  
      ,NVL2(PEMCU.CPF,SUBSTR(PEMCU.CPF,1,9)||'/'||SUBSTR(PEMCU.CPF,-2,2),0)        PEMCU_CPF                  
      ,NVL2(PEMPL.CPF,SUBSTR(PEMPL.CPF,1,9)||'/'||SUBSTR(PEMPL.CPF,-2,2),0)        PEMPL_CPF                  
      ,NVL2(PEMDI.CPF,SUBSTR(PEMDI.CPF,1,9)||'/'||SUBSTR(PEMDI.CPF,-2,2),0)        PEMDI_CPF
      ,Td.coddisc                 TD_coddisc
      ,TD.CODTURMA                TD_CODTURMA   
      ,TD.IDTURMADISC             TD_IDTURMADISC 
      ,PE.CODPERIODO              PE_CODPERIODO 
      ,GR.CODGRADE                GR_CODGRADE
      ,HH.CODHABILITACAO          HH_CODHABILITACAO
      ,CUR.CODCURSO                CUR_CODCURSO 
      ,TUR.NOME                   TUR_NOME
      ,dI.nome                    DI_NOME
      ,dI.ch                      DI_CH
      ,nvl(dI.coddisc,0)          DI_CODDISC
      ,CUR.codcoligada             CUR_codCOLIGADA 
      ,TU.CODCCUSTO TU_CODCCUSTO
      ,TU.IDITEMCONTABILPROTHEUS TU_IDITEMCONTABILPROTHEUS
      ,TU.DTINICIAL TU_DTINICIAL 
      ,TU.DTFINAL TU_DTFINAL 
      ,HF.CODCCUSTO HF_CODCCUSTO
      ,(SELECT IDITEMCONTABILPROTHEUS FROM rm.SHABILITACAOFILIALINTPROTHEUS HFP 
         WHERE HFP.CODCOLIGADA = HF.CODCOLIGADA AND HFP.IDHABILITACAOFILIAL=HF.IDHABILITACAOFILIAL) HFIP_IDITEMCONTABILPROTHEUS
      ,(SELECT DESCRICAO FROM rm.SMOTIVOALTMAT MAM WHERE MAM.CODCOLIGADA=GFIL.CODCOLIGADA AND MAM.CODMOTIVO=HA.CODMOTIVOTRANSFERENCIA) MOTIVO_TRANSF_HA
      ,(SELECT DESCRICAO FROM rm.SMOTIVOALTMAT MAM WHERE MAM.CODCOLIGADA=GFIL.CODCOLIGADA AND MAM.CODMOTIVO=MP.CODMOTIVOTRANSFERENCIA) MOTIVO_TRANSF_PL
      ,(SELECT DESCRICAO FROM rm.STIPOMATRICULA STM WHERE STM.CODCOLIGADA=GFIL.CODCOLIGADA AND STM.CODTIPOMAT=MP.CODTIPOMAT) TIPO_MATRICULA
      ,MP.CODTIPOMAT
      ,NVL(GR.CARGAHORARIA,0)     GR_CARGAHORARIA 
      ,NVL(GC.CHDISTANCIA,0)      GC_CHDISTANCIA
      ,NVL(GC.CHPRESENCIAL,0)     GC_CHPRESENCIAL 
      ,MPC.BAIXARENDA      MPC_BAIXARENDA   
      ,MPC.EMPRESA         MPC_EMPRESA  
      ,MPC.EBEP            MPC_EBEP
      ,MPC.CURSOEBEP       MPC_CURSOEBEP
      ,MPC.GRATUIDADE      MPC_GRATUIDADE
      ,MPC.TIPOGRAT        MPC_TIPOGRAT
      ,MPC.CONDICAOALU     MPC_CONDICAOALU
      ,HAC.TIPOGRATCUR     HAC_TIPOGRATCUR 
      
 FROM    rm.SHABILITACAOFILIAL  HF
LEFT JOIN rm.SHABILITACAOALUNO  HA 
  ON   HF.CODCOLIGADA               = HA.CODCOLIGADA
 AND   HF.IDHABILITACAOFILIAL       = HA.IDHABILITACAOFILIAL
LEFT JOIN rm.SMATRICPL          MP
  ON   HA.CODCOLIGADA               = MP.CODCOLIGADA
 AND   HA.IDHABILITACAOFILIAL       = MP.IDHABILITACAOFILIAL
 AND   HA.RA                        = MP.RA
 
LEFT JOIN rm.SMATRICULA         MA
  ON   MP.CODCOLIGADA               = MA.CODCOLIGADA
 AND   MP.IDPERLET                  = MA.IDPERLET
 AND   MP.IDHABILITACAOFILIAL       = MA.IDHABILITACAOFILIAL
 AND   MP.RA                        = MA.RA

LEFT JOIN rm.STIPOMATRICULA  STM
  ON  STM.CODCOLIGADA = MA.CODCOLIGADA
  AND STM.CODTIPOMAT = MA.TIPOMAT
  AND STM.CODCOLIGADA = MP.CODCOLIGADA
  AND STM.CODTIPOMAT = MP.CODTIPOMAT
 
LEFT JOIN rm.SALUNO             ALMCU -- HABILI ALUNO
  ON    ALMCU.CODCOLIGADA         = HA.CODCOLIGADA
 AND    ALMCU.RA                  = HA.RA
LEFT JOIN rm.SALUNO             ALMPL --MATRICPL
  ON  ALMPL.CODCOLIGADA         = MP.CODCOLIGADA
AND    ALMPL.RA                  = MP.RA
LEFT JOIN rm.SALUNO             ALMDI -- MATRICULA
  ON    ALMDI.CODCOLIGADA         = MA.CODCOLIGADA
AND    ALMDI.RA                  = MA.RA
LEFT JOIN rm.PPESSOA            PEMCU
  ON   PEMCU.CODIGO              = ALMCU.CODPESSOA
LEFT JOIN rm.PPESSOA            PEMPL
  ON   PEMPL.CODIGO              = ALMPL.CODPESSOA
LEFT JOIN rm.PPESSOA            PEMDI
  ON   PEMDI.CODIGO              = ALMDI.CODPESSOA
LEFT JOIN rm.PCORRACA           PCOR
  ON   PEMCU.CORRACA             = PCOR.CODINTERNO

LEFT JOIN rm.GFILIAL            GFIL
  ON   HF.CODFILIAL                 = GFIL.CODFILIAL
AND    HF.CODCOLIGADA               = GFIL.CODCOLIGADA
LEFT JOIN rm.STURMADISC           TD 
  ON   TD.CODCOLIGADA = HF.CODCOLIGADA 
  AND  TD.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL 
  AND  TD.CODCOLIGADA = MA.CODCOLIGADA 
  AND  TD.IDTURMADISC = MA.IDTURMADISC
LEFT JOIN rm.STURMA               TU 
  ON  TU.CODCOLIGADA = TD.CODCOLIGADA
 AND  TU.CODTURMA = TD.CODTURMA
 AND  TU.IDPERLET = TD.IDPERLET
 AND  TU.CODCOLIGADA = HF.CODCOLIGADA
 AND  TU.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL  
LEFT JOIN rm.STURNO               TUR
  ON  TUR.CODCOLIGADA = TD.CODCOLIGADA
 AND  TUR.CODTURNO = TD.CODTURNO
 AND  TUR.CODCOLIGADA = HF.CODCOLIGADA
 AND  TUR.CODTURNO = HF.CODTURNO
LEFT JOIN rm.SDISCIPLINA          DI   
  ON  DI.CODCOLIGADA = TD.CODCOLIGADA
 AND  DI.CODDISC = TD.CODDISC
LEFT JOIN rm.SDISCGRADE           DG
  ON  DG.CODCOLIGADA = DI.CODCOLIGADA
 AND  DG.CODDISC = DI.CODDISC
 AND  DG.CODCURSO = HF.CODCURSO
 AND  DG.CODHABILITACAO = HF.CODHABILITACAO
 AND  DG.CODGRADE = HF.CODGRADE
LEFT JOIN rm.SPERIODO             PE   
  ON  PE.CODCOLIGADA = DG.CODCOLIGADA
 AND  PE.CODCURSO = DG.CODCURSO
 AND  PE.CODHABILITACAO = DG.CODHABILITACAO
 AND  PE.CODGRADE = DG.CODGRADE
 AND  PE.CODPERIODO = DG.CODPERIODO
LEFT JOIN rm.SGRADE                GR 
  ON (TD.CODTURMA IS NOT NULL 
 AND  GR.CODCOLIGADA = PE.CODCOLIGADA
 AND  GR.CODCURSO = PE.CODCURSO
 AND  GR.CODHABILITACAO = PE.CODHABILITACAO
 AND  GR.CODGRADE = PE.CODGRADE 
 and  GR.CODCOLIGADA = HF.CODCOLIGADA
 AND  GR.CODCURSO = HF.CODCURSO
 AND  GR.CODHABILITACAO = HF.CODHABILITACAO
 AND  GR.CODGRADE = HF.CODGRADE)
  OR (TD.CODTURMA IS NULL 
 and  GR.CODCOLIGADA = HF.CODCOLIGADA
 AND  GR.CODCURSO = HF.CODCURSO
 AND  GR.CODHABILITACAO = HF.CODHABILITACAO
 AND  GR.CODGRADE = HF.CODGRADE)
LEFT JOIN rm.SHABILITACAO         HH
  ON   HH.CODCOLIGADA               = GR.CODCOLIGADA
AND    HH.CODCURSO                  = GR.CODCURSO
AND    HH.CODHABILITACAO            = GR.CODHABILITACAO
LEFT JOIN rm.SCURSO              CUR
  ON   CUR.CODCOLIGADA               = GR.CODCOLIGADA
AND    CUR.CODCURSO                  = GR.CODCURSO

LEFT JOIN rm.STIPOCURSO          STP
  ON  CUR.CODCOLIGADA                 = STP.CODCOLIGADA
  AND CUR.CODTIPOCURSO                = STP.CODTIPOCURSO
  AND ALMCU.CODCOLIGADA               = STP.CODCOLIGADA
  AND ALMCU.CODTIPOCURSO              = STP.CODTIPOCURSO
  AND ALMPL.CODCOLIGADA               = STP.CODCOLIGADA
  AND ALMPL.CODTIPOCURSO              = STP.CODTIPOCURSO
  AND ALMDI.CODCOLIGADA               = STP.CODCOLIGADA
  AND ALMDI.CODTIPOCURSO              = STP.CODTIPOCURSO

LEFT JOIN rm.STIPOINGRESSO       STI
  ON  STI.CODCOLIGADA                 = STP.CODCOLIGADA
  AND STI.CODTIPOCURSO                = STP.CODTIPOCURSO
  AND HA.CODCOLIGADA                  = STI.CODCOLIGADA
  AND HA.CODTIPOINGRESSO              = STI.CODTIPOINGRESSO
 

LEFT JOIN rm.SDISCGRADECOMPL         GC 
 ON    GC.CODCOLIGADA = DG.CODCOLIGADA
AND    GC.CODCURSO = DG.CODCURSO
AND    GC.CODHABILITACAO = DG.CODHABILITACAO
AND    GC.CODGRADE = DG.CODGRADE
AND    GC.CODPERIODO = DG.CODPERIODO
AND    GC.CODDISC = DG.CODDISC
LEFT JOIN rm.SMATRICPLCOMPL MPC
 ON    MPC.CODCOLIGADA = MP.CODCOLIGADA
AND    MPC.IDPERLET = MP.IDPERLET
AND    MPC.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    MPC.RA = MP.RA
LEFT JOIN rm.SHABILITACAOALUNOCOMPL HAC
 ON    HAC.CODCOLIGADA = HA.CODCOLIGADA
AND    HAC.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL
AND    HAC.RA = HA.RA


-- EDUCACAO SGE

-- tantativa buscar dados financeiros de filiais, polos e sedes e professores

SELECT */*F.ID_ESB*/  FROM FAT_FINANCEIRO F , DIM_CENTROS_RESP CR
WHERE ID_ESB > 0       -- ID DA INTEGRACAO COM PROTHEUS, SE TIVER NO SGE LIGA POR ELE PARA PEGAR FINANCEIRO
AND   F.DCR_ID = CR.ID 
AND CR.CODIGO_2 = 302  -- EDUCACAO
--AND DT_ID = 201804   -- ACHA REGISTROS DE MATRICULAS DO SGE


SELECT * FROM DIM_CENTROS_RESP 
WHERE CODIGO_2 = 302 -- educacao

-- script create sequence
select 'create sequence '||sequence_owner||'.'||sequence_name||' minvalue '||min_value||' maxvalue '||max_value||' increment by '||increment_by||' start with '||last_number||' nocycle nocache ;' from all_sequences where sequence_owner = 'DDA_BI' and sequence_name like 'ODS%'

-- produtividade sede-polo

select distinct shf.codfilial, case when sma.codcoligada = 2 then shf.codccusto 
                                    when sma.codcoligada = 4 then stu.codccusto
                                    else '0' end codccusto, count(dtmatricula)--gfi.nomefantasia--shf.codccusto cc_mat_apl, gfi.nomefantasia nomefilial, stu.codturma, stu.codccusto cc_turma, sha.cr, spr.codfilial filial_predio, spr.nome predio
from rm.smatricpl sma left join rm.sturma stu
on sma.codcoligada = stu.codcoligada
and sma.codturma = stu.codturma
left join rm.shabilitacaoaluno sha
on sma.codcoligada = sha.codcoligada
and sma.idhabilitacaofilial = sha.idhabilitacaofilial
and sma.ra = sha.ra
left join rm.shabilitacaofilial shf 
on sha.codcoligada = shf.codcoligada
and sha.idhabilitacaofilial = shf.idhabilitacaofilial
left join rm.sfilial sfi
on shf.codcoligada = sfi.codcoligada
and shf.codfilial = sfi.codfilial
left join rm.gfilial gfi
on gfi.codcoligada = sfi.codcoligada
and gfi.codfilial = sfi.codfilial
left join rm.spredio spr
on spr.codcoligada = sfi.codcoligada
and spr.codfilial = sfi.codfilial
where sma.codcoligada = 2
and shf.codfilial = 10073
group by shf.codfilial, case when sma.codcoligada = 2 then shf.codccusto 
                                    when sma.codcoligada = 4 then stu.codccusto
                                    else '0' end --shf.codccusto



-- produtividade professor - em andamento

select  shf.codfilial, shf.codccusto cc_habfilial, std.codccusto cc_turmdisc, dtmatricula, spt.codprof ---gfi.nomefantasia--shf.codccusto cc_mat_apl, gfi.nomefantasia nomefilial, stu.codturma, stu.codccusto cc_turma, sha.cr, spr.codfilial filial_predio, spr.nome predio
from rm.smatricpl sma left join rm.sturma stu
on sma.codcoligada = stu.codcoligada
and sma.codturma = stu.codturma
left join rm.shabilitacaoaluno sha
on sma.codcoligada = sha.codcoligada
and sma.idhabilitacaofilial = sha.idhabilitacaofilial
and sma.ra = sha.ra
left join rm.shabilitacaofilial shf 
on sha.codcoligada = shf.codcoligada
and sha.idhabilitacaofilial = shf.idhabilitacaofilial
left join rm.sfilial sfi
on shf.codcoligada = sfi.codcoligada
and shf.codfilial = sfi.codfilial
left join rm.gfilial gfi
on gfi.codcoligada = sfi.codcoligada
and gfi.codfilial = sfi.codfilial
left join rm.spredio spr
on spr.codcoligada = sfi.codcoligada
and spr.codfilial = sfi.codfilial
left join rm.sturmadisc std
on std.codcoligada = stu.codcoligada
and std.codturma = stu.codturma
and std.codfilial = stu.codfilial
and std.idperlet = stu.idperlet
left join rm.sprofessorturma spt
on spt.codcoligada = std.codcoligada
and spt.idturmadisc = std.idturmadisc
left join rm.sprofessor spro
on spt.codcoligada = spro.codcoligada
and spt.codprof = spro.codprof
where sma.codcoligada = 2
and shf.codfilial = 10073 
and spro.codprof in ('850','387','311')

select * from rm.sprofessorturma spt join rm.sprofessor spro
on spt.codcoligada = spro.codcoligada
and spt.codprof = spro.codprof
where spro.codprof in ('850','387','311')



--identificacao das filiais, predios, etc
select  shf.codfilial, gfi.nome, shf.codccusto cc_habfilial, std.codccusto cc_turmdisc, dtmatricula, spt.codprof,shf.codccusto cc_mat_apl, gfi.nomefantasia nomefilial, stu.codturma, stu.codccusto cc_turma, sha.cr, spr.codfilial filial_predio, spr.nome predio
from rm.smatricpl sma left join rm.sturma stu
on sma.codcoligada = stu.codcoligada
and sma.codturma = stu.codturma
left join rm.shabilitacaoaluno sha
on sma.codcoligada = sha.codcoligada
and sma.idhabilitacaofilial = sha.idhabilitacaofilial
and sma.ra = sha.ra
left join rm.shabilitacaofilial shf 
on sha.codcoligada = shf.codcoligada
and sha.idhabilitacaofilial = shf.idhabilitacaofilial
left join rm.sfilial sfi
on shf.codcoligada = sfi.codcoligada
and shf.codfilial = sfi.codfilial
left join rm.gfilial gfi
on gfi.codcoligada = sfi.codcoligada
and gfi.codfilial = sfi.codfilial
left join rm.spredio spr
on spr.codcoligada = sfi.codcoligada
and spr.codfilial = sfi.codfilial
left join rm.sturmadisc std
on std.codcoligada = stu.codcoligada
and std.codturma = stu.codturma
and std.codfilial = stu.codfilial
and std.idperlet = stu.idperlet
left join rm.sprofessorturma spt
on spt.codcoligada = std.codcoligada
and spt.idturmadisc = std.idturmadisc
left join rm.sprofessor spro
on spt.codcoligada = spro.codcoligada
and spt.codprof = spro.codprof
and shf.codfilial = 10073 
--and spro.codprof in ('850','387','311')

select * from rm.sregiao
--select * from sfilial where codfilial = 10073


select duo.descricao_3, duo.descricao, duo.codigo,count(realizado_matricula) from dda_bidw.fat_educacao fat, dda_bidw.dim_unidades_org duo
where fat.duorg_id = duo.id
and duo.codigo in (23032001001500,00000023032004001500)
and dt_id in (201802,201803,201804)
group by duo.descricao_3,duo.descricao, duo.codigo 

-- possivel caminho para garantir o que é sede e polo pela UO
-- problema, no sge posso ter mais de uma sede para o mesmo cnpj e aqui tb posso ter dois nomes vinculados ao mesmo cnpj
-- nao tenho vinculo forte entr
select dda_bi.bi_util_pck.bi_consultauouo(cc.codigo,cc.emp_emp_id) uo , cc.*
from  ctb_unidades_org_vw cc 
where cc.ano = 2018
and cc.emp_emp_id = 2 
and cc.pes_id1 = 3775159
and cc.pes_id2 = 154
and cc.pes_id3 = 40


select duo.descricao, duo.codigo,count(realizado_matricula) from fat_educacao fat, dim_unidades_org duo
where fat.duorg_id = duo.id
and duo.codigo in (23032001001500,00000023032004001500)
and dt_id in (201802,201803,201804)
group by duo.descricao, duo.codigo -- falta colocar filial


-- polo e sede já funcionando no BI

select fil.descricao, nvl(polo.descricao, uo.descricao), polo.descricao, fat.polo_sede, fat.flag_mobilidade, fat.polo_mobilidade, tur.sigla_turma, sum(realizado_matricula) 
from  fat_educacao fat, dim_filiais_sge fil, dim_unidades_org uo, dim_unidades_org polo, dim_turmas tur
where fat.dfilsge_id = fil.id_filial
and   fat.duorg_id = uo.id
and   fat.dturm_id = tur.id
and fil.descricao like '%Novo%'
and fat.polo_mobilidade = polo.id(+)
group by fil.descricao, fat.polo_sede, fat.flag_mobilidade, polo.descricao, uo.descricao, fat.polo_mobilidade,tur.sigla_turma



-- localizar UO e CR

select * from dim_unidades_org where codigo in (23032004001500,23032001001500)
select * from dim_profissionais where nome like '%MACHADO%'


begin
    bi_util_pck.bi_carga_memoria_prc('DADOS_PROF','ANF-ERP',
                                                  'ANF-ERP',
                                              'ERP-ERP',2018,1);
end;


select  dda_bi.bi_util_pck.bi_consultauopro(0000) from dual;

select * from dim_unidades_org where id = 423020305005001--323020305005001


-- verificar contagem dos totais de matricula para ver se considera os valores todos os meses, caso nao tenha tido mobilidade.
select *--demp_id,dt_id,dalu_id,dsial_id,dim_situacao_aluno.descricao,dturm_id, realizado_matricula 
from fat_educacao , dim_situacao_aluno 
where fat_educacao.dsial_id = dim_situacao_aluno.id
and /*fat_educacao.sistema_origem = 'SGE' and*/ fat_educacao.dalu_id=50001605875--dsial_id = 2062
and dalu_id <> 0
order by dalu_id,dt_id, dturm_id

select dalu_id, count(dsial_id)from fat_educacao  where dsial_id <> 0
group by dalu_id
having count(dsial_id)=1


-- busca dados de pai e mae do aluno

select sum(tot) from (
select ra, count(*)tot from(
select ppp.codigo, ppp.nome,--sal.ra, --sal. 
      -- sal.codpessoa, 
       aluno.codigo, aluno.nome, sal.ra, aluno.codpessoamae
from   (select pp.codigo, nome, codpessoamae 
                               from dda_bi.ods_ppessoa pp, dda_bi.ods_spessoa sp
                               where pp.codigo = sp.codigo(+)
                               and pp.flag_atual = 1
                               and sp.flag_atual = 1
                              -- and pp.codigo = 324
                               )aluno, dda_bi.ods_saluno sal, dda_bi.ods_ppessoa ppp
where aluno.codigo = sal.codpessoa 
and   sal.flag_atual = 1
and   ppp.codigo(+) = aluno.codpessoamae 
and   ppp.flag_atual(+) = 1

)group by ra
)

select * 
from 

(select sp.codpessoamae, pp.codigo from dda_bi.ods_ppessoa pp, dda_bi.ods_spessoa sp
where pp.codigo = sp.codigo
and pp.flag_atual = 1
and sp.flag_atual = 1)resp,

dda_bi.ods_ppessoa opp, dda_bi.ods_saluno osa
where resp.codpessoamae = opp.codigo
and opp.flag_atual = 1
and osa.flag_atual = 1
and osa.codpessoa = resp.codigo
and resp.CODIGO = 13668


        -- (1-Presencial, 2-Móvel, 3-A distância) --UTILIZAR A FLAG "EAD" da tela de curso      --(Select  Decode(Curs.Ead, 'N', '1', 'S', '2')-- || ' - ' || curs.codigo_sae
              From   Sis_Cursos         Curs
                    ,Sis_Cursos_Modulos Curm
              Where  Curm.Curs_Id = Curs.Id
              And    Curm.Curs_Unid_Id = Curs.Unid_Id
              And    Curm.Curs_Unid_Gps_Codigo = Curs.Unid_Gps_Codigo
              And    Curm.Id = scpr.curm_id
              And    Curm.Unid_Id = scpr.curm_unid_id
              And    Curm.Unid_Gps_Codigo = scpr.curm_unid_gps_codigo
             ) Curs_EAD
     
     
     
     
     
     Select nvl(curs.id, 0) Curf_id,
             nvl(curs.unid_id, 0) Curf_unid_id,
             nvl(curs.unid_gps_codigo, 0) Curf_unid_gps_codigo,
             nvl(curs.titulo, '-') Curf_titulo,
             nvl(aat.codigo_senai, 0) aat_codigo,
             nvl(aat.descricao, '-') aat_descricao,
             curs.ead
        From sis_cursos curs, areas_atuacoes aat
       where curs.aat_codigo = aat.codigo(+)
      Union All
      Select nvl(curf.id, 0) Curf_id,
             44 Curf_unid_id,
             4 Curf_unid_gps_codigo,
             nvl(curf.titulo, '-') Curf_titulo,
             nvl(aat.codigo_senai, 0) aat_codigo,
             nvl(aat.descricao, '-') aat_descricao,
             'N-Fatec'
        From sis_cursos_fatec     curf,
             sis_grade_curricular grad,
             areas_atuacoes       aat
       Where curf.id = grad.curf_id
         and curf.aat_codigo = aat.codigo(+)



----- contagem EJA por semestre -- ainda tem outra conta na carga da fato para poder fechar

--32360
select codcoligada, idperlet, ra, ano, codstatus,sum(contador)  from (
select sma.codcoligada, sma.idperlet,  /*dtmatricula,*/ sma.ra, sma.codstatus,
      extract (year from dtmatricula) ano,  case when extract (month from dtmatricula)  <=6 then 1 else 2 end semestre,count(1) contador--, count(sma.idhabilitacaofilial)  
--select *        
from rm.sstatus sst left join rm.smatricpl sma
on sst.codcoligada = sma.codcoligada
and sst.codstatus = sma.codstatus
left join rm.shabilitacaoaluno sha
on sma.codcoligada = sha.codcoligada
and sma.idhabilitacaofilial = sha.idhabilitacaofilial
and sma.ra = sha.ra
left join rm.shabilitacaofilial shf
on sha.codcoligada = shf.codcoligada
and sha.idhabilitacaofilial = shf.idhabilitacaofilial
left join rm.sgrade sgr
on shf.codcoligada = sgr.codcoligada
and shf.codcurso = sgr.codcurso
and shf.codhabilitacao = sgr.codhabilitacao
and shf.codgrade = sgr.codgrade



-----

--CONSULTA EVASAO ESCOLAR SGE OBIEE

select sum(FATEDUC.SAIDA_TRANCADO) as SAIDA_TRANCADO,
     sum(FATEDUC.SAIDA_EVADIDO) as SAIDA_EVADIDO,
     sum(FATEDUC.SAIDA_ELIMINADO) as SAIDA_ELIMINADO,
     sum(FATEDUC.SAIDA_CONCLUIDO) as SAIDA_CONCLUIDO,
     sum(FATEDUC.SAIDA_TRANSFERIDO) as SAIDA_TRANSFERIDO,
     sum(FATEDUC.ENTR_DISC_SAIDA) as ENTR_DISC_SAIDA,
     sum(FATEDUC.REALIZADO_MATRICULA) as REALIZADO_MATRICULA,
     sum(FATEDUC.REALIZADO_AH) as REALIZADO_ALUNOHORA,
     sum(FATEDUC.ENTRADA_TRANSFERENCIA) as ENTRADA_TRANSFERENCIA,
     sum(FATEDUC.ENTRADA_NOVA) as ENTRADA_NOVA,
     FATEDUC.TIPO_GRATUIDADE as TIPO_GRATUIDADE,
     FATEDUC.MOTIVO_CANCELAMENTO as MOTIVO_CANCELAMENTO,
     FATEDUC.ISENTO as ISENTO,
     cast(DTEMP.ANO as  INTEGER  ) - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') as ALUNO_IDADE_MATRIC,
     FATEDUC.GRATUIDADE as GRATUIDADE,
     FATEDUC.DECLARACAO as DECLARACAO,
     FATEDUC.DATA_SISTEMA as DATA_SISTEMA,
     FATEDUC.DATA_INGRESSO as DATA_INGRESSO,
     FATEDUC.BAIXA_RENDA as BAIXA_RENDA,
     DALU.CEP as ALUNO_CEP,
     DALU.CPF_RESPONSAVEL as ALUNO_CPF_RESPONSAVEL,
     DALU.CPF as ALUNO_CPF,
     DALU.DATA_NASCIMENTO_RESPONSAVEL as ALUNO_DATA_NASC_RESPONSAVEL,
     DALU.DATA_NASCIMENTO as ALUNO_DATA_NASCIMENTO,
     DALU.EMPRESA_RESPONSAVEL as ALUNO_EMPRESA_RESPONSAVEL,
     DALU.ESCOLARIDADE as ALUNO_ESCOLARIDADE,
     DALU.ESTADO_CIVIL as ALUNO_ESTADO_CIVIL,
     case  when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') between 0 and 14 then '0 a 14' when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') between 15 and 19 then '15 a 19' when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') between 20 and 29 then '20 a 29' when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') between 30 and 39 then '30 a 39' when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') between 40 and 59 then '40 a 59' when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') between 60 and 79 then '60 a 79' when TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') > 79 then '80+' else NULL end  as c33,
     TO_NUMBER(TO_CHAR(TO_DATE('2018-05-10' , 'YYYY-MM-DD'), 'yyyy'), '9999') - TO_NUMBER(TO_CHAR(DALU.DATA_NASCIMENTO, 'yyyy'), '9999') as IDADE,
     DALU.MUNICIPIO as ALUNO_MUNICIPIO,
     DALU.NACIONALIDADE as ALUNO_NACIONALIDADE,
     DALU.NIT as ALUNO_NIT,
     DALU.NOME_MAE as ALUNO_NOME_MAE,
     DALU.NOME_RESPONSAVEL as ALUNO_NOME_RESPONSAVEL,
     DALU.NOME as ALUNO_NOME,
     DALU.NUMERO as ALUNO_NUMERO,
     DALU.ORIGEM_ESCOLAR as ALUNO_ORIGEM_ESCOLAR,
     DALU.RACA as ALUNO_RACA,
     DALU.RG as ALUNO_RG,
     DALU.RUA as ALUNO_RUA,
     DALU.SEXO as ALUNO_SEXO,
     DALU.SITUACAO_OCUPACIONAL as ALUNO_SITUACAO_OCUPACIONAL,
     DALU.TIPO_RESPONSAVEL as ALUNO_TIPO_RESPONSAVEL,
     DALU.TIPO as ALUNO_TIPO,
     DALU.UF as ALUNO_UF,
     DCR.DESCRICAO as DESCRICAO_CR,
     DCLI.ATIVIDADE_NACIONAL as CLIENTE_ATIVIDADE_NACIONAL,
     DCLI.NOME as NOME_CLIENTE,
     DCLI.MASCARA as CLIENTE_MASCARA,
     DCLI.CONTRIBUINTE_SENAI as CLIENTE_CONTRIBUINTE_SENAI,
     DCLI.CONTRIBUINTE_SESI as CLIENTE_CONTRIBUINTE_SESI,
     DCLI.IDC_INDUSTRIA_GERENCIAL as CLIENTE_IDC_IND_GERENCIAL,
     DCLI.IDC_INDUSTRIA as CLIENTE_IDC_INDUSTRIA,
     DCLI.MUNICIPIO as CLIENTE_MUNICIPIO,
     DCLI.NUMERO_EMPREGADOS as CLIENTE_NUMERO_EMPREGADOS,
     DCLI.PORTE as CLIENTE_PORTE,
     DCLI.TIPO as CLIENTE_TIPO,
     DCURM.AAT_DESCRICAO as CURSO_MODULO_AAT_DESCRICAO,
     DCURM.CURS_TITULO as CURSO_MODULO_CURS_TITULO,
     DISC.CARGA_HORARIA as DISCIPLINA_CARGA_HORARIA,
     DISC.DESCRICAO as DISCIPLINA_DESCRICAO,
     DEMP.DESCRICAO as EMPRESA_DESCRICAO,
     DMUNIC.UF_SIGLA as MUNIC_UF_SIGLA,
     DMUNIC.NOME as MUNIC_NOME,
     DMUNIC.PAI_SIGLA as MUNIC_PAI_SIGLA,
     DMUNIC.REGIAO as MUNIC_REGIAO,
     DPROF.NOME as PROFISSIONAL_NOME,
     DRAST.INDICADOR1 as RASTREAVEL_INDICADOR1,
     DRAST.INDICADOR2 as RASTREAVEL_INDICADOR2,
     DSITAL.CODIGO as SITUACAO_ALUNO_CODIGO,
     DSITAL.DESCRICAO as SITUACAO_ALUNO_DESCRICAO,
     DTEMP.ANO as TEMPO_ANO,
     DTEMP.MES as TEMPO_MES,
     DTEMP.SEMESTRE as TEMPO_SEMESTRE,
     DTEMP.TRIMESTRE as TEMPO_TRIMESTRE,
     DTIPCLI.APELIDO as TIPO_CLIENTE_APELIDO,
     DTIPCLI.DESCRICAO as TIPO_CLIENTE_DESCRICAO,
     DTIPCLI.IND_INDUSTRIARIO as TIPO_CLIENTE_IND_INDUSTRIARIO,
     DTIPMAT.DESCRICAO as TIPO_MATRICULA_DESCRICAO,
     DTIPMAT.GRATUIDADE as TIPO_MATRICULA_GRATUIDADE,
     TO_NUMBER(TO_CHAR(DTUR.DATA_INICIO_REALIZACAO, 'yyyy'), '9999') as ANO_INICIO,
     DTUR.CLASSIFICACAO as TURMA_CLASSIFICACAO,
     DTUR.SIGLA_TURMA as TURMA_SIGLA_TURMA,
     DTUR.TIPO as TURMA_TIPO,
     DUORG.DESCRICAO as DESCRICAO_UO,
     DEMP.ID as EMPRESA,
     DUORG.ID as UO_ID,
     DPROF.NOME as NOME_PROFISSIONAL
from 
     DDA_BIDW.DIM_DISCIPLINAS DISC,
     DDA_BIDW.DIM_TIPOS_MATRICULAS DTIPMAT,
     DDA_BIDW.DIM_SITUACAO_ALUNO DSITAL,
     DDA_BIDW.DIM_CURSOS_MODULOS DCURM,
     DDA_BIDW.DIM_TIPOS_CLIENTES DTIPCLI,
     DDA_BIDW.DIM_ALUNOS DALU,
     DDA_BIDW.DIM_RASTREABILIDADE DRAST,
     DDA_BIDW.DIM_TURMAS DTUR,
     DDA_BIDW.DIM_UNIDADES_ORG DUORG,
     DDA_BIDW.DIM_PROFISSIONAIS DPROF,
     DDA_BIDW.DIM_EMPRESAS DEMP,
     DDA_BIDW.DIM_MUNICIPIOS DMUNIC,
     DDA_BIDW.DIM_CLIENTES DCLI,
     DDA_BIDW.DIM_CENTROS_RESP DCR,
     DDA_BIDW.DIM_TEMPO DTEMP,
     DDA_BIDW.FAT_EDUCACAO FATEDUC
where  ( DALU.ID = FATEDUC.DALU_ID and DCR.ID = FATEDUC.DCR_ID and DCLI.ID = FATEDUC.DCLI_ID and DCLI.COD_MUNICIPIO = DMUNIC.ID and DCURM.ID = FATEDUC.DCURM_ID and DEMP.ID = FATEDUC.DEMP_ID and DPROF.ID = FATEDUC.DPRO_ID_INSTRUTOR and DRAST.ID = FATEDUC.DRAST_ID and DSITAL.ID = FATEDUC.DSIAL_ID and DTEMP.ID = FATEDUC.DT_ID and DTIPCLI.ID = FATEDUC.DTPCL_ID and DTIPMAT.ID = FATEDUC.DTPMA_ID and DTUR.ID = FATEDUC.DTURM_ID and DUORG.ID = FATEDUC.DUORG_ID and FATEDUC.DDISC_ID = DISC.ID ) 
group by DALU.CELULAR, DALU.CEP, DALU.CPF, DALU.CPF_RESPONSAVEL, DALU.DATA_NASCIMENTO, DALU.DATA_NASCIMENTO_RESPONSAVEL, DALU.EMPRESA_RESPONSAVEL, DALU.MUNICIPIO, DALU.NIT, DALU.NOME, DALU.NOME_MAE, DALU.NOME_RESPONSAVEL, DALU.NUMERO, DALU.RG, DALU.RUA, DALU.SEXO, DALU.TIPO, DALU.TIPO_RESPONSAVEL, DALU.UF, DALU.RACA, DALU.ESCOLARIDADE, DALU.ESTADO_CIVIL, DALU.ORIGEM_ESCOLAR, DALU.SITUACAO_OCUPACIONAL, DALU.NACIONALIDADE, DCR.DESCRICAO, DCLI.ATIVIDADE_NACIONAL, DCLI.IDC_INDUSTRIA, DCLI.MASCARA, DCLI.MUNICIPIO, DCLI.NOME, DCLI.NUMERO_EMPREGADOS, DCLI.PORTE, DCLI.TIPO, DCLI.CONTRIBUINTE_SENAI, DCLI.CONTRIBUINTE_SESI, DCLI.IDC_INDUSTRIA_GERENCIAL, DCURM.CURS_TITULO, DCURM.AAT_DESCRICAO, DEMP.DESCRICAO, DEMP.ID, DPROF.ID, DPROF.NOME, DRAST.INDICADOR1, DRAST.INDICADOR2, DSITAL.CODIGO, DSITAL.DESCRICAO, DTEMP.ANO, DTEMP.MES, DTEMP.SEMESTRE, DTEMP.TRIMESTRE, DTIPCLI.APELIDO, DTIPCLI.DESCRICAO, DTIPCLI.IND_INDUSTRIARIO, DTIPMAT.DESCRICAO, DTIPMAT.GRATUIDADE, DTUR.CLASSIFICACAO, DTUR.SIGLA_TURMA, DTUR.TIPO, DUORG.DESCRICAO, DUORG.ID, FATEDUC.BAIXA_RENDA, FATEDUC.DATA_INGRESSO, FATEDUC.DATA_SISTEMA, FATEDUC.DECLARACAO, FATEDUC.GRATUIDADE, FATEDUC.ISENTO, FATEDUC.MOTIVO_CANCELAMENTO, FATEDUC.TIPO_GRATUIDADE, DMUNIC.NOME, DMUNIC.PAI_SIGLA, DMUNIC.UF_SIGLA, DMUNIC.REGIAO, DISC.CARGA_HORARIA, DISC.DESCRICAO, TO_NUMBER(TO_CHAR(DTUR.DATA_INICIO_REALIZACAO, 'yyyy'), '9999')
--order by c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c23, c22, c21, c20, c19, c18, c17, c16, c15, c91, c92, c93

-- CONSULTA EVASAO ESCOLAR SGE
SELECt --COUNT(*)
       --cur.codcurso,hh.codcurso, gr.codcurso,/* pe.codcurso, */HF.CODCURSO
     --  PE.*
    --  ALMPL.CODCOLIGADA,
     --  STP.CODCOLIGADA,
     --  ALMPL.CODTIPOCURSO,
    --   STP.CODTIPOCURSO,
      PEMPL.NOME PEMPL_NOME
      ,ALMPL.RA
      ,PEMPL.SEXO PEMPL_SEXO
      ,PEMPL.DTNASCIMENTO PEMPL_DTNASC
      ,PEMPL.RUA || '-' || PEMPL.NUMERO || '-' || PEMPL.COMPLEMENTO || '-' ||
       PEMPL.BAIRRO || '-' || PEMPL.CIDADE PEMPL_ENDERECO
      ,PEMPL.CEP
      ,PEMPL.NATURALIZADO
      ,PEMPL.NROFILHOSBRASIL
      ,pempl.nit
      ,pempl.deficienteauditivo
      ,pempl.deficientefala
      ,pempl.deficientevisual
      ,pempl.deficientemental
      ,pempl.deficienteintelectual
      ,pempl.deficienteobservacao
      ,pempl.deficientefisico
      ,pempl.deficientemobreduzida
      ,pempl.ano1emprego
      ,pempl.nrofilhosbrasil
      ,pempl.grauinstrucao
      ,pempl.estadonatal
      ,PCOR.DESCRICAO PCOR_DESCRICAO
      ,CASE
         WHEN PEMPL.DEFICIENTEINTELECTUAL <> 0 THEN
          'S'
         WHEN PEMPL.DEFICIENTEMOBREDUZIDA <> 0 THEN
          'S'
         WHEN PEMPL.DEFICIENTEAUDITIVO <> 0 THEN
          'S'
         WHEN PEMPL.DEFICIENTEFALA <> 0 THEN
          'S'
         WHEN PEMPL.DEFICIENTEVISUAL <> 0 THEN
          'S'
         WHEN PEMPL.DEFICIENTEMENTAL <> 0 THEN
          'S'
         ELSE
          'N'
       END PEMPL_DEFICIENCIA
     ,PEMPL.GRAUINSTRUCAO
      ,PEMPL.CODPROFISSAO
      ,STP.NOME STP_NOME
      ,STP.APRESENTACAO STP_APRESENTACAO
     -- ,STI.DESCRICAO STI_DESCRICAO
      ,SFIL.CODCOLIGADA
      ,SFIL.CODFILIAL -------------------------------------
      ,HF.CODCOLIGADA HF_CODCOLIGADA
      ,GFIL.CODFILIAL GFIL_CODFILIAL
      ,GFIL.NOMEFANTASIA GFIL_NOMEFANTASIA
      ,gfil.bairro GFIL_BAIRRO
      ,GFIL.CIDADE GFIL_CIDADE
      ,HF.CODTURNO HF_CODTURNO
      ,HF.CODCURSO HF_CODCURSO
      ,HF.CODHABILITACAO HF_CODHABILITACAO
      ,HH.NOME HH_NOME
      ,HF.CODGRADE HF_CODGRADE
      ,HA.RA HA_RA
      ,HA.IDHABILITACAOFILIAL ------------------------------------
      ,NVL(HA.CODSTATUS, 0) HA_CODSTATUS
      ,HA.DTINGRESSO HA_DTINGRESSO
      ,HA.RECMODIFIEDON HA_RECMODIFIEDON
      ,HA.PONTOSVESTIBULAR
      ,HA.MEDIAVESTIBULAR
      ,HA.CODINST
      ,MP.IDPERLET MP_IDPERLET
      ,MP.RA MP_RA
      ,MP.CODTURMA MP_CODTURMA
      ,NVL(MP.CODSTATUSRES, 0) MP_CODSTATUSRES
      ,NVL(MP.CODSTATUS, 0) MP_CODSTATUS
      ,MP.DTMATRICULA MP_DTMATRICULA
      ,MP.DTRESULTADO MP_DTRESULTADO
      ,MP.DTSOLICITACAOALTERACAO MP_DTSOLICITACAOALTERACAO
      ,MP.DTMATRICULAENCERRA MP_DTMATRICULAENCERRA
      ,MP.RECMODIFIEDON MP_RECMODIFIEDON
      ,STM.DESCRICAO STM_TIPOMATRICULA
      ,PEMPL.DTNASCIMENTO PEMPL_DTNASCIMENTO
      ,NVL2(PEMPL.CPF
           ,SUBSTR(PEMPL.CPF, 1, 9) || '/' || SUBSTR(PEMPL.CPF, -2, 2)
           ,0) PEMPL_CPF
    --  ,Td.coddisc TD_coddisc
    --  ,TD.CODTURMA TD_CODTURMA
    --  ,TD.IDTURMADISC TD_IDTURMADISC
    --  ,PE.CODPERIODO PE_CODPERIODO
      ,GR.CODGRADE GR_CODGRADE
      ,HH.CODHABILITACAO HH_CODHABILITACAO
      ,CUR.CODCURSO CUR_CODCURSO
      ,cur.nome
      ,SAR.NOME AREA
      ,TUR.NOME TUR_NOME
    --  ,dI.nome DI_NOME
    --  ,dI.ch DI_CH
    --  ,nvl(dI.coddisc, 0) DI_CODDISC
      ,CUR.codcoligada CUR_codCOLIGADA
      ,TU.CODCCUSTO TU_CODCCUSTO
      ,TU.IDITEMCONTABILPROTHEUS TU_IDITEMCONTABILPROTHEUS
      ,TU.DTINICIAL TU_DTINICIAL
      ,TU.DTFINAL TU_DTFINAL
      ,HF.CODCCUSTO HF_CODCCUSTO
      ,(SELECT IDITEMCONTABILPROTHEUS
        FROM   RM.SHABILITACAOFILIALINTPROTHEUS HFP
        WHERE  HFP.CODCOLIGADA = HF.CODCOLIGADA
        AND    HFP.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL) HFIP_IDITEMCONTABILPROTHEUS
      ,(SELECT DESCRICAO
        FROM   RM.SMOTIVOALTMAT MAM
        WHERE  MAM.CODCOLIGADA = GFIL.CODCOLIGADA
        AND    MAM.CODMOTIVO = HA.CODMOTIVOTRANSFERENCIA) MOTIVO_TRANSF_HA
      ,(SELECT DESCRICAO
        FROM   RM.SMOTIVOALTMAT MAM
        WHERE  MAM.CODCOLIGADA = GFIL.CODCOLIGADA
        AND    MAM.CODMOTIVO = MP.CODMOTIVOTRANSFERENCIA) MOTIVO_TRANSF_PL
      ,(SELECT DESCRICAO
        FROM   RM.STIPOMATRICULA STM
        WHERE  STM.CODCOLIGADA = GFIL.CODCOLIGADA
        AND    STM.CODTIPOMAT = MP.CODTIPOMAT) TIPO_MATRICULA
      ,MP.CODTIPOMAT
      ,NVL(GR.CARGAHORARIA, 0) GR_CARGAHORARIA
     -- ,NVL(GC.CHDISTANCIA, 0) GC_CHDISTANCIA
    --  ,NVL(GC.CHPRESENCIAL, 0) GC_CHPRESENCIAL
      ,MPC.BAIXARENDA MPC_BAIXARENDA
      ,MPC.EMPRESA MPC_EMPRESA
      ,MPC.EBEP MPC_EBEP
      ,MPC.CURSOEBEP MPC_CURSOEBEP
      ,MPC.GRATUIDADE MPC_GRATUIDADE
      ,MPC.TIPOGRAT MPC_TIPOGRAT
      ,MPC.CONDICAOALU MPC_CONDICAOALU
      ,mpc.datarescisao  MPC_DT_RESCISAO
      ,MPC.MOTDESLIG  MPC_MOTIV_DESLIG
      ,HAC.TIPOGRATCUR HAC_TIPOGRATCUR
      ,SST.APROVADO
      ,SST.DESCRICAO STATUS
     
               
FROM   RM.SMATRICPL MP LEFT   JOIN RM.SHABILITACAOALUNO HA
ON     HA.CODCOLIGADA = MP.CODCOLIGADA
AND    HA.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    HA.RA = MP.RA


LEFT   JOIN RM.SHABILITACAOFILIAL HF
ON     HF.CODCOLIGADA = HA.CODCOLIGADA
AND    HF.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL


LEFT   JOIN RM.SGRADE GR
--ON     (TD.CODTURMA IS NOT NULL AND GR.CODCOLIGADA = PE.CODCOLIGADA 

on    GR.CODCOLIGADA = HF.CODCOLIGADA 
AND    GR.CODCURSO = HF.CODCURSO 
AND    GR.CODHABILITACAO = HF.CODHABILITACAO 
AND    GR.CODGRADE = HF.CODGRADE--)

LEFT   JOIN RM.SHABILITACAO HH
ON     HH.CODCOLIGADA = GR.CODCOLIGADA
AND    HH.CODCURSO = GR.CODCURSO
AND    HH.CODHABILITACAO = GR.CODHABILITACAO


LEFT   JOIN RM.SCURSO CUR
ON        CUR.CODCOLIGADA = hh.CODCOLIGADA
AND    CUR.CODCURSO = hh.CODCURSO

LEFT JOIN RM.SAREA SAR
ON    SAR.CODCOLIGADA = CUR.CODCOLIGADA
AND   SAR.CODAREA = CUR.CODAREA

LEFT   JOIN RM.STIPOCURSO STP
ON   CUR.CODCOLIGADA = STP.CODCOLIGADA
AND    CUR.CODTIPOCURSO = STP.CODTIPOCURSO


LEFT   JOIN RM.STIPOINGRESSO STI
ON     HA.CODCOLIGADA = STI.CODCOLIGADA
AND    HA.CODTIPOINGRESSO = STI.CODTIPOINGRESSO
AND    STI.CODCOLIGADA = STP.CODCOLIGADA
AND    STI.CODTIPOCURSO = STP.CODTIPOCURSO


LEFT   JOIN RM.STIPOMATRICULA STM
ON    STM.CODCOLIGADA = MP.CODCOLIGADA
AND    STM.CODTIPOMAT = MP.CODTIPOMAT
AND STM.CODCOLIGADA = STP.CODCOLIGADA
AND STM.CODTIPOCURSO = STP.CODTIPOCURSO

 
LEFT   JOIN RM.SSTATUS SST
ON     SST.CODCOLIGADA = MP.CODCOLIGADA
AND    SST.CODSTATUS = MP.CODSTATUS
AND SST.CODCOLIGADA = STP.CODCOLIGADA
AND SST.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SALUNO ALMPL --MATRICPL
ON     ALMPL.CODCOLIGADA = MP.CODCOLIGADA
AND    ALMPL.RA = MP.RA

JOIN RM.PPESSOA PEMPL
ON     PEMPL.CODIGO = ALMPL.CODPESSOA

LEFT   JOIN RM.PCORRACA PCOR
ON     PEMPL.CORRACA = PCOR.CODINTERNO

LEFT JOIN RM.SPLETIVO SPL
ON     SPL.CODCOLIGADA = MP.CODCOLIGADA
AND    SPL.IDPERLET = MP.IDPERLET


LEFT   JOIN RM.SFILIAL SFIL
ON     SFIL.CODCOLIGADA = SPL.CODCOLIGADA
AND    SFIL.CODFILIAL = SPL.CODFILIAL
AND    SFIL.CODCOLIGADA = HF.CODCOLIGADA
AND    SFIL.CODFILIAL = HF.CODFILIAL

LEFT   JOIN RM.STURMA TU
ON     TU.CODCOLIGADA = HF.CODCOLIGADA
AND    TU.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL
AND    tu.codcoligada = sfil.codcoligada
AND    TU.CODFILIAL = SFIL.CODFILIAL
AND    TU.CODCOLIGADA = SPL.CODCOLIGADA
AND    TU.IDPERLET = SPL.IDPERLET
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODFILIAL = MP.CODFILIAL
AND    tu.codturma  = MP.CODTURMA
AND    TU.IDPERLET = MP.IDPERLET


LEFT   JOIN RM.STURNO TUR
ON    TUR.CODCOLIGADA = HF.CODCOLIGADA
AND    TUR.CODTURNO = HF.CODTURNO
AND    TUR.CODCOLIGADA = SFIL.CODCOLIGADA
AND    TUR.CODFILIAL   = SFIL.CODFILIAL
AND  TUR.CODCOLIGADA = STP.CODCOLIGADA
AND    TUR.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SALUNORESPONSAVEL ARES

ON    ARES.CODCOLIGADA = ALMPL.CODCOLIGADA
AND    ARES.RA = ALMPL.RA

AND    ARES.CODPESSOA = PEMPL.CODIGO

LEFT   JOIN RM.SMATRICPLCOMPL MPC
ON     MPC.CODCOLIGADA = MP.CODCOLIGADA
AND    MPC.IDPERLET = MP.IDPERLET
AND    MPC.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    MPC.RA = MP.RA

LEFT   JOIN RM.SHABILITACAOALUNOCOMPL HAC
ON     HAC.CODCOLIGADA = HA.CODCOLIGADA
AND    HAC.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL
AND    HAC.RA = HA.RA

LEFT   JOIN RM.SALUNO ALMDI -- MATRICULA
ON     ALMDI.CODCOLIGADA = STP.CODCOLIGADA
AND    ALMDI.CODTIPOCURSO = STP.CODTIPOCURSO
AND    ARES.CODCOLIGADA = ALMDI.CODCOLIGADA
AND    ARES.RA = ALMDI.RA
and    almdi.codcoligada = MP.CODCOLIGADA
AND    ALMDI.RA = MP.RA

LEFT   JOIN RM.SMATRICULA MA
ON     MP.CODCOLIGADA = MA.CODCOLIGADA
AND    MP.IDPERLET = MA.IDPERLET
AND    MP.IDHABILITACAOFILIAL = MA.IDHABILITACAOFILIAL
AND    MP.RA = MA.RA
AND    MA.CODCOLIGADA = SST.CODCOLIGADA
AND    MA.CODSTATUS = SST.CODSTATUS
AND    STM.CODCOLIGADA = MA.CODCOLIGADA
AND    STM.CODTIPOMAT = MA.TIPOMAT
and    ALMDI.CODCOLIGADA = MA.CODCOLIGADA
AND    ALMDI.RA = MA.RA


LEFT   JOIN RM.GFILIAL GFIL
ON     HF.CODFILIAL = GFIL.CODFILIAL
AND    HF.CODCOLIGADA = GFIL.CODCOLIGADA



/*LEFT   JOIN RM.STURMADISC TD
ON     TD.CODCOLIGADA = HF.CODCOLIGADA
AND    TD.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL
AND    TD.CODCOLIGADA = MA.CODCOLIGADA
AND    TD.IDTURMADISC = MA.IDTURMADISC
AND     TU.CODCOLIGADA = TD.CODCOLIGADA
AND    TU.CODTURMA = TD.CODTURMA
AND    TU.IDPERLET = TD.IDPERLET
AND     TUR.CODCOLIGADA = TD.CODCOLIGADA
AND    TUR.CODTURNO = TD.CODTURNO
AND    TD.CODCOLIGADA = STP.CODCOLIGADA
AND    TD.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SDISCIPLINA DI
ON     DI.CODCOLIGADA = TD.CODCOLIGADA
AND    DI.CODDISC = TD.CODDISC
and    DI.CODCOLIGADA = STP.CODCOLIGADA
AND    DI.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SDISCGRADE DG
ON     DG.CODCOLIGADA = DI.CODCOLIGADA
AND    DG.CODDISC = DI.CODDISC
AND    DG.CODCURSO = HF.CODCURSO
AND    DG.CODHABILITACAO = HF.CODHABILITACAO
AND    DG.CODGRADE = HF.CODGRADE

LEFT   JOIN RM.SPERIODO PE
ON     PE.CODCOLIGADA = DG.CODCOLIGADA
AND    PE.CODCURSO = DG.CODCURSO
AND    PE.CODHABILITACAO = DG.CODHABILITACAO
AND    PE.CODGRADE = DG.CODGRADE
AND    PE.CODPERIODO = DG.CODPERIODO*/


/*
OR     (TD.CODTURMA IS NULL and GR.CODCOLIGADA = HF.CODCOLIGADA AND
      GR.CODCURSO = HF.CODCURSO AND
      GR.CODHABILITACAO = HF.CODHABILITACAO AND
      GR.CODGRADE = HF.CODGRADE)*/
/*AND    GR.CODCURSO = PE.CODCURSO 
AND    GR.CODHABILITACAO = PE.CODHABILITACAO 
AND    GR.CODGRADE = PE.CODGRADE */


/*LEFT   JOIN RM.SDISCGRADECOMPL GC
ON     GC.CODCOLIGADA = DG.CODCOLIGADA
AND    GC.CODCURSO = DG.CODCURSO
AND    GC.CODHABILITACAO = DG.CODHABILITACAO
AND    GC.CODGRADE = DG.CODGRADE
AND    GC.CODPERIODO = DG.CODPERIODO
AND    GC.CODDISC = DG.CODDISC
*/


-----------------------------------------------------------------------------
--where almPL.ra  in ('00064665','00027181','00010813')
/*order by 1,2,3,4,5,6,7,8,9,10,
         11,12,13,14,15,16,17,18,19,20,
         21,22,23,24,25,26,27,28,29,30,
         31,32,33,34,35,36,37,38,39,40,
         41,42,43,44,45,46,47,48,49,50,
         51,52,53,54,55,56,57,58,59,60,
         61,62,63,64,65,66,67,68,69,70,
         71,72,73,74,75,76,77,78,79,80,
         81,82,83,84,85,86*/
         
         
--habfilial 308 e 332
--select * from rm.shabilitacaoaluno where ra =  '00010813'

/*select * from rm.smatricpl sma left join rm.saluno ssa
on sma.codcoligada = ssa.codcoligada
and sma.ra = ssa.ra
left join rm.stipocurso stc
on ssa.codcoligada = stc.codcoligada
and ssa.codtipocurso = stc.codtipocurso
left join rm.shabilitacaoaluno sha
on sha.codcoligada = sma.codcoligada
and sha.idhabilitacaofilial = sma.idhabilitacaofilial
and sha.ra = sma.ra
left join rm.smatricula ssm
on ssm.codcoligada = sma.codcoligada
and ssm.idperlet = sma.idperlet
and ssm.idhabilitacaofilial = sma.idhabilitacaofilial
and ssm.ra = sma.ra
left join rm.stipoingresso sti
on sti.codcoligada = sha.codcoligada
and sti.codtipoingresso = sha.codtipoingresso
and sti.codcoligada = stc.codcoligada
and sti.codtipocurso = stc.codtipocurso
left join rm.scurso ssc
on ssc.codcoligada = stc.codcoligada
and ssc.codtipocurso = stc.codtipocurso
WHERE SSA.RA = '00010813'



where ssa.ra in ('00064665','00027181','00010813')

select * from rm.salunoresponsavel























*/




























      











--SELECT * FROM RM.SAREA
--SELECT * FROM RM.SSTATUS


--WHERE STP.NOME IS NOT NULL --GFIL.CODFILIAL is  null --PEMCU.NOME = 'MATHEUS CARISSIMI'--PEMCU.NOME IS NULL



-- CONSULTA ODI SOMENTE SGE TABELA FAT_EDUCACAO

SELECT --count(*)
  ODS_SMATRICPLCOMPL.BAIXARENDA AS BAIXARENDA ,
  ODS_SMATRICPLCOMPL.CATEGORIA AS CATEGORIA ,
  ODS_SMATRICPLCOMPL.EBEP AS EBEP ,
  ODS_SMATRICPLCOMPL.GRATUIDADE AS GRATUIDADE ,
  ODS_SMATRICPL.CODCOLIGADA AS CODCOLIGADA ,
  ODS_SMATRICPL.IDPERLET AS IDPERLET ,
  ODS_SMATRICPL.RA AS RA ,
  ODS_SMATRICPL.CODFILIAL AS CODFILIAL ,
  ODS_SMATRICPL.CODTURMA AS CODTURMA ,
  ODS_SMATRICPL.DTMATRICULA AS DTMATRICULA ,
  ODS_SMATRICPL.RECCREATEDON AS RECCREATEDON ,
  ODS_SALUNO.CODCOLIGADA AS CODCOLIGADA_1 ,
  ODS_SALUNO.RA AS RA_1 ,
  ODS_SALUNO.CODPESSOA AS CODPESSOA ,
  ODS_PPESSOA.CPF AS CPF ,
  ODS_PPESSOA.TELEFONE1 AS TELEFONE1 ,
  ODS_PPESSOA.TELEFONE2 AS TELEFONE2 ,
  ODS_PPESSOA.TELEFONE3 AS TELEFONE3 ,
  ODS_SGRADE.CODGRADE AS CODGRADE ,
  ODS_SSTATUS.CODCOLIGADA AS CODCOLIGADA_1_2 ,
  ODS_SSTATUS.CODSTATUS AS CODSTATUS ,
  ODS_SMOTIVOALTMAT.DESCRICAO AS DESCRICAO ,
  ODS_SCURSO.CODCURSO AS CODCURSO ,
  ODS_GCONSIST_MAP_BUSCA_TIPOG_1.CODCLIENTE_1 AS CODCLIENTE ,
  ODS_GCONSIST_MAP_BUSCA_TIPOG_1.DESCRICAO_1 AS DESCRICAO_1 ,
  ODS_STURNO.CODTURNO AS CODTURNO ,
  ODS_STURNO.CODFILIAL AS CODFILIAL_1   
FROM 
  ((((((((((DDA_BI.ODS_SHABILITACAO ODS_SHABILITACAO  INNER JOIN  ((((((DDA_BI.ODS_SMATRICPLCOMPL ODS_SMATRICPLCOMPL  INNER JOIN  DDA_BI.ODS_SMATRICPL ODS_SMATRICPL  
    ON  ODS_SMATRICPL.CODCOLIGADA                        = ODS_SMATRICPLCOMPL.CODCOLIGADA 
   AND ODS_SMATRICPL.IDPERLET                       = ODS_SMATRICPLCOMPL.IDPERLET 
   AND ODS_SMATRICPL.IDHABILITACAOFILIAL            = ODS_SMATRICPLCOMPL.IDHABILITACAOFILIAL 
   AND TRIM(ODS_SMATRICPL.RA)                       = TRIM(ODS_SMATRICPLCOMPL.RA) 
   and ODS_SMATRICPL.FLAG_ATUAL                     = 1 
   and ODS_SMATRICPLCOMPL.FLAG_ATUAL                = 1 
    and ODS_SMATRICPL.RECMODIFIEDON between to_date('01/04/2018','dd/mm/yyyy')and to_date('03/06/2018','dd/mm/yyyy') 
  --PRJ_BI_EDUCACAO.V_DATA_INICIAL and PRJ_BI_EDUCACAO.V_DATA_FINAL
     )  INNER JOIN  DDA_BI.ODS_SALUNO ODS_SALUNO  
    ON  ODS_SALUNO.CODCOLIGADA                       = ODS_SMATRICPL.CODCOLIGADA
   AND ODS_SALUNO.RA                                = ODS_SMATRICPL.RA
   and ODS_SALUNO.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_PPESSOA ODS_PPESSOA  
    ON  ODS_PPESSOA.CODIGO                          = ODS_SALUNO.CODPESSOA
and ODS_PPESSOA.FLAG_ATUAL                       = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOALUNO ODS_SHABILITACAOALUNO  
    ON  ODS_SHABILITACAOALUNO.CODCOLIGADA            = ODS_SMATRICPL.CODCOLIGADA 
AND ODS_SHABILITACAOALUNO.IDHABILITACAOFILIAL    = ODS_SMATRICPL.IDHABILITACAOFILIAL 
AND ODS_SHABILITACAOALUNO.RA                     = ODS_SMATRICPL.RA 
and ODS_SHABILITACAOALUNO.FLAG_ATUAL             = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOFILIAL ODS_SHABILITACAOFILIAL  
    ON  ODS_SHABILITACAOFILIAL.CODCOLIGADA           = ODS_SHABILITACAOALUNO.CODCOLIGADA
AND ODS_SHABILITACAOFILIAL.IDHABILITACAOFILIAL   = ODS_SHABILITACAOALUNO.IDHABILITACAOFILIAL
AND ODS_SHABILITACAOFILIAL.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SGRADE ODS_SGRADE  
    ON  ODS_SGRADE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL.CODCOLIGADA
   AND ODS_SGRADE.CODCURSO                          = ODS_SHABILITACAOFILIAL.CODCURSO
   AND ODS_SGRADE.CODHABILITACAO                    = ODS_SHABILITACAOFILIAL.CODHABILITACAO
   AND ODS_SGRADE.CODGRADE                          = ODS_SHABILITACAOFILIAL.CODGRADE
   and ODS_SGRADE.FLAG_ATUAL                        = 1
     )  
    ON  ODS_SHABILITACAO.CODCOLIGADA                = ODS_SGRADE.CODCOLIGADA
AND ODS_SHABILITACAO.CODHABILITACAO              = ODS_SGRADE.CODHABILITACAO
AND ODS_SHABILITACAO.CODCURSO                    = ODS_SGRADE.CODCURSO
and ODS_SHABILITACAO.FLAG_ATUAL            = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_STURMA ODS_STURMA  
    ON  ODS_STURMA.CODCOLIGADA                    = ODS_SMATRICPL.CODCOLIGADA
   AND ODS_STURMA.CODFILIAL                      = ODS_SMATRICPL.CODFILIAL
   AND ODS_STURMA.IDPERLET                       = ODS_SMATRICPL.IDPERLET
   AND ODS_STURMA.CODTURMA                       = ODS_SMATRICPL.CODTURMA
   and ODS_STURMA.FLAG_ATUAL                     = 1
     )  INNER JOIN  DDA_BI.ODS_SSTATUS ODS_SSTATUS  
    ON  ODS_SSTATUS.CODCOLIGADA                      = ODS_SMATRICPL.CODCOLIGADA
AND ODS_SSTATUS.CODSTATUS                        = ODS_SMATRICPL.CODSTATUS
AND ODS_SSTATUS.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SPLETIVO ODS_SPLETIVO  
    ON  ODS_SPLETIVO.CODCOLIGADA                     = ODS_SMATRICPL.CODCOLIGADA
AND ODS_SPLETIVO.IDPERLET                        = ODS_SMATRICPL.IDPERLET
and ODS_SPLETIVO.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_SMOTIVOALTMAT ODS_SMOTIVOALTMAT  
    ON  ODS_SMOTIVOALTMAT.CODCOLIGADA             = ODS_SMATRICPL.CODCOLIGADA
   AND ODS_SMOTIVOALTMAT.CODMOTIVO               = ODS_SMATRICPL.CODMOTIVOTRANSFERENCIA
   and ODS_SMOTIVOALTMAT.FLAG_ATUAL              = 1
     )  INNER JOIN  DDA_BI.ODS_SFILIAL ODS_SFILIAL  
    ON  ODS_SFILIAL.CODCOLIGADA                      = ODS_SPLETIVO.CODCOLIGADA
AND ODS_SFILIAL.CODFILIAL                        = ODS_SPLETIVO.CODFILIAL
and ODS_SFILIAL.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SCURSO ODS_SCURSO  
    ON  ODS_SCURSO.CODCOLIGADA                       = ODS_SHABILITACAO.CODCOLIGADA
AND ODS_SCURSO.CODCURSO                          = ODS_SHABILITACAO.CODCURSO
AND ODS_SCURSO.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_STIPOCURSO ODS_STIPOCURSO  
    ON  ODS_STIPOCURSO.CODCOLIGADA                   = ODS_SCURSO.CODCOLIGADA
AND ODS_STIPOCURSO.CODTIPOCURSO                  = ODS_SCURSO.CODTIPOCURSO
and ODS_STIPOCURSO.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_GCONSIST ODS_GCONSIST  
    ON  ODS_GCONSIST.CODCOLIGADA                  = ODS_SMATRICPLCOMPL.CODCOLIGADA
AND ODS_GCONSIST.CODCLIENTE                   = ODS_SMATRICPLCOMPL.CATEGORIA
AND ODS_GCONSIST.CODTABELA                    = 'SCATEGORIA'
and ODS_GCONSIST.FLAG_ATUAL                   = 1
     )  LEFT OUTER JOIN  (
SELECT 
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODCOLIGADA AS CODCOLIGADA ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.APLICACAO AS APLICACAO ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODTABELA AS CODTABELA ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODCLIENTE AS CODCLIENTE ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODINTERNO AS CODINTERNO ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.DESCRICAO AS DESCRICAO ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.PODEALTERAR AS PODEALTERAR ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.RECCREATEDBY AS RECCREATEDBY ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.RECCREATEDON AS RECCREATEDON ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.RECMODIFIEDBY AS RECMODIFIEDBY ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.RECMODIFIEDON AS RECMODIFIEDON ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.ID_ODS_GCONSIST AS ID_ODS_GCONSIST ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.DT_INI_VIG AS DT_INI_VIG ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.DT_FIM_VIG AS DT_FIM_VIG ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.FLAG_ATUAL AS FLAG_ATUAL ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODCOLIGADA AS CODCOLIGADA_1 ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODCLIENTE AS CODCLIENTE_1 ,
  ODS_GCONSIST_MAP_BUSCA_TIPOGRA.DESCRICAO AS DESCRICAO_1   
FROM 
  DDA_BI.ODS_GCONSIST ODS_GCONSIST_MAP_BUSCA_TIPOGRA  
WHERE
  (ODS_GCONSIST_MAP_BUSCA_TIPOGRA.CODTABELA = 'TIPOGRAT'
and ODS_GCONSIST_MAP_BUSCA_TIPOGRA.FLAG_ATUAL = 1
) 
  ) ODS_GCONSIST_MAP_BUSCA_TIPOG_1  
    ON  ODS_GCONSIST_MAP_BUSCA_TIPOG_1.CODCOLIGADA_1            = ODS_SMATRICPLCOMPL.CODCOLIGADA
AND ODS_GCONSIST_MAP_BUSCA_TIPOG_1.CODCLIENTE_1             = ODS_SMATRICPLCOMPL.TIPOGRAT
     )  INNER JOIN  DDA_BI.ODS_STURNO ODS_STURNO  
    ON  ODS_STURNO.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL.CODCOLIGADA
AND ODS_STURNO.CODTURNO                          = ODS_SHABILITACAOFILIAL.CODTURNO
AND ODS_STURNO.FLAG_ATUAL = 1


--where codcoligada = 4 /*and to_char(DTMATRICULA,'mmyyyy') = '042018'*/ --ra = '00054036' 
       --  and descricao = 'Matriculado'
         
    -- ate marcço 
    --senai
    --28571  scop
    -- 31236 -- diferenca é u numero de matriculas de abril
    
    --sesi
    -- bi 22878
    -- scae 20745   
         
    
    
    
 
---
-- consulta para ligar na fato educacao para trazer aluno hora
select *
  from sisn$matricula_dados dad, SISN$MATRICULA_CH ch , si$execucao ex
 where ex.mes_referencia = 201804  -- buscar o max mes_referencia
   and ch.exec_id = dad.exec_id 
   and ch.codigo_matricula$ = dad.codigo_matricula$ 
   and CH.EXEC_ID = EX.ID
   and ex.mes_referencia = '201804'
   and ex.homologado = 1
and    dad.codigo_matricula$ like '1826939'  
--and dad.line# = ch.line# 
--select * from bi_dados_producao_tmp 


-- valida chave

select --ch.ch_escolar,  -- realizado_ah
       --ch.ch_estagio,  -- realizado_horas_efetivas_est
       --ch.horas_praticas_profissionais, -- realizado_horas_pratica_apr
       dad.codigo_matricula$ codmatriculascop, -- shabilitacaoalunocompl.codmatriculascop 
       substr(dad.codigo_matricula$, 1, 8) ra, --smatricplcompl.ra 
       trim(substr(dad.codigo_matricula$, 9, 50)) idft, -- sturmacompl.idft 
   --    ex.mes_referencia,
   --    DAD.EXEC_ID,
   --    ex.entidade,
        count(*)
      /* CH.EXEC_ID,
       EX.ID*/
  from sisn$matricula_dados dad, SISN$MATRICULA_CH ch , si$execucao ex
 where ex.mes_referencia = 201804  -- buscar o max mes_referencia
   and ch.exec_id = dad.exec_id 
   and ch.codigo_matricula$ = dad.codigo_matricula$ 
   and CH.EXEC_ID = EX.ID
   and ex.mes_referencia = '201804'
   and ex.homologado = 1
--and    dad.codigo_matricula$ like '1826%' 
--and dad.line# = ch.line# 
--select * from bi_dados_producao_tmp 
   group by --ch.ch_escolar, 
            --ch.ch_estagio, 
            --ch.horas_praticas_profissionais, 
            dad.codigo_matricula$ , -- shabilitacaoalunocompl.codmatriculascop 
           substr(dad.codigo_matricula$, 1, 8), --smatricplcompl.ra 
            trim(substr(dad.codigo_matricula$, 9, 50))/*,
            DAD.EXEC_ID,
            ex.mes_referencia,
            ex.entidade*/
  having count(*) > 1
  
  
-- busca registro no BI - ordem de busca

-- pela tabela abaixo chego no RA atraves do codmatriculascop
-- 1 registro
select * from rm.shabilitacaoalunocompl ccc where ccc.codmatriculascop =    1826939;


-- 2 registros ( 2 status, 2 e 15)
select * from rm.smatricpl where ra = '00042995'


-- abaixo ele encontra o aoluno na estrutura do SGE

-- 2 registros com status 15 na habilitacaoa aluno e (2 e 15) na matricpl
select * 
  from rm.shabilitacaoaluno sha
     , rm.smatricpl mat 
     , rm.sturma tur
 where  mat.codcoligada = sha.codcoligada
   and  mat.idhabilitacaofilial = sha.idhabilitacaofilial
   and  mat.ra = sha.ra
   and mat.codcoligada = tur.codcoligada
   and mat.idperlet = tur.idperlet
   and mat.codfilial         = tur.codfilial
   and mat.codturma   = tur.codturma
   and mat.ra = '00042995'
   
-- para achar no bi pego o ra e vou na dimensão de alunos

-- encontrou o registro
select * from dda_bidw.dim_alunos where ra = '00042995'

-- para chegar na fat pelo o dalu_id
-- encontrou 2 registros com dsial_id =  2248 e 2308
select * from dda_bidw.fat_educacao where dalu_id = 50001651547

-- confirmando situacao do aluno no BI
-- confirmados os status 2 e 15 iguais a matricpl
select * from dda_bidw.dim_situacao_aluno where id in (2248,2308)
         
-- mesmo trazendo 2 registros, com otb tem dois na fato parece que a ligacao esta correta pela chave proposta

-- me parece que a melhor estrategia vai ser mesmo criar novo mapeamento com update da fat_educacao
-- ligando as outras tabelas da ODS somente para linkar e buscar os codigos das dimensões

-- validação do numero de registros aluno-hora

-- FINAL . ATE O GROUP BY TEM QUE FICAR SEPARADO NO JOIN DA FATO EDUCACAO, DEPOIS LIGA O RESULTADO NO RESTO
select * from (
SELECT MATRICULA, SUBSTR(MATRICULA, 1, 8)dad_ra,   SMA.RA sma_ra,/*TOTAL,*/max(sma.codmotivotransferencia)codmotivotransferencia,max(sma.dtmatricula)dtmatricula, max(sma.codstatus)codstatus, max(sma.idhabilitacaofilial)idhabilitacaofilial,max(sma.idperlet)idperlet, max(sma.codfilial)codfilial, coligada, max(sma.codturma)codturma 
FROM (
select dad.codigo_matricula$ MATRICULA, CASE WHEN EX.ENTIDADE = 'senai' then 4 else 2 end coligada, sha.ra RA,sha.codcoligada codCOLIGADA/*,COUNT(1)TOTAL*/--dad.codigo_matricula$, sha.codmatriculascop, sha.ra/*dad.codigo_matricula$, sha.codmatriculascop, sha.ra, sma.ra,substr(dad.codigo_matricula$, 1, 8) ra_dad, sma.codstatus, trim(substr(dad.codigo_matricula$, 9, 50)),tcl.idft /* sum(ch.ch_escolar),  -- realizado_ah

       
  from sisn$matricula_dados dad left join rm.shabilitacaoalunocompl sha 
  on (dad.codigo_matricula$ = sha.codmatriculascop
  )
  join SISN$MATRICULA_CH ch 
  on dad.exec_id = ch.exec_id
   and dad.codigo_matricula$ = ch.codigo_matricula$
  join si$execucao ex
  on ch.exec_id = ex.id
   where ex.mes_referencia = 201804  -- buscar o max mes_referencia
   and ex.homologado = 1

)AAAAA
left join rm.smatricpl sma
  on substr(AAAAA.MATRICULA, 1, 8) = sma.ra
 -- and AAAAA.ID = sma.idhabilitacaofilial
--  and AAAAA.ra = sma.ra
  and AAAAA.coligada = sma.codcoligada
  left join rm.sturmacompl tcl
  on trim(substr(AAAAA.MATRICULA, 9, 50)) = tcl.idft
  and tcl.codcoligada = sma.codcoligada
  and tcl.codfilial = sma.codfilial
  and tcl.codturma = sma.codturma
  and tcl.idperlet = sma.idperlet
-- where ex.mes_referencia = 201804  
--   and ex.homologado = 1
group by MATRICULA, SUBSTR(MATRICULA, 1, 8),   SMA.RA ,  coligada
)BBB --where matricula = '000110323059'
left join rm.sturma stu
on stu.codcoligada = bbb.coligada
and stu.codfilial = bbb.codfilial
and stu.idperlet = bbb.idperlet
and stu.codturma = bbb.codturma
left join rm.smatricplcompl  smat
on bbb.COLIGADA                        = SMAT.CODCOLIGADA
   AND bbb.IDPERLET                       = SMAT.IDPERLET
   AND bbb.IDHABILITACAOFILIAL            = SMAT.IDHABILITACAOFILIAL
   AND TRIM(SMA_RA)                       = TRIM(SMAT.RA)
left join rm.saluno sa
   on SA.CODCOLIGADA                       = bbb.COLIGADA
   AND SA.RA                                = SMA_RA
LEFT JOIN RM.SSTATUS SST
   ON SST.CODCOLIGADA = BBB.COLIGADA
   AND SST.CODSTATUS = BBB.CODSTATUS
   

--trecho da subconsulta que trata somente da carga e realcionamentos das tabelas da aluno-hora com o group by
-- para evitar registros duplicados

select count(*) from (
(SELECT 
  max(ODS_SMATRICPL_1.IDPERLET) AS IDPERLET ,
  max(ODS_SMATRICPL_1.IDHABILITACAOFILIAL) AS IDHABILITACAOFILIAL ,
  ODS_SMATRICPL_1.RA AS RA ,
  max(ODS_SMATRICPL_1.CODFILIAL) AS CODFILIAL ,
  max(ODS_SMATRICPL_1.CODTURMA) AS CODTURMA ,
  max(ODS_SMATRICPL_1.CODSTATUS) AS CODSTATUS ,
  max(ODS_SMATRICPL_1.DTMATRICULA) AS DTMATRICULA ,
  max(ODS_SMATRICPL_1.CODMOTIVOTRANSFERENCIA) AS CODMOTIVOTRANSFERENCIA ,
  OUTPUTSIGNATURE_MAP_ALUNO_HORA.ENTIDADE AS ENTIDADE ,
  OUTPUTSIGNATURE_MAP_ALUNO_HORA.CODIGO_MATRICULA AS CODIGO_MATRICULA ,
  sum(OUTPUTSIGNATURE_MAP_ALUNO_HORA.CH_ESCOLAR) AS CH_ESCOLAR ,
  sum(OUTPUTSIGNATURE_MAP_ALUNO_HORA.CH_ESTAGIO) AS CH_ESTAGIO ,
  sum(OUTPUTSIGNATURE_MAP_ALUNO_HORA.HORAS_PRATICAS_PROFISSIONAIS) AS HORAS_PRATICAS_PROFISSIONAIS   
FROM 
  (DDA_BI.ODS_SMATRICPL ODS_SMATRICPL_1  RIGHT OUTER JOIN  (
select   
  case when ODS_SI_EXECUCAO_MAP_ALUNO_HORA.ENTIDADE = 'senai' then 4 else 2 end AS ENTIDADE,  ODS_SISN_MATRICULA_DADOS_MAP_A.CODIGO_MATRICULA AS CODIGO_MATRICULA,  ODS_SISN_MATRICULA_CH_MAP_ALUN.CH_ESCOLAR AS CH_ESCOLAR,  ODS_SISN_MATRICULA_CH_MAP_ALUN.CH_ESTAGIO AS CH_ESTAGIO,  ODS_SISN_MATRICULA_CH_MAP_ALUN.HORAS_PRATICAS_PROFISSIONAIS AS HORAS_PRATICAS_PROFISSIONAIS
from  DDA_BI.ODS_SI$EXECUCAO ODS_SI_EXECUCAO_MAP_ALUNO_HORA  INNER JOIN  ((DDA_BI.ODS_SISN$MATRICULA_DADOS ODS_SISN_MATRICULA_DADOS_MAP_A  LEFT OUTER JOIN  DDA_BI.ODS_SHABILITACAOALUNOCOMPL ODS_SHABILITACAOALUNOCOMPL_MAP  
    ON  ODS_SISN_MATRICULA_DADOS_MAP_A.CODIGO_MATRICULA = ODS_SHABILITACAOALUNOCOMPL_MAP.CODMATRICULASCOP
and ODS_SHABILITACAOALUNOCOMPL_MAP.FLAG_ATUAL = 1
and ODS_SISN_MATRICULA_DADOS_MAP_A.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SISN$MATRICULA_CH ODS_SISN_MATRICULA_CH_MAP_ALUN  
    ON  ODS_SISN_MATRICULA_DADOS_MAP_A.EXEC_ID = ODS_SISN_MATRICULA_CH_MAP_ALUN.EXEC_ID
and ODS_SISN_MATRICULA_DADOS_MAP_A.CODIGO_MATRICULA = ODS_SISN_MATRICULA_CH_MAP_ALUN.CODIGO_MATRICULA
and ODS_SISN_MATRICULA_CH_MAP_ALUN.FLAG_ATUAL = 1
     )  
    ON  ODS_SI_EXECUCAO_MAP_ALUNO_HORA.ID = ODS_SISN_MATRICULA_CH_MAP_ALUN.EXEC_ID
and ODS_SI_EXECUCAO_MAP_ALUNO_HORA.FLAG_ATUAL = 1
where  (1=1)
 and (ODS_SI_EXECUCAO_MAP_ALUNO_HORA.MES_REFERENCIA = '201804'  -- buscar o max mes_referencia 
and ODS_SI_EXECUCAO_MAP_ALUNO_HORA.HOMOLOGADO = 1
)
)  OUTPUTSIGNATURE_MAP_ALUNO_HORA  
    ON  substr(OUTPUTSIGNATURE_MAP_ALUNO_HORA.CODIGO_MATRICULA, 1, 8) = ODS_SMATRICPL_1.RA 
--and ODS_SHABILITACAOALUNOCOMPL.IDHABILITACAOFILIAL = ODS_SMATRICPL_1.IDHABILITACAOFILIAL 
--and ODS_SHABILITACAOALUNOCOMPL.RA = ODS_SMATRICPL_1.RA 
and OUTPUTSIGNATURE_MAP_ALUNO_HORA.ENTIDADE = ODS_SMATRICPL_1.CODCOLIGADA 
AND ODS_SMATRICPL_1.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_STURMACOMPL ODS_STURMACOMPL  
    ON  trim(substr(OUTPUTSIGNATURE_MAP_ALUNO_HORA.CODIGO_MATRICULA, 9, 50)) = ODS_STURMACOMPL.IDFT 
  and ODS_STURMACOMPL.CODCOLIGADA = ODS_SMATRICPL_1.CODCOLIGADA 
  and ODS_STURMACOMPL.CODFILIAL = ODS_SMATRICPL_1.CODFILIAL 
  and ODS_STURMACOMPL.CODTURMA = ODS_SMATRICPL_1.CODTURMA 
  and ODS_STURMACOMPL.IDPERLET = ODS_SMATRICPL_1.IDPERLET 
  AND ODS_STURMACOMPL.FLAG_ATUAL = 1
GROUP BY
  ODS_SMATRICPL_1.RA,OUTPUTSIGNATURE_MAP_ALUNO_HORA.ENTIDADE,OUTPUTSIGNATURE_MAP_ALUNO_HORA.CODIGO_MATRICULA )AGG
  left join dda_bi.ods_smatricplcompl smac
  on smac.codcoligada = agg.entidade
  and smac.idperlet = agg.idperlet
  and smac.idhabilitacaofilial = agg.idhabilitacaofilial
  and trim(smac.ra) = trim(agg.ra)
  and smac.flag_atual = 1
  )



--- resultado final ODI já retirando dimensao de turma e situacao do aluno com resultado batendo 21841 registros

select count(*) from (
select 
DALU_ID,
  DCLI_ID,
  DCR_ID,
  DCURM_ID,
  DEMP_ID,
  DRAST_ID,
 -- DSIAL_ID,
  --DTURM_ID,
  DT_ID,
  DUORG_ID,
  PREVISTO_AH,
  PREVISTO_MATRICULA,
  REALIZADO_AH,
  REALIZADO_MATRICULA,
  ENTR_DISC_SAIDA,
  VALOR_CURSO,
  VALOR_TOTAL,
  VALOR_DESCONTO,
  VALOR_EFETIVO,
  DATA_SISTEMA,
  DATA_INGRESSO,
  IDADE,
  DATA_INI_SIT_ALUN,
  MOTIVO_CANCELAMENTO,
  CLIENTELA_SESI,
  ISENTO,
  GRATUIDADE,
  BAIXA_RENDA,
  DECLARACAO,
  PREVISTO_AH_MES_ANT,
  REALIZADO_AH_MES_ANT,
  PREVISTO_AH_ANO_MES_ANT,
  REALIZADO_AH_ANO_MES_ANT,
  PREVISTO_MT_MES_ANT,
  REALIZADO_MT_MES_ANT,
  PREVISTO_MT_ANO_MES_ANT,
  REALIZADO_MT_ANO_MES_ANT,
  VALOR_CURSO_MES_ANT,
  VALOR_CURSO_ANO_MES_ANT,
  VALOR_TOTAL_MES_ANT,
  VALOR_TOTAL_ANO_MES_ANT,
  VALOR_DESCONTO_MES_ANT,
  VALOR_DESCONTO_ANO_MES_ANT,
  VALOR_EFETIVO_MES_ANT,
  VALOR_EFETIVO_ANO_MES_ANT,
  DTPMA_ID,
  DTPCL_ID,
  CR_LOT,
  IND_PROD,
  PREVISTO_HH,
  PREVISTO_ATENDIMENTO,
  REALIZADO_HH,
  REALIZADO_ATENDIMENTO,
  PREVISTO_HH_MES_ANT,
  REALIZADO_HH_MES_ANT,
  PREVISTO_HH_ANO_MES_ANT,
  REALIZADO_HH_ANO_MES_ANT,
  PREVISTO_AT_MES_ANT,
  REALIZADO_AT_MES_ANT,
  PREVISTO_AT_ANO_MES_ANT,
  REALIZADO_AT_ANO_MES_ANT,
  DST_ID,
  DCGS_ID,
  IND_DN,
  IND_ATEND,
  DPLA_ID,
  --CHAVE,
  CHAVE_BSC,
  EM_ANDAMENTO,
  DCTA_ID,
  ENTRADA_NOVA,
  ENTRADA_RESIDUAL,
  ENTRADA_TRANSFERENCIA,
  ENTRADA_TRANCAMENTO,
  SAIDA_CONCLUIDO,
  SAIDA_EVADIDO,
  SAIDA_ELIMINADO,
  SAIDA_TRANCADO,
  SAIDA_TRANSFERIDO,
  SAIDA_RESIDUAL,
  TIPO_GRATUIDADE,
  DDISC_ID,
  DPRO_ID_INSTRUTOR,
  DCLIPF_ID,
  DCLIPJ_ID,
  DATA_BI,
  ENSAIOS,
  RELATORIOS,
  PROJETOS,
  PREVISTO_LAUDOS,
  PREVISTO_ENSAIOS,
  REALIZADO_HORAS_EFETIVAS_EST,
  REALIZADO_HORAS_PRATICA_APR,
  REALIZADO_HORAS_TOTAL,
  DCR_TURM_ID,
  PNE_ID,
  CONTA_PNE,
  FLAG_PNE,
  DTURN_ID,
  SISTEMA_ORIGEM,
  IDC_SGE_HIST,
  IND_UPDATE
 from (
select    
  nvl(INLINE_VIEW.ID,0) AS DALU_ID,
  nvl(DISTINCT__A.CR,0) AS DCLI_ID,
  nvl(DISTINCT__A.CR,0) AS DCR_ID,
  nvl(INLINE_VIEW.ID_4,0) AS DCURM_ID,
  nvl(INLINE_VIEW.ENTIDADE,0) AS DEMP_ID,
  nvl(       case
         when (case
                when ((INLINE_VIEW.CPF_1 <> 0 Or INLINE_VIEW.CPF_RESPONSAVEL <> 0) And
                     INLINE_VIEW.RUA <> '-' And INLINE_VIEW.NUMERO <> 0 And
                     INLINE_VIEW.BAIRRO <> '-' And INLINE_VIEW.MUNICIPIO <> '-' And
                     (INLINE_VIEW.TELEFONE1 <> '0' OR INLINE_VIEW.TELEFONE2 <> '0' OR
                     INLINE_VIEW.TELEFONE3 <> '0' OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 <> '0' OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 <> '0' OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 <> '0' OR
                     INLINE_VIEW.TELEFONE1_1 <> '0' OR
                     INLINE_VIEW.TELEFONE2_1 <> '0' OR
                     INLINE_VIEW.TELEFONE3_1 <> '0' OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 <> '0' OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 <> '0' OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 <> '0' OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE <> '0' OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE <> '0')) then
                 'S'
                else
                 'N'
              end) = 'S' then
          case
            when INLINE_VIEW.BAIXARENDA = '1' or
                 INLINE_VIEW.GRATUIDADE = '1' then
             1
            else
             3
          end
         else
          case
            when INLINE_VIEW.BAIXARENDA = '1' or
                 INLINE_VIEW.GRATUIDADE = '1' then
             2
            else
             4
          end
       end 
       ,0) AS DRAST_ID,
 -- nvl(INLINE_VIEW.ID_1,0) AS DSIAL_ID,
 -- nvl(INLINE_VIEW.ID_3,0) AS DTURM_ID,
  nvl(INLINE_VIEW.ID_6,0) AS DT_ID,
  nvl(DISTINCT__A.UO,0) AS DUORG_ID,
  0 AS PREVISTO_AH,
  0 AS PREVISTO_MATRICULA,
  INLINE_VIEW.CH_ESCOLAR AS REALIZADO_AH,
  0 AS REALIZADO_MATRICULA,
  0 AS ENTR_DISC_SAIDA,
  0 AS VALOR_CURSO,
  0 AS VALOR_TOTAL,
  0 AS VALOR_DESCONTO,
  0 AS VALOR_EFETIVO,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_SISTEMA,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_INGRESSO,
  0 AS IDADE,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_INI_SIT_ALUN,
  nvl(INLINE_VIEW.DESCRICAO,'-') AS MOTIVO_CANCELAMENTO,
  '-' AS CLIENTELA_SESI,
  '-' AS ISENTO,
  nvl(CASE WHEN INLINE_VIEW.GRATUIDADE = 1 THEN 'S'       WHEN INLINE_VIEW.GRATUIDADE = 0 THEN 'N'       ELSE '-' END      ,'-') AS GRATUIDADE,
  nvl(case when INLINE_VIEW.BAIXARENDA = 1 then 'S' else 'N' END,0) AS BAIXA_RENDA,
  '-' AS DECLARACAO,
  0 AS PREVISTO_AH_MES_ANT,
  0 AS REALIZADO_AH_MES_ANT,
  0 AS PREVISTO_AH_ANO_MES_ANT,
  0 AS REALIZADO_AH_ANO_MES_ANT,
  0 AS PREVISTO_MT_MES_ANT,
  0 AS REALIZADO_MT_MES_ANT,
  0 AS PREVISTO_MT_ANO_MES_ANT,
  0 AS REALIZADO_MT_ANO_MES_ANT,
  0 AS VALOR_CURSO_MES_ANT,
  0 AS VALOR_CURSO_ANO_MES_ANT,
  0 AS VALOR_TOTAL_MES_ANT,
  0 AS VALOR_TOTAL_ANO_MES_ANT,
  0 AS VALOR_DESCONTO_MES_ANT,
  0 AS VALOR_DESCONTO_ANO_MES_ANT,
  0 AS VALOR_EFETIVO_MES_ANT,
  0 AS VALOR_EFETIVO_ANO_MES_ANT,
  nvl(case          when nvl(INLINE_VIEW.EBEP,0) = '1' then  3          when nvl(INLINE_VIEW.GRATUIDADE,0)  = 1  then 1          else           2        end,0) AS DTPMA_ID,
  0 AS DTPCL_ID,
  '-' AS CR_LOT,
  nvl(MAP_BUSCA_IND_PROD_A.IND,'Não') AS IND_PROD,
  0 AS PREVISTO_HH,
  0 AS PREVISTO_ATENDIMENTO,
  0 AS REALIZADO_HH,
  0 AS REALIZADO_ATENDIMENTO,
  0 AS PREVISTO_HH_MES_ANT,
  0 AS REALIZADO_HH_MES_ANT,
  0 AS PREVISTO_HH_ANO_MES_ANT,
  0 AS REALIZADO_HH_ANO_MES_ANT,
  0 AS PREVISTO_AT_MES_ANT,
  0 AS REALIZADO_AT_MES_ANT,
  0 AS PREVISTO_AT_ANO_MES_ANT,
  0 AS REALIZADO_AT_ANO_MES_ANT,
  0 AS DST_ID,
  NVL(MAP_BUSCA_IND_ATEND_A.DGCS_ID,NVL(MAP_BUSCA_IND_DN_A.DGCS_ID,MAP_BUSCA_IND_PROD_A.DGCS_ID)) AS DCGS_ID,
  NVL(MAP_BUSCA_IND_DN_A.IND,'Não') AS IND_DN,
  NVL(MAP_BUSCA_IND_ATEND_A.IND,'Não') AS IND_ATEND,
  0 AS DPLA_ID,
 -- nvl(INLINE_VIEW.ID||INLINE_VIEW.ID_3||INLINE_VIEW.ID_6,'-') AS CHAVE,
  '-' AS CHAVE_BSC,
  0 AS EM_ANDAMENTO,
  0 AS DCTA_ID,
  0 AS ENTRADA_NOVA,
  0 AS ENTRADA_RESIDUAL,
  0 AS ENTRADA_TRANSFERENCIA,
  0 AS ENTRADA_TRANCAMENTO,
  0 AS SAIDA_CONCLUIDO,
  0 AS SAIDA_EVADIDO,
  0 AS SAIDA_ELIMINADO,
  0 AS SAIDA_TRANCADO,
  0 AS SAIDA_TRANSFERIDO,
  0 AS SAIDA_RESIDUAL,
  nvl(DECODE(     case when INLINE_VIEW.CODCLIENTE = 0 then '9'          when INLINE_VIEW.CODCLIENTE between 423 and 452 then '4'          else INLINE_VIEW.CODCLIENTE     end, '9', 'Não Gratuita',4,'PRONATEC',INLINE_VIEW.DESCRICAO_1),0) AS TIPO_GRATUIDADE,
  0 AS DDISC_ID,
  0 AS DPRO_ID_INSTRUTOR,
  0 AS DCLIPF_ID,
  0 AS DCLIPJ_ID,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_BI,
  0 AS ENSAIOS,
  0 AS RELATORIOS,
  0 AS PROJETOS,
  0 AS PREVISTO_LAUDOS,
  0 AS PREVISTO_ENSAIOS,
  INLINE_VIEW.CH_ESTAGIO AS REALIZADO_HORAS_EFETIVAS_EST,
  INLINE_VIEW.HORAS_PRATICAS_PROFISSIONAIS AS REALIZADO_HORAS_PRATICA_APR,
  0 AS REALIZADO_HORAS_TOTAL,
  nvl(DISTINCT__A.CODCOLIGADA||DISTINCT__A.CR_TURMA,0) AS DCR_TURM_ID,
  0 AS PNE_ID,
  0 AS CONTA_PNE,
  '-' AS FLAG_PNE,
  nvl(INLINE_VIEW.ID_TURNO,0) AS DTURN_ID,
  'SGE' AS SISTEMA_ORIGEM,
  0 AS IDC_SGE_HIST,
  'I' IND_UPDATE
from  (((((((((
SELECT 
  JOIN16_A.BAIXARENDA AS BAIXARENDA ,
  JOIN16_A.CATEGORIA AS CATEGORIA ,
  JOIN16_A.EBEP AS EBEP ,
  JOIN16_A.GRATUIDADE AS GRATUIDADE ,
  JOIN16_A.IDPERLET AS IDPERLET ,
  JOIN16_A.RA AS RA ,
  JOIN16_A.CODFILIAL AS CODFILIAL ,
  JOIN16_A.CODTURMA AS CODTURMA ,
  JOIN16_A.DTMATRICULA AS DTMATRICULA ,
  JOIN16_A.ENTIDADE AS ENTIDADE ,
  JOIN16_A.CH_ESCOLAR AS CH_ESCOLAR ,
  JOIN16_A.CH_ESTAGIO AS CH_ESTAGIO ,
  JOIN16_A.HORAS_PRATICAS_PROFISSIONAIS AS HORAS_PRATICAS_PROFISSIONAIS ,
  JOIN16_A.CODCOLIGADA AS CODCOLIGADA ,
  JOIN16_A.RA_1 AS RA_1 ,
  JOIN16_A.CODPESSOA AS CODPESSOA ,
  JOIN16_A.CPF AS CPF ,
  JOIN16_A.TELEFONE1 AS TELEFONE1 ,
  JOIN16_A.TELEFONE2 AS TELEFONE2 ,
  JOIN16_A.TELEFONE3 AS TELEFONE3 ,
  JOIN16_A.CODGRADE AS CODGRADE ,
  JOIN16_A.CODCOLIGADA_1 AS CODCOLIGADA_1 ,
  JOIN16_A.CODSTATUS AS CODSTATUS ,
  JOIN16_A.DESCRICAO AS DESCRICAO ,
  JOIN16_A.CODCURSO AS CODCURSO ,
  JOIN16_A.CODCLIENTE AS CODCLIENTE ,
  JOIN16_A.DESCRICAO_1 AS DESCRICAO_1 ,
  JOIN16_A.CODTURNO AS CODTURNO ,
  JOIN16_A.CODFILIAL_1 AS CODFILIAL_1 ,
  DIM_ALUNOS.ID AS ID ,
  DIM_ALUNOS.UNID_GPS_CODIGO_ORIGEM AS UNID_GPS_CODIGO_ORIGEM ,
  DIM_ALUNOS.CPF AS CPF_1 ,
  DIM_ALUNOS.CPF_RESPONSAVEL AS CPF_RESPONSAVEL ,
  DIM_ALUNOS.RUA AS RUA ,
  DIM_ALUNOS.NUMERO AS NUMERO ,
  DIM_ALUNOS.BAIRRO AS BAIRRO ,
  DIM_ALUNOS.MUNICIPIO AS MUNICIPIO ,
  DIM_ALUNOS.RA AS RA_2 ,
  DIM_ALUNOS.FLAG_ATUAL AS FLAG_ATUAL ,
/*  DIM_SITUACAO_ALUNO.ID AS ID_1 ,
  DIM_SITUACAO_ALUNO.COD_ORIGEM_SGE AS COD_ORIGEM_SGE ,
  DIM_SITUACAO_ALUNO.FLAG_ATUAL AS FLAG_ATUAL_1 ,
  DIM_SITUACAO_ALUNO.CODCOLIGADA AS CODCOLIGADA_2 ,*/
  DIM_TIPOS_CLIENTES.COD_ORIGEM_SGE AS COD_ORIGEM_SGE_1 ,
  DIM_TIPOS_CLIENTES.FLAG_ATUAL AS FLAG_ATUAL_2 ,
/*  DIM_TURMAS.ID AS ID_3 ,
  DIM_TURMAS.SIGLA_TURMA AS SIGLA_TURMA ,
  DIM_TURMAS.FLAG_ATUAL AS FLAG_ATUAL_3 ,
  DIM_TURMAS.COD_FILIAL_SGE AS COD_FILIAL_SGE ,
  DIM_TURMAS.ID_PERLET_SGE AS ID_PERLET_SGE ,*/
  DIM_TURNOS.ID_TURNO AS ID_TURNO ,
  DIM_TURNOS.COD_ORIGEM_SGE AS COD_ORIGEM_SGE_3 ,
  DIM_TURNOS.COD_FILIAL AS COD_FILIAL ,
  DIM_TURNOS.FLAG_ATUAL AS FLAG_ATUAL_4 ,
  DIM_CURSOS_MODULOS.ID AS ID_4 ,
  DIM_CURSOS_MODULOS.FLAG_ATUAL AS FLAG_ATUAL_5 ,
  DIM_CURSOS_MODULOS.CURS_ID_SGE AS CURS_ID_SGE ,
  DIM_CURSOS_MODULOS.COD_GRADE AS COD_GRADE ,
  BI_SA1_TMP_A.A1_CGC AS A1_CGC ,
  BI_SA1_TMP_A.PES_ID AS PES_ID ,
  DIM_CLIENTES.ID AS ID_5 ,
  DIM_TEMPO.ID AS ID_6 ,
  DIM_FILIAIS_SGE.COD_ORIGEM_SGE AS COD_ORIGEM_SGE_4 ,
  DIM_FILIAIS_SGE.COD_COLIGADA AS COD_COLIGADA ,
  DIM_FILIAIS_SGE.FLAG_ATUAL AS FLAG_ATUAL_6 ,
  MAP_CONTA_EJA_A.CODCOLIGADA_3 AS CODCOLIGADA_4 ,
  MAP_CONTA_EJA_A.IDPERLET AS IDPERLET_1 ,
  MAP_CONTA_EJA_A.RA_1 AS RA_3 ,
  MAP_BUSCA_NOME_MAE_A.CODIGO AS CODIGO_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE1 AS TELEFONE1_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE2 AS TELEFONE2_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE3 AS TELEFONE3_1 ,
  MAP_BUSCA_NOME_MAE_A.CODPESSOAMAE AS CODPESSOAMAE ,
  MAP_BUSCA_NOME_MAE_A.CODCOLIGADA AS CODCOLIGADA_5 ,
  MAP_BUSCA_NOME_MAE_A.RA AS RA_4   
FROM 
  ((((((((/*(*/(/*(*/ODI_DDABI_EXEC.C$_AAQKQSO5PRRESSHH77VII3LSKAE JOIN16_A  LEFT OUTER JOIN  DDA_BIDW.DIM_ALUNOS DIM_ALUNOS  
    ON  DIM_ALUNOS.RA                              = TRIM(JOIN16_A.RA) 
   AND DIM_ALUNOS.UNID_GPS_CODIGO_ORIGEM          = JOIN16_A.ENTIDADE 
   AND DIM_ALUNOS.FLAG_ATUAL                      = 1
    /* )  LEFT OUTER JOIN  DDA_BIDW.DIM_SITUACAO_ALUNO DIM_SITUACAO_ALUNO  
    ON  DIM_SITUACAO_ALUNO.CODCOLIGADA             = JOIN16_A.CODCOLIGADA_1
   AND DIM_SITUACAO_ALUNO.COD_ORIGEM_SGE         = JOIN16_A.CODSTATUS 
   and DIM_SITUACAO_ALUNO.FLAG_ATUAL              = 1*/
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TIPOS_CLIENTES DIM_TIPOS_CLIENTES  
    ON  DIM_TIPOS_CLIENTES.COD_ORIGEM_SGE          =  JOIN16_A.CATEGORIA 
   AND DIM_TIPOS_CLIENTES.FLAG_ATUAL              = 1
    /* )  LEFT OUTER JOIN  DDA_BIDW.DIM_TURMAS DIM_TURMAS  
    ON  TRIM(DIM_TURMAS.SIGLA_TURMA )             = TRIM(JOIN16_A.CODTURMA) 
    AND DIM_TURMAS.COD_FILIAL_SGE                 = JOIN16_A.CODFILIAL 
    AND DIM_TURMAS.ID_PERLET_SGE                  = JOIN16_A.IDPERLET 
    AND DIM_TURMAS.FLAG_ATUAL                     = 1*/
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TURNOS DIM_TURNOS  
    ON  DIM_TURNOS.COD_ORIGEM_SGE                 = JOIN16_A.CODTURNO  
   and DIM_TURNOS.COD_FILIAL                      = JOIN16_A.CODFILIAL_1 
   and DIM_TURNOS.FLAG_ATUAL                      = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_CURSOS_MODULOS DIM_CURSOS_MODULOS  
    ON  DIM_CURSOS_MODULOS.CURS_ID_SGE             = JOIN16_A.CODCURSO 
   and DIM_CURSOS_MODULOS.COD_GRADE               = JOIN16_A.CODGRADE 
   and DIM_CURSOS_MODULOS.FLAG_ATUAL              = 1
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_BAPQP1375DG02H35C6UDPMI14B0 BI_SA1_TMP_A  
    ON  TRIM(BI_SA1_TMP_A.A1_CGC)                    = JOIN16_A.CPF  
   and TRIM(BI_SA1_TMP_A.A1_CGC) is not null
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_CLIENTES DIM_CLIENTES  
    ON  BI_SA1_TMP_A.PES_ID                             = DIM_CLIENTES.ID
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TEMPO DIM_TEMPO  
    ON  DIM_TEMPO.ID                             = TO_CHAR(JOIN16_A.DTMATRICULA, 'RRRRMM')
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_FILIAIS_SGE DIM_FILIAIS_SGE  
    ON  DIM_FILIAIS_SGE.COD_ORIGEM_SGE            = JOIN16_A.CODFILIAL 
   AND DIM_FILIAIS_SGE.COD_COLIGADA               = JOIN16_A.ENTIDADE 
   and DIM_FILIAIS_SGE.FLAG_ATUAL                 = 1
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_0APG873OR4M97A2KN7GKKQNTAMK MAP_CONTA_EJA_A  
    ON  MAP_CONTA_EJA_A.CODCOLIGADA_3                = JOIN16_A.ENTIDADE 
   AND MAP_CONTA_EJA_A.IDPERLET                     = JOIN16_A.IDPERLET  
   AND TRIM(MAP_CONTA_EJA_A.RA_1)            = TRIM(JOIN16_A.RA)
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_1A47RDE5DD55RFJV07P6N6HG2TC MAP_BUSCA_NOME_MAE_A  
    ON  MAP_BUSCA_NOME_MAE_A.CODIGO                 = JOIN16_A.CODPESSOA
    and MAP_BUSCA_NOME_MAE_A.CODCOLIGADA            = JOIN16_A.CODCOLIGADA
    and MAP_BUSCA_NOME_MAE_A.RA                     = JOIN16_A.RA_1
  ) INLINE_VIEW  LEFT OUTER JOIN  (
SELECT 
  MAP_BUSCA_NOME_PAI_A.CODIGO AS CODIGO ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE1 AS TELEFONE1 ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE2 AS TELEFONE2 ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE3 AS TELEFONE3 ,
  MAP_BUSCA_NOME_PAI_A.CODPESSOAPAI AS CODPESSOAPAI ,
  MAP_BUSCA_NOME_PAI_A.CODCOLIGADA AS CODCOLIGADA ,
  MAP_BUSCA_NOME_PAI_A.RA AS RA   
FROM 
  ODI_DDABI_EXEC.C$_2ATP1SD3QUCJQI3AP7J3BKNHD50 MAP_BUSCA_NOME_PAI_A  
  ) MAP_BUSCA_NOME_PAI_A_1  
    ON  MAP_BUSCA_NOME_PAI_A_1.CODIGO                 = INLINE_VIEW.CODPESSOA  ------PAREI AQUI
    and MAP_BUSCA_NOME_PAI_A_1.CODCOLIGADA            = INLINE_VIEW.CODCOLIGADA
    and MAP_BUSCA_NOME_PAI_A_1.RA                     = INLINE_VIEW.RA_1
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_3APRDT8PFN8F6O1GS6KL27PPP5O MAP_BUSCA_RESP_ACADEMICO_A  
    ON  trim(MAP_BUSCA_RESP_ACADEMICO_A.RA)         = trim(INLINE_VIEW.RA_2) 
    and MAP_BUSCA_RESP_ACADEMICO_A.CODCOLIGADA      = INLINE_VIEW.ENTIDADE
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_4APIS57EF8ABC13517S2COTN7ME MAP_BUSCA_DADOS_EMPRESA_PA_A  
    ON  MAP_BUSCA_DADOS_EMPRESA_PA_A.CODIGO        = MAP_BUSCA_NOME_PAI_A_1.CODPESSOAPAI 
    AND MAP_BUSCA_DADOS_EMPRESA_PA_A.CODCOLIGADA   = INLINE_VIEW.ENTIDADE 
    AND MAP_BUSCA_DADOS_EMPRESA_PA_A.RA            = INLINE_VIEW.RA
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_5A7OLLC677DR1E12J7N8R7L4TMV MAP_BUSCA_DADOS_EMPRESA_MA_A  
    ON  MAP_BUSCA_DADOS_EMPRESA_MA_A.CODIGO       = INLINE_VIEW.CODPESSOAMAE 
    AND MAP_BUSCA_DADOS_EMPRESA_MA_A.CODCOLIGADA   = INLINE_VIEW.ENTIDADE 
    AND MAP_BUSCA_DADOS_EMPRESA_MA_A.RA            = INLINE_VIEW.RA
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_6A46R0F9E4S8NOIPI6PLGUV39HH DISTINCT__A  
    ON  DISTINCT__A.CODCOLIGADA_2             = INLINE_VIEW.ENTIDADE 
   AND DISTINCT__A.CODFILIAL_2            = INLINE_VIEW.CODFILIAL  
   AND TRIM(DISTINCT__A.CODTURMA )          = TRIM(INLINE_VIEW.CODTURMA)  
   AND DISTINCT__A.IDPERLET          = INLINE_VIEW.IDPERLET
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_7ATSV114EBEQHVGVJ6OS2245TPB MAP_BUSCA_IND_PROD_A  
    ON  MAP_BUSCA_IND_PROD_A.DCR_ID               = DISTINCT__A.CR  
   and MAP_BUSCA_IND_PROD_A.ID               = INLINE_VIEW.ID_6  
    and MAP_BUSCA_IND_PROD_A.DTPMA_ID               =  case when (INLINE_VIEW.EBEP = 1 and INLINE_VIEW.GRATUIDADE = 0) then 3   
                                                             when (INLINE_VIEW.EBEP = 1 and INLINE_VIEW.GRATUIDADE = 1) then 3 
                                                             --   when (ODS_SMATRICPLCOMPL.EBEP = 0 and (SUM(MAP_BUSCA_GRATUIDADE.VALORSERVICO-MAP_BUSCA_GRATUIDADE.DESCONTO-MAP_BUSCA_GRATUIDADE.VALORBOLSA))<= 0 then 1   
                                                             else 2 
                                                        end
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_GRUPO_SERV DIM_GRUPO_SERV  
    ON  MAP_BUSCA_IND_PROD_A.DGCS_ID                    =  DIM_GRUPO_SERV.ID
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_8AJUDM8BNAPPQOJH07GCQEARAST MAP_BUSCA_IND_DN_A  
    ON  MAP_BUSCA_IND_DN_A.DCR_ID                   = DISTINCT__A.CR  
and MAP_BUSCA_IND_DN_A.ID                   = INLINE_VIEW.ID_6  
and MAP_BUSCA_IND_DN_A.DTPMA_ID      =  case when (INLINE_VIEW.EBEP = 1 and INLINE_VIEW.GRATUIDADE = 0) then 3   
                                                  when (INLINE_VIEW.EBEP = 1 and INLINE_VIEW.GRATUIDADE = 1) then 3 
                                                             --  when (ODS_SMATRICPLCOMPL.EBEP = 0 and (SUM(MAP_BUSCA_GRATUIDADE.VALORSERVICO-MAP_BUSCA_GRATUIDADE.DESCONTO-MAP_BUSCA_GRATUIDADE.VALORBOLSA))<= 0 then 1   
                                                    else 2 
                                              end
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_9AI84KC6KGNL84JI06M01OOAUPU MAP_BUSCA_IND_ATEND_A  
    ON  MAP_BUSCA_IND_ATEND_A.DCR_ID                  = DISTINCT__A.CR  
   and MAP_BUSCA_IND_ATEND_A.ID                      = INLINE_VIEW.ID_6  
   --REVISAR A REGRA ABAIXO 
   and MAP_BUSCA_IND_ATEND_A.DTPMA_ID                =  case when (INLINE_VIEW.EBEP = 1 and INLINE_VIEW.GRATUIDADE = 0) then 3   
                                                            when (INLINE_VIEW.EBEP = 1 and INLINE_VIEW.GRATUIDADE = 1) then 3 
                                                              --  when (ODS_SMATRICPLCOMPL.EBEP = 0 and (SUM(MAP_BUSCA_GRATUIDADE.VALORSERVICO-MAP_BUSCA_GRATUIDADE.DESCONTO-MAP_BUSCA_GRATUIDADE.VALORBOLSA))<= 0 then 1   
                                                            else 2 
                                                      end
where  (1=1)
) S
)


-- decodes para colocar no OBIEE

-- esse item considera todas as combinacoes possiveis para calcular o proximo item calculado. colocar mais os relacionados ao ano
DECODE(SUM(Mes),1,1,2,1,3,1,4,1,5,1,6,1,10,2,20,2,30,2,40,2,50,2,60,2,61,3,63,3,64,3,65,3,66,3,11,3,12,3,13,3,14,3,15,3,16,3,21,3,22,3,23,3,24,3,25,3,26,3,31,3,32,3,33,3,34,3,35,3,36,3,41,3,42,3,43,3,44,3,45,3,46,3,51,3,52,3,53,3,54,3,55,3,56,3)
-- esse é o item calculado final que calcula os valores de acordo com o os meses ou range de meses escolhido
DECODE(Item14,1,1,2,1,3,2)

-- exemplo da coluna a ser criada

/*

DT_ID	MEDIDA	MES
201801	0,25	1
201802	0,25	1
201803	0,25	1
201804	0,25	1
201805	0,25	1
201806	0,25	1
201807	0,25	10
201808	0,25	10
201809	0,25	10
201810	0,25	10
201811	0,25	10
201812	0,25	10
201901	0,25	1
201902	0,25	1
201903	0,25	1
201904	0,25	1
201905	0,25	1
201906	0,25	1
201907	0,25	10
201908	0,25	10
201909	0,25	10
201910	0,25	10
201911	0,25	10
201912	0,25	10

*/

-- ligar um campo nulo no where
-- BUSCA UO E CR
select sma.*
from
  (      select nvl(t2.cr, t1.cr) cr,
               nvl(t2.uo, t1.uo) uo,
               t1.habilitacao,
               t2.habilitacao_turma,
               t2.codturma,
               t1.coligada
          from (select shf.codcoligada         coligada,
                       shf.idhabilitacaofilial habilitacao,
                       sit.itemcontabil        cr,
                       shf.codccusto           uo
                  from rm.shabilitacaofilial        shf,
                       rm.zipmatrizdadosfinanceiros zmaf,
                       rm.sitemcontabilprotheus     sit
                 where shf.codcoligada = zmaf.CODCOLIGADA
                   and shf.idhabilitacaofilial = zmaf.IDHABILITACAOFILIAL
                   and SIT.CODCOLIGADA = zmaf.CODCOLIGADA
                   and SIT.IDITEMCONTABIL = zmaf.IDITEMCONTABIL
                /*and shf.codcoligada = 4*/
                ) t1,
               (select distinct stur.codcoligada         coligada,
                                stur.idhabilitacaofilial habilitacao_turma,
                                stur.codccusto           UO,
                                SIt.Itemcontabil         CR,
                                stur.codturma
                  from rm.sitemcontabilprotheus    sit,
                       rm.zipturmadadosfinanceiros ztu,
                       rm.sturma                   stur--,
                    --   rm.smatricpl                sma1
                 where Ztu.CODCOLIGADA = SIT.CODCOLIGADA
                   and Ztu.IDITEMCONTABIL = SIT.IDITEMCONTABIL
                   and stur.CODCOLIGADA = ztu.CODCOLIGADA
                   and stur.CODFILIAL = ztu.CODFILIAL
                   and stur.CODTURMA = ztu.CODTURMA
                   and stur.IDPERLET = ztu.IDPERLET
                ) t2
         where t1.coligada = t2.coligada(+)
           and t1.habilitacao = t2.habilitacao_turma(+)
         ) uo_cr
      , rm.smatricpl  sma
where sma.codcoligada = uo_cr.coligada
  and sma.idhabilitacaofilial = uo_cr.habilitacao               
  and sma.codturma            = nvl(uo_cr.codturma,sma.codturma)-- caso nao encontre a turma, liga com a mesma codturma, ou seja, fica como se fosse um where (1=1), DESCONSIDERANDO ESSA CLAUSULA CASO NAO ENCONTRE
  and dtmatricula between to_date('01/04/2018', 'dd/mm/yyyy') and
  to_date('30/04/2018', 'dd/mm/yyyy') -- 13311
--and habilitacao = 1269
 and sma.ra = '00000255' --00028204


select *
from
  (      select nvl(t2.cr, t1.cr) cr,
               nvl(t2.uo, t1.uo) uo,
               t1.habilitacao,
               t2.habilitacao_turma,
               t2.codturma,
               t1.coligada
          from (select shf.codcoligada         coligada,
                       shf.idhabilitacaofilial habilitacao,
                       sit.itemcontabil        cr,
                       shf.codccusto           uo
                  from dda_bi.ods_shabilitacaofilial        shf,
                       dda_bi.ods_zipmatrizdadosfinanceiros zmaf,
                       dda_bi.ods_sitemcontabilprotheus     sit
                 where shf.codcoligada = zmaf.CODCOLIGADA
                   and shf.idhabilitacaofilial = zmaf.IDHABILITACAOFILIAL
                   and SIT.CODCOLIGADA = zmaf.CODCOLIGADA
                   and SIT.IDITEMCONTABIL = zmaf.IDITEMCONTABIL
                   and shf.flag_atual = 1
                   and zmaf.flag_atual = 1
                   and sit.flag_atual = 1
                /*and shf.codcoligada = 4*/
                ) t1,
               (select distinct stur.codcoligada         coligada,
                                stur.idhabilitacaofilial habilitacao_turma,
                                stur.codccusto           UO,
                                SIt.Itemcontabil         CR,
                                stur.codturma
                  from dda_bi.ods_sitemcontabilprotheus    sit,
                       dda_bi.ods_zipturmadadosfinanceiros ztu,
                       dda_bi.ods_sturma                   stur--,
                    --   rm.smatricpl                sma1
                 where Ztu.CODCOLIGADA = SIT.CODCOLIGADA
                   and Ztu.IDITEMCONTABIL = SIT.IDITEMCONTABIL
                   and stur.CODCOLIGADA = ztu.CODCOLIGADA
                   and stur.CODFILIAL = ztu.CODFILIAL
                   and stur.CODTURMA = ztu.CODTURMA
                   and stur.IDPERLET = ztu.IDPERLET
                   and ztu.flag_atual = 1
                   and sit.flag_atual = 1
                   and stur.flag_atual = 1
                ) t2
         where t1.coligada = t2.coligada(+)
           and t1.habilitacao = t2.habilitacao_turma(+)
         ) uo_cr
      , 
(select ods_smatricpl.ra, ods_smatricpl.codcoligada, ods_smatricpl.idhabilitacaofilial, ods_smatricpl.codturma 
from dda_bi.ods_smatricpl, dda_bi.ods_smatricplcompl where
ods_SMATRICPL.CODCOLIGADA                        = ods_SMATRICPLCOMPL.CODCOLIGADA
   AND ods_SMATRICPL.IDPERLET                       = ods_SMATRICPLCOMPL.IDPERLET
   AND ods_SMATRICPL.IDHABILITACAOFILIAL            = ods_SMATRICPLCOMPL.IDHABILITACAOFILIAL
   AND TRIM(ods_SMATRICPL.RA)                       = TRIM(ods_SMATRICPLCOMPL.RA)
   and ods_smatricpl.flag_atual = 1
   and ods_smatricplcompl.flag_atual=1
   and ods_SMATRICPL.DTMATRICULA between to_date('01/04/2018','dd/mm/yyyy')and to_date('30/04/2018','dd/mm/yyyy'))sma
where sma.codcoligada = uo_cr.coligada
  and sma.idhabilitacaofilial = uo_cr.habilitacao               
  and sma.codturma            = nvl(uo_cr.codturma,sma.codturma)
 -- and ra = '00000255'

--)



--- NOVA REGRA DE DATA DE CARGA E CONTAGEM DAS MATRICULAS BI EDUCACAO

select case when sma.codcoligada = 2 
            then
                 case when sma.dtmatricula < stu.dtinicial
                      then stu.dtinicial
                      else sma.dtmatricula
                 end 
       else sma.dtmatricula
       end data_carga,             
       sma.ra,
       sma.dtmatricula,
       sma.reccreatedon,
       sma.recmodifiedon, 
       stu.dtinicial,
       stu.dtfinal,
       stu.reccreatedon,
       stu.recmodifiedon
  from rm.smatricpl sma
  join rm.sturma stu
    on sma.codcoligada = stu.codcoligada
   and sma.idperlet = stu.idperlet
   and sma.codfilial = stu.codfilial
   and sma.codturma = stu.codturma
  where sma.codcoligada = 4
  and sma.dtmatricula < stu.dtinicial
  
  
  -- TRAZ OS FORA DO PERIODO
SELECT * FROM ODS_SMATRICPL SMA, ODS_STURMA STU
WHERE SMA.CODCOLIGADA = STU.CODCOLIGADA
AND  SMA.IDPERLET = STU.IDPERLET
AND  SMA.CODFILIAL = STU.CODFILIAL
AND  SMA.CODTURMA = STU.CODTURMA
AND SMA.CODCOLIGADA = 2
--AND SMA.RECCREATEDON > STU.DTFINAL
AND SMA.DTMATRICULA BETWEEN TO_DATE('01/01/2018','DD/MM/YYYY') AND TO_DATE('31/03/2018','DD/MM/YYYY')



---- testes educacao

select *-- count(*), sum(realizado_matricula)--a.nome || t.sigla_turma
from fat_educacao f , dim_alunos a , dim_turmas t, dim_cursos_modulos m , dim_situacao_aluno s, DIM_CENTROS_RESP RESP
where /*f.sistema_origem = 'SGE'
and*/ F.demp_id = 2
and f.dturm_id = t.id
and f.dalu_id = a.id 
and f.dcurm_id = m.id
AND F.DSIAL_ID = S.ID
AND F.DCR_ID = RESP.ID
--and a.nome = 'LUISA DIEFENBACH'
--and f.dalu_id = 50001770600
--and m.curs_titulo like 'EJA%'
--and f.dt_id='201804'
--and substr(f.dt_id,1,4)='2018'
--and f.dt_id between 201801 and 201803
--AND T.NOME = '18202018004'
AND T.SIGLA_TURMA = '08181N1ME3R'
AND A.NOME = 'ANGÉLICA ÁVILA DUTRA'

SELECT * FROM dim_turmas DT WHERE DT.COD_ORIGEM_SGE= '18202018004'
SELECT * FROM DIM_ALUNOS DA WHERE DA.NOME = 'LUISA DIEFENBACH'


select * from dim_cursos_modulos where curs_titulo like 'EJA%'


select distinct f.entr_disc_saida from fat_educacao f , dim_alunos a , dim_turmas t, dim_cursos_modulos m
where  --f.sistema_origem = 'SGE'
/*and*/ demp_id = 2
and f.dturm_id = t.id
and f.dalu_id = a.id 
and f.dcurm_id = m.id
--and a.nome = 'LUISA DIEFENBACH'
--and f.dalu_id = 50001770600
and m.curs_titulo like 'EJA%'
and substr(f.dt_id,1,4)='201804'
--and f.dt_id between 201801 and 201803
--AND T.NOME = '18202018004'




select dt.ano,max(num_calc_eja), min(num_calc_eja),sum(0),
       (case
         when  cr.codigo_5 in (302010403,302010402) then
          (case
            when max(num_calc_eja) = 1 then
             1
           else
             0
           end + case
            when min(num_calc_eja) = -1 then
             1
            else
             0
          end) 
       else sum(f.realizado_matricula) end ) eja,
    --      count(distinct dalu_id)
       sum(num_calc_eja) cc
/*     
        case when
            max(num_calc_eja) != 1 or min(num_calc_eja)  != -1 then 1
          else 0 end 
*/ --  f.dalu_id, count(*)
  from fat_educacao f, dim_tempo dt, dim_centros_resp cr, dim_turmas t
 where f.dt_id = dt.id
   and dt.ano = 2018
   and f.dcr_id = cr.id
   and f.dturm_id = t.id
--and f.dalu_id in ( 50001770600) --,50001785509)
   and cr.codigo_5 in (302010403,302010402)
 group by dt.ano
;

-----------------------------------


-- pai, mae e responsavel

--mae 
      select  codigo_aluno,
               nome_aluno,
               pp_mae.codigo       codigo_mae,
               pp_mae.nome         nome_mae,
               pp_mae.dtnascimento,
               pp_mae.cpf,
               pp_mae.telefone1 tel_pai1,
               pp_mae.telefone2 tel_pai2,
               pp_mae.telefone3 tel_pai3
          from ODS_ppessoa pp_mae,
               (select pp.codigo          codigo_aluno,
                       pp.nome            nome_aluno,
                       spmae.codpessoamae
                  from ODS_ppessoa pp, ODS_spessoa spmae
                 where pp.codigo = spmae.codigo) aluno
         where pp_mae.codigo = aluno.codpessoamae/*(+)*/ --sp_mae,
         and codigo_aluno = 12220
         
-- pai

      select codigo_aluno,
               nome_aluno,
               ppp.codigo       codigo_pai,
               ppp.nome         nome_pai,
               ppp.dtnascimento,
               ppp.cpf,
               ppp.telefone1 tel_pai1,
               ppp.telefone2 tel_pai2,
               ppp.telefone3 tel_pai3
          from ODS_ppessoa ppp,
               (select pp.codigo          codigo_aluno,
                       pp.nome            nome_aluno,
                       pp.telefone1,
                       pp.telefone2,
                       pp.codusuario,
                       spai.codpessoapai,
                       spai.empresanome,
                       spai.empresatelefone
                  from ODS_ppessoa pp, ODS_spessoa spai
                 where pp.codigo = spai.codigo) aluno
         where ppp.codigo = aluno.codpessoapai/*(+)*/ --sp_mae,
         and codigo_aluno = 12220
         
         
-- responsavel

          select codigo_aluno,
               nome_aluno,
               ppp.codigo       codigo_mae,
               ppp.nome         nome_mae,
               ppp.dtnascimento,
               ppp.cpf,
               ppp.telefone1 tel_pai1,
               ppp.telefone2 tel_pai2,
               ppp.telefone3 tel_pai3
          from ODS_ppessoa ppp,
               (select pp.codigo          codigo_aluno,
                       pp.nome            nome_aluno,
                       spai.codpessoapai
                  from ODS_ppessoa pp, ODS_spessoa spai
                 where pp.codigo = spai.codigo) aluno
         where ppp.codigo = aluno.codpessoapai/*(+)*/ --sp_mae,
         and codigo_aluno = 12220
                 
-- na funcao busco o codigo do aluno e o codpessoapai ou codpessoamae
      select codigo_aluno,
               nome_aluno,
               codpessoapai,
               ppp.codigo       codigo_pai,
               ppp.nome         nome_pai,
               ppp.dtnascimento,
               ppp.cpf,
               ppp.telefone1 tel_pai1,
               ppp.telefone2 tel_pai2,
               ppp.telefone3 tel_pai3
          from ODS_ppessoa ppp,
               (select pp.codigo          codigo_aluno,
                       pp.nome            nome_aluno,
                       pp.telefone1,
                       pp.telefone2,
                       pp.codusuario,
                       spai.codpessoapai codpessoapai,
                       spai.empresanome,
                       spai.empresatelefone
                  from ODS_ppessoa pp, ODS_spessoa spai
                 where pp.codigo = spai.codigo) aluno
         where ppp.codigo = aluno.codpessoapai/*(+)*/ --sp_mae,
      --   and codpessoapai = 3345
         and codigo_aluno = 12048
         
/*-- vou na spessoa pelo saluno e pego o codpessoa pai ou codpessoa mae         
select * from ods_spessoa where ods_spessoa.codigo =        12220 */

-- pelo codigo do aluno ligo a ods_saluno pelo codpessoa e busco o ra
select * from ods_saluno where ods_saluno.codpessoa = 12220

-- com o ra eu ligo com a dimensao de alunos






         
         
select * /*pp.codigo          codigo_aluno,
                       pp.nome            nome_aluno,
                       pp.telefone1,
                       pp.telefone2,
                       pp.codusuario,
                       spai.codpessoapai,
                       spai.empresanome,
                       spai.empresatelefone*/
                  from ODS_ppessoa pp, ODS_spessoa spai
                 where pp.codigo = spai.codpessoapai
               --  and empresanome is not null
                 and pp.codigo = 8737



select * from ods_ppessoa where codigo = 44346


-- identifica responsavel

select pp1.codigo codigo_aluno, pp1. nome_aluno, spai.codpessoapai
  from ods_saluno pp1, ODS_spessoa spai
 where pp1.codpessoaraca = spai.codigo
         
select * from ods_saluno where ra = 17431

select * from 

(select * /*osa.ra, osa.codpessoa cod_aluno, osa.codpessoaraca cod_resp, opp.cpf cpf_resp, 
        opp.telefone1 fone1_resp, opp.telefone2 fone2_resp,
        opp.telefone3 fone3_resp*/
 from ods_saluno osa, ods_ppessoa opp
 where   osa.codpessoaraca = opp.codigo(+) ) dados_resp


select osa.ra, osa.codpessoa cod_aluno, osa.codpessoaraca cod_resp, opp.cpf cpf_resp, 
        opp.telefone1 fone1_resp, opp.telefone2 fone2_resp,
        opp.telefone3 fone3_resp
 from ods_saluno osa, ods_ppessoa opp
 where   osa.codpessoa = opp.codigo(+) and ra = 17431



         
select * from ods_ppessoa p where p.codigo = 5542
select * from ods_spessoa p where p.codigo = 5542

select * from ods_spessoa


select * from ods_spessoa sp, ods_ppessoa pp
where sp.codigo = pp.codigo and pp.codigo = 5542

-- alter table dinamico

select 'alter table ' || a.TABLE_NAME || ' modify ' || a.COLUMN_NAME ||
       ' VARCHAR2(' || (a.DATA_LENGTH + 5) || ');',
       a.DATA_LENGTH,
       a.*
  from all_tab_columns a
 where a.OWNER = 'DDA_BI'
   and a.DATA_TYPE = 'VARCHAR2'
   and a.DATA_LENGTH < 3995
   and a.TABLE_NAME like ('ODS_%') 
 --  or a.TABLE_NAME in('DIM_TURMAS','DIM_ALUNOS','DIM_DISCIPLINAS','DIM_FILIAIS_SGE',
 --                     'DIM_GRUPO_SERV','DIM_PREDIOS','DIM_SITUACAO_ALUNO','DIM_TEMPO',
 --                     'DIM_TIPOS_CLIENTES','DIM_TURNOS','FAT_EDUCACAO')
  -- in ('ODS_STURMA','DIM_TURMAS')


--- calculo eja


select codcoligada, idperlet, ra, ano, sum(contador) from (
select codcoligada,ra, dtmatricula,idperlet,extract (year from DTMATRICULA)ano, case when extract (month from DTMATRICULA)  <=6 then 1 else 2 end semestre, count(1)contador
from (select ODS_SMATRICPL.codcoligada, ODS_SMATRICPL.ra, ODS_SMATRICPL.idperlet, ODS_SMATRICPL.DTMATRICULA from 
dda_bi.ods_shabilitacaofilial , dda_bi.ods_shabilitacaoaluno ,
dda_bi.ods_smatricpl , dda_bi.ods_sgrade 
where    ODS_SGRADE.CODCOLIGADA                         = ODS_SHABILITACAOFILIAL.CODCOLIGADA
   and ODS_SGRADE.CODCURSO                        = ODS_SHABILITACAOFILIAL.CODCURSO
   and ODS_SGRADE.CODHABILITACAO                  = ODS_SHABILITACAOFILIAL.CODHABILITACAO
   and ODS_SGRADE.CODGRADE                        = ODS_SHABILITACAOFILIAL.CODGRADE 
   AND ODS_SGRADE.CODCOLIGADA                     = 2
   AND ODS_SGRADE.CODCURSO                       IN ('NOVA EJA', 'EJA-PRO', 'EJA EM', 'EJA EF II')
   and ODS_SGRADE.FLAG_ATUAL = 1
   
   AND ODS_SHABILITACAOFILIAL.CODCOLIGADA         = ODS_SHABILITACAOALUNO.CODCOLIGADA
   and ODS_SHABILITACAOFILIAL.IDHABILITACAOFILIAL = ODS_SHABILITACAOALUNO.IDHABILITACAOFILIAL
   and ODS_SHABILITACAOFILIAL.FLAG_ATUAL = 1
  
   AND ODS_SHABILITACAOALUNO.CODCOLIGADA          = ODS_SMATRICPL.CODCOLIGADA
   and ODS_SHABILITACAOALUNO.IDHABILITACAOFILIAL  = ODS_SMATRICPL.IDHABILITACAOFILIAL
   and trim(ODS_SHABILITACAOALUNO.RA)             = trim(ODS_SMATRICPL.RA)
   and ODS_SHABILITACAOALUNO.FLAG_ATUAL = 1
   and ODS_SMATRICPL.FLAG_ATUAL = 1
   and ODS_SMATRICPL.RA = '00000007'
)group by codcoligada,ra, dtmatricula,idperlet,extract (year from DTMATRICULA), ca
se when extract (month from DTMATRICULA)  <=6 then 1 else 2 end
)group by codcoligada, idperlet, ra, ano




 CASE WHEN ODS_SMATRICPL.CODCOLIGADA = 2 
                            THEN
                                CASE WHEN ODS_SMATRICPL.DTMATRICULA < ODS_STURMA.DTINICIAL
                                     THEN TO_CHAR(ODS_STURMA.DTINICIAL,'RRRRMM')
                                     ELSE TO_CHAR(ODS_SMATRICPL.DTMATRICULA,'RRRRMM')
                                END
                            ELSE TO_CHAR(ODS_SMATRICPL.DTMATRICULA,'RRRRMM')
                        END
  
 
 --senai

  nvl(Decode(a.mes,
                        1,
                        a.entrada_nova + a.entrada_residual +
                        a.entrada_transferencia - a.saida_transferido,
                        a.entrada_nova + a.entrada_transferencia -
                        a.saida_transferido),
                 0) REALIZADO_MATRICULA
				 

-- converter html para texto

trim(regexp_replace(UTL_I18N.unescape_reference(column_name), '<[^>]+>')) 


------ UPDATE ANTIGO EJA


CREATE OR REPLACE PROCEDURE UPDATE_EJA_PRC (p_DT_INI VARCHAR, P_DT_FIM VARCHAR) IS


CURSOR UPD_EJA IS


select RA, SEMESTRE, DT_MODIFICACAO, COD_STATUS
from DDA_BIDW.TMP_UPDATE_EJA;


TYPE UPD_EJA_TYPE IS TABLE OF UPD_EJA%ROWTYPE INDEX BY PLS_INTEGER;
L_UPD_EJA UPD_EJA_TYPE;

v_RA                DDA_BIDW.TMP_UPDATE_EJA.RA%type;
v_SEMESTRE          DDA_BIDW.TMP_UPDATE_EJA.SEMESTRE%type;
v_DT_MODIFICACAO    DDA_BIDW.TMP_UPDATE_EJA.DT_MODIFICACAO%type;
v_COD_STATUS        DDA_BIDW.TMP_UPDATE_EJA.COD_STATUS%type;
V_LIMITE NUMBER:=10000;
--v_dt_i  number;
--v_dt_f  number;


BEGIN
  
--v_dt_i  :=p_DT_INI;
--v_dt_f  :=P_DT_FIM;

OPEN UPD_EJA;
LOOP
  FETCH UPD_EJA BULK COLLECT  INTO L_UPD_EJA LIMIT V_LIMITE;
  FOR i IN 1 ..L_UPD_EJA.COUNT
   loop
     update DDA_BIDW.FAT_EDUCACAO set ENTR_DISC_SAIDA = 1
     where DALU_ID =  (select ID from (
                 (SELECT distinct dalu.ID ID, MAX(fat.dturm_id)
                 FROM DDA_BIDW.FAT_EDUCACAO fat, DDA_BIDW.DIM_ALUNOS dalu ,DDA_BIDW.DIM_SITUACAO_ALUNO dsit, DDA_BIDW.DIM_TURMAS tur
                 WHERE fat.dalu_id = dalu.id
                 and   fat.dsial_id = dsit.id
                 and   fat.dturm_id = tur.id
                 and   dalu.flag_atual = 1
                 and   dsit.flag_atual = 1
                 and   tur.flag_atual = 1
                 and FLAG_CONTA_MATRICULA = 'S'
                 and fat.sistema_origem = 'SGE'
                 and dt_id between 201801 and 201812
                 and ra = L_UPD_EJA(i).RA
                 and dsit.cod_origem_sge = L_UPD_EJA(i).COD_STATUS
                 and codcoligada = 2
                 group by dalu.ID)))
     and  Dsial_Id = (SELECT distinct dsit.ID
                 FROM DDA_BIDW.FAT_EDUCACAO fat, DDA_BIDW.DIM_ALUNOS dalu ,DDA_BIDW.DIM_SITUACAO_ALUNO dsit
                 WHERE fat.dalu_id = dalu.id
                 and   fat.dsial_id = dsit.id
                 and   dalu.flag_atual = 1
                 and   dsit.flag_atual = 1
                 and FLAG_CONTA_MATRICULA = 'S'
                 and fat.sistema_origem = 'SGE'
                 and dt_id between 201801 and 201812
                 and ra = L_UPD_EJA(i).RA
                 and cod_origem_sge = L_UPD_EJA(i).COD_STATUS
                 and codcoligada = 2);


   end loop;

     EXIT WHEN L_UPD_EJA.count < V_LIMITE;


END LOOP;
CLOSE UPD_EJA;
commit;

END UPDATE_EJA_PRC;


--- UPDATE NOVO EJA

CREATE OR REPLACE PROCEDURE UPDATE_EJA_TESTE_PRC (p_DT_INI VARCHAR, P_DT_FIM VARCHAR) IS


CURSOR UPD_EJA IS


select RA, SEMESTRE, DT_MODIFICACAO, COD_STATUS
from DDA_BIDW.TMP_UPDATE_EJA;


TYPE UPD_EJA_TYPE IS TABLE OF UPD_EJA%ROWTYPE INDEX BY PLS_INTEGER;
L_UPD_EJA UPD_EJA_TYPE;

v_RA                DDA_BIDW.TMP_UPDATE_EJA.RA%type;
v_SEMESTRE          DDA_BIDW.TMP_UPDATE_EJA.SEMESTRE%type;
v_DT_MODIFICACAO    DDA_BIDW.TMP_UPDATE_EJA.DT_MODIFICACAO%type;
v_COD_STATUS        DDA_BIDW.TMP_UPDATE_EJA.COD_STATUS%type;
V_LIMITE NUMBER:=10000;
--v_dt_i  number;
--v_dt_f  number;


BEGIN
  
--v_dt_i  :=p_DT_INI;
--v_dt_f  :=P_DT_FIM;

OPEN UPD_EJA;
LOOP
  FETCH UPD_EJA BULK COLLECT  INTO L_UPD_EJA LIMIT V_LIMITE;
  FOR i IN 1 ..L_UPD_EJA.COUNT
   loop
     update DDA_BIDW.FAT_EDUCACAO_TESTE set ENTR_DISC_SAIDA = 1
     where DALU_ID =  (select ID from (
                 (SELECT distinct dalu.ID ID, MAX(fat.dturm_id)
                 FROM DDA_BIDW.FAT_EDUCACAO fat, DDA_BIDW.DIM_ALUNOS dalu ,DDA_BIDW.DIM_SITUACAO_ALUNO dsit, DDA_BIDW.DIM_TURMAS tur
                 WHERE fat.dalu_id = dalu.id
                 and   fat.dsial_id = dsit.id
                 and   fat.dturm_id = tur.id
                 and   dalu.flag_atual = 1
                 and   dsit.flag_atual = 1
                 and   tur.flag_atual = 1
                 and FLAG_CONTA_MATRICULA = 'S'
                 and fat.sistema_origem = 'SGE'
                 and dt_id between 201801 and 201806
                 and ra = L_UPD_EJA(i).RA
                 and dsit.cod_origem_sge = L_UPD_EJA(i).COD_STATUS
                 and codcoligada = 2
                 group by dalu.ID)))
     and  Dsial_Id = (SELECT distinct dsit.ID
                 FROM DDA_BIDW.FAT_EDUCACAO fat, DDA_BIDW.DIM_ALUNOS dalu ,DDA_BIDW.DIM_SITUACAO_ALUNO dsit
                 WHERE fat.dalu_id = dalu.id
                 and   fat.dsial_id = dsit.id
                 and   dalu.flag_atual = 1
                 and   dsit.flag_atual = 1
                 and FLAG_CONTA_MATRICULA = 'S'
                 and fat.sistema_origem = 'SGE'
                 and dt_id between 201801 and 201806
                 and ra = L_UPD_EJA(i).RA
                 and cod_origem_sge = L_UPD_EJA(i).COD_STATUS
                 and codcoligada = 2)
                 
     AND DTURM_ID = 
                 (SELECT MAX(fat.dturm_id)
                 FROM DDA_BIDW.FAT_EDUCACAO fat, DDA_BIDW.DIM_ALUNOS dalu ,DDA_BIDW.DIM_SITUACAO_ALUNO dsit, DDA_BIDW.DIM_TURMAS tur
                 WHERE fat.dalu_id = dalu.id
                 and   fat.dsial_id = dsit.id
                 and   fat.dturm_id = tur.id
                 and   dalu.flag_atual = 1
                 and   dsit.flag_atual = 1
                 and   tur.flag_atual = 1
                 and FLAG_CONTA_MATRICULA = 'S'
                 and fat.sistema_origem = 'SGE'
                 and dt_id between 201801 and 201806
                 and ra = L_UPD_EJA(i).RA
                 and dsit.cod_origem_sge = L_UPD_EJA(i).COD_STATUS
                 and codcoligada = 2
                     );


   end loop;

     EXIT WHEN L_UPD_EJA.count < V_LIMITE;


END LOOP;
CLOSE UPD_EJA;
commit;

END UPDATE_EJA_TESTE_PRC;


-- consulta turmas com problema no tipo de matriucla do BI
-- nap preencheram os requisitos para o campo na fato como ebep e gratuidade no SGE
select * from rm.smatricpl sma 
         left join rm.sturma stu
         on   sma.codcoligada = stu.codcoligada
         and  sma.idperlet = stu.idperlet
         and  sma.codfilial = stu.codfilial
         and  sma.codturma = stu.codturma
         left join rm.smatricplcompl smac
         on sma.codcoligada = smac.codcoligada
         and sma.idperlet = smac.idperlet
         and sma.idhabilitacaofilial = smac.idhabilitacaofilial
         and sma.ra = smac.ra
         left join rm.saluno alu
         on sma.codcoligada = alu.codcoligada
         and sma.ra = alu.ra
where sma.codturma = 'ECO-ECMT-2018-000295'
and   sma.ra = '00038702'

--- insert UO e CR última versão

insert into dda_bi.ODS_TMP_UO_CR 
(                select * 
                      from 
                        ( select distinct nvl(t2.cr, t1.cr) cr, 
                                     nvl(t2.uo, t1.uo) uo, 
                                     t1.habilitacao, 
                                     t2.habilitacao_turma, 
                                     t2.codturma , 
                                     t1.coligada, 
                                     0 item_sit, 
                                     0 item_zip, 
                                     0 item_turma, 
                                     0 item_sit_turma 
                             from (select '1' tipo_1, shf.codcoligada         coligada, 
                                             shf.idhabilitacaofilial habilitacao, 
                                             sit.itemcontabil        cr, 
                                             shf.codccusto           uo, 
                                             sit.iditemcontabil   item_sit,   
                                             zmaf.iditemcontabil item_zip , 
                                             shf.codfilial 
                                        from ods_shabilitacaofilial        shf, 
                                             ods_zipmatrizdadosfinanceiros zmaf, 
                                             ods_sitemcontabilprotheus     sit 
                                       where shf.codcoligada = zmaf.CODCOLIGADA 
                                         and shf.idhabilitacaofilial = zmaf.IDHABILITACAOFILIAL 
                                         and SIT.CODCOLIGADA = zmaf.CODCOLIGADA 
                                         and SIT.IDITEMCONTABIL = zmaf.IDITEMCONTABIL 
                                         and shf.flag_atual = 1 
                                         and zmaf.flag_atual = 1 
                                         and sit.flag_atual = 1 
                                        -- and 176 =   shf.idhabilitacaofilial                                                                               
                                      /*and shf.codcoligada = 4*/ 
                                      ) t1, 
                                     (select distinct '2' tipo_2 , stur.codcoligada         coligada, 
                                                      stur.idhabilitacaofilial habilitacao_turma, 
                                                      stur.codccusto           UO, 
                                                      SIt.Itemcontabil         CR, 
                                                      stur.codturma, 
                                                      ztu.iditemcontabil item_turma, 
                                                      sit.itemcontabil    item_sit_turma 
                                        from ods_sitemcontabilprotheus    sit, 
                                             ods_zipturmadadosfinanceiros ztu, 
                                             ods_sturma                   stur--, 
                                          --   rm.smatricpl                sma1 
                                       where Ztu.CODCOLIGADA = SIT.CODCOLIGADA(+) 
                                         and Ztu.IDITEMCONTABIL = SIT.IDITEMCONTABIL(+) 
                                         and stur.CODCOLIGADA = ztu.CODCOLIGADA(+) 
                                         and stur.CODFILIAL = ztu.CODFILIAL(+) 
                                         and stur.CODTURMA = ztu.CODTURMA(+) 
                                         and stur.IDPERLET = ztu.IDPERLET(+) 
                                         and sit.flag_atual(+) = 1 --or sit.flag_atual is null ) 
                                         and ztu.flag_atual(+) = 1                                         
                                         and stur.flag_atual = 1     
                                      ) t2 
                               where t1.coligada = t2.coligada(+) 
                                 and t1.habilitacao = t2.habilitacao_turma(+) 
                               ) uo_cr 
                      --   where  codturma    = 'TEC.17.2017-000084'--'18082018141' 
                         /*and habilitacao_turma = 518 */) 


---- TABELAS RM


FROM   RM.SMATRICPL MP LEFT   JOIN RM.SHABILITACAOALUNO HA
ON     HA.CODCOLIGADA = MP.CODCOLIGADA
AND    HA.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    HA.RA = MP.RA


LEFT   JOIN RM.SHABILITACAOFILIAL HF
ON     HF.CODCOLIGADA = HA.CODCOLIGADA
AND    HF.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL


LEFT   JOIN RM.SGRADE GR
--ON     (TD.CODTURMA IS NOT NULL AND GR.CODCOLIGADA = PE.CODCOLIGADA 

on    GR.CODCOLIGADA = HF.CODCOLIGADA 
AND    GR.CODCURSO = HF.CODCURSO 
AND    GR.CODHABILITACAO = HF.CODHABILITACAO 
AND    GR.CODGRADE = HF.CODGRADE--)

LEFT   JOIN RM.SHABILITACAO HH
ON     HH.CODCOLIGADA = GR.CODCOLIGADA
AND    HH.CODCURSO = GR.CODCURSO
AND    HH.CODHABILITACAO = GR.CODHABILITACAO


LEFT   JOIN RM.SCURSO CUR
ON        CUR.CODCOLIGADA = hh.CODCOLIGADA
AND    CUR.CODCURSO = hh.CODCURSO

LEFT JOIN RM.SAREA SAR
ON    SAR.CODCOLIGADA = CUR.CODCOLIGADA
AND   SAR.CODAREA = CUR.CODAREA

LEFT   JOIN RM.STIPOCURSO STP
ON   CUR.CODCOLIGADA = STP.CODCOLIGADA
AND    CUR.CODTIPOCURSO = STP.CODTIPOCURSO


LEFT   JOIN RM.STIPOINGRESSO STI
ON     HA.CODCOLIGADA = STI.CODCOLIGADA
AND    HA.CODTIPOINGRESSO = STI.CODTIPOINGRESSO
AND    STI.CODCOLIGADA = STP.CODCOLIGADA
AND    STI.CODTIPOCURSO = STP.CODTIPOCURSO


LEFT   JOIN RM.STIPOMATRICULA STM
ON    STM.CODCOLIGADA = MP.CODCOLIGADA
AND    STM.CODTIPOMAT = MP.CODTIPOMAT
AND STM.CODCOLIGADA = STP.CODCOLIGADA
AND STM.CODTIPOCURSO = STP.CODTIPOCURSO

 
LEFT   JOIN RM.SSTATUS SST
ON     SST.CODCOLIGADA = MP.CODCOLIGADA
AND    SST.CODSTATUS = MP.CODSTATUS
AND SST.CODCOLIGADA = STP.CODCOLIGADA
AND SST.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SALUNO ALMPL --MATRICPL
ON     ALMPL.CODCOLIGADA = MP.CODCOLIGADA
AND    ALMPL.RA = MP.RA

JOIN RM.PPESSOA PEMPL
ON     PEMPL.CODIGO = ALMPL.CODPESSOA

LEFT   JOIN RM.PCORRACA PCOR
ON     PEMPL.CORRACA = PCOR.CODINTERNO

LEFT JOIN RM.SPLETIVO SPL
ON     SPL.CODCOLIGADA = MP.CODCOLIGADA
AND    SPL.IDPERLET = MP.IDPERLET


LEFT   JOIN RM.SFILIAL SFIL
ON     SFIL.CODCOLIGADA = SPL.CODCOLIGADA
AND    SFIL.CODFILIAL = SPL.CODFILIAL
AND    SFIL.CODCOLIGADA = HF.CODCOLIGADA
AND    SFIL.CODFILIAL = HF.CODFILIAL

LEFT   JOIN RM.STURMA TU
ON     TU.CODCOLIGADA = HF.CODCOLIGADA
AND    TU.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL
AND    tu.codcoligada = sfil.codcoligada
AND    TU.CODFILIAL = SFIL.CODFILIAL
AND    TU.CODCOLIGADA = SPL.CODCOLIGADA
AND    TU.IDPERLET = SPL.IDPERLET
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODFILIAL = MP.CODFILIAL
AND    tu.codturma  = MP.CODTURMA
AND    TU.IDPERLET = MP.IDPERLET


LEFT   JOIN RM.STURNO TUR
ON    TUR.CODCOLIGADA = HF.CODCOLIGADA
AND    TUR.CODTURNO = HF.CODTURNO
AND    TUR.CODCOLIGADA = SFIL.CODCOLIGADA
AND    TUR.CODFILIAL   = SFIL.CODFILIAL
AND  TUR.CODCOLIGADA = STP.CODCOLIGADA
AND    TUR.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SALUNORESPONSAVEL ARES

ON    ARES.CODCOLIGADA = ALMPL.CODCOLIGADA
AND    ARES.RA = ALMPL.RA

AND    ARES.CODPESSOA = PEMPL.CODIGO

LEFT   JOIN RM.SMATRICPLCOMPL MPC
ON     MPC.CODCOLIGADA = MP.CODCOLIGADA
AND    MPC.IDPERLET = MP.IDPERLET
AND    MPC.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    MPC.RA = MP.RA

LEFT   JOIN RM.SHABILITACAOALUNOCOMPL HAC
ON     HAC.CODCOLIGADA = HA.CODCOLIGADA
AND    HAC.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL
AND    HAC.RA = HA.RA

LEFT   JOIN RM.SALUNO ALMDI -- MATRICULA
ON     ALMDI.CODCOLIGADA = STP.CODCOLIGADA
AND    ALMDI.CODTIPOCURSO = STP.CODTIPOCURSO
AND    ARES.CODCOLIGADA = ALMDI.CODCOLIGADA
AND    ARES.RA = ALMDI.RA
and    almdi.codcoligada = MP.CODCOLIGADA
AND    ALMDI.RA = MP.RA

LEFT   JOIN RM.SMATRICULA MA
ON     MP.CODCOLIGADA = MA.CODCOLIGADA
AND    MP.IDPERLET = MA.IDPERLET
AND    MP.IDHABILITACAOFILIAL = MA.IDHABILITACAOFILIAL
AND    MP.RA = MA.RA
AND    MA.CODCOLIGADA = SST.CODCOLIGADA
AND    MA.CODSTATUS = SST.CODSTATUS
AND    STM.CODCOLIGADA = MA.CODCOLIGADA
AND    STM.CODTIPOMAT = MA.TIPOMAT
and    ALMDI.CODCOLIGADA = MA.CODCOLIGADA
AND    ALMDI.RA = MA.RA


LEFT   JOIN RM.GFILIAL GFIL
ON     HF.CODFILIAL = GFIL.CODFILIAL
AND    HF.CODCOLIGADA = GFIL.CODCOLIGADA


--- matriculas isoladas ODI

-- as matriculas isoladas nao possuem vinculo com a matricplcompl então as informações dependentes dela nao
-- subirao a nao ser que seja  criados os campos específicos na smatriculacompl
-- execmplos tudo o que depende de ebep, tipograt e tipofinanc (ind_dn, etc, gratuidade regim, tipo gratuidade, etc)
-- essse select já isola o que depende da smatricplcompl e ajusta os joins da smatricpl para a smatricula
-- a ligacao com a dim_turnos pode ser feita via tipo de curso
-- realizar esses ajustes na map_tabelas_sge_isoladas
SELECT 
  INLINE_VIEW.CODCOLIGADA_3 AS CODCOLIGADA ,
  INLINE_VIEW.DTINICIAL_1 AS DTINICIAL ,
  INLINE_VIEW.DTFINAL_1 AS DTFINAL ,
  INLINE_VIEW.CODGRADE AS CODGRADE ,
  ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA AS CODCOLIGADA_2 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE_.IDPERLET AS IDPERLET_1 ,
  --ODS_SMATRICPLCOMPL_MAP_TABEL_1.RA AS RA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE_.CODFILIAL AS CODFILIAL_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE_.CODTURMA AS CODTURMA_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE_.DTMATRICULA AS DTMATRICULA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE_.RECMODIFIEDON AS RECMODIFIEDON_2 ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.CODCOLIGADA AS CODCOLIGADA_3 ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.BAIXARENDA AS BAIXARENDA ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.CATEGORIA AS CATEGORIA ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.EBEP AS EBEP ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.GRATUIDADE AS GRATUIDADE ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.CODFINANC AS CODFINANC ,
 -- ODS_SMATRICPLCOMPL_MAP_TABEL_1.TIPOGRAT AS TIPOGRAT ,
  --ODS_SMATRICPLCOMPL_MAP_TABEL_1.CNPJEMPRESA AS CNPJEMPRESA ,
  ODS_SALUNO_MAP_TABELAS_SGE_ISO.CODCOLIGADA AS CODCOLIGADA_4 ,
  ODS_SALUNO_MAP_TABELAS_SGE_ISO.RA AS RA_2 ,
  ODS_SALUNO_MAP_TABELAS_SGE_ISO.CODPESSOA AS CODPESSOA ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.NOME AS NOME_1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.DTNASCIMENTO AS DTNASCIMENTO ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.NACIONALIDADE AS NACIONALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.RUA AS RUA ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.NUMERO AS NUMERO ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.BAIRRO AS BAIRRO ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.ESTADO AS ESTADO ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.CIDADE AS CIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.CEP AS CEP ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.PAIS AS PAIS ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.TELEFONE1 AS TELEFONE1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.TELEFONE2 AS TELEFONE2 ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.NATURALIDADE AS NATURALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE_IS.TELEFONE3 AS TELEFONE3 ,
  ODS_SSTATUS_MAP_TABELAS_SGE_IS.CODCOLIGADA AS CODCOLIGADA_8 ,
  ODS_SSTATUS_MAP_TABELAS_SGE_IS.CODSTATUS AS CODSTATUS_2 ,
  ODS_SCURSO_MAP_TABELAS_SGE_ISO.CODCURSO AS CODCURSO_3 ,
 -- ODS_STURNO_MAP_TABELAS_SGE_ISO.CODTURNO AS CODTURNO_1 ,
  --ODS_STURNO_MAP_TABELAS_SGE_ISO.CODFILIAL AS CODFILIAL_5 ,
  --OTIVOALTMAT_MAP_TABELAS_SGE_IS.DESCRICAO AS DESCRICAO_6 ,
  (CASE WHEN ODS_SMATRICPL_MAP_TABELAS_SGE_.DTMATRICULA <= INLINE_VIEW.DTINICIAL_1
      THEN TO_CHAR(INLINE_VIEW.DTINICIAL_1,'YYYYMM')
      ELSE TO_CHAR(ODS_SMATRICPL_MAP_TABELAS_SGE_.DTMATRICULA,'YYYYMM')
END) AS DATA_CARGA /*,
  ODS_TMP_UO_CR.CR AS CR ,
  ODS_TMP_UO_CR.UO AS UO ,
  ODS_TMP_UO_CR.COLIGADA AS COLIGADA  */ 
FROM 
  (/*(((*/((/*((*/((rm.SGRADE ODS_SGRADE_MAP_TABELAS_SGE_ISO  INNER JOIN  (/*(*/((/*(*/(
SELECT 
  SMATRICULA_MAP_TABELAS_SGE_ISO.CODCOLIGADA AS CODCOLIGADA ,
  SMATRICULA_MAP_TABELAS_SGE_ISO.IDTURMADISC AS IDTURMADISC ,
  SMATRICULA_MAP_TABELAS_SGE_ISO.RA AS RA ,
  SMATRICULA_MAP_TABELAS_SGE_ISO.IDPERLET AS IDPERLET ,
  SMATRICULA_MAP_TABELAS_SGE_ISO.IDHABILITACAOFILIAL AS IDHABILITACAOFILIAL ,
  SMATRICULA_MAP_TABELAS_SGE_ISO.Codstatus as codstatus,
  --SMATRICULA_MAP_TABELAS_SGE_ISO.FLAG_ATUAL AS FLAG_ATUAL ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC AS IDTURMADISC_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA AS CODTURMA ,
  ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET AS IDPERLET_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODCOLIGADA AS CODCOLIGADA_2 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODFILIAL AS CODFILIAL_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.IDPERLET AS IDPERLET_2 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODTURMA AS CODTURMA_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.IDHABILITACAOFILIAL AS IDHABILITACAOFILIAL_2 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODDEPARTAMENTO AS CODDEPARTAMENTO ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODPREDIO AS CODPREDIO_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODSALA AS CODSALA_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.NOMERED AS NOMERED ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.MAXALUNOS AS MAXALUNOS_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.DTINICIAL AS DTINICIAL_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.DTFINAL AS DTFINAL_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.ALUNOSLABORE AS ALUNOSLABORE ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.DTALUNOSLABORE AS DTALUNOSLABORE ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODTURMAPROX AS CODTURMAPROX ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.TURMAENCERRADA AS TURMAENCERRADA ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODCAMPUS AS CODCAMPUS_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODBLOCO AS CODBLOCO_1 ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.TIPOMEDIACAO AS TIPOMEDIACAO ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.MODALIDADE AS MODALIDADE ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.IDUNIDADEPONTO AS IDUNIDADEPONTO ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODHORARIOAGRUPURANIA AS CODHORARIOAGRUPURANIA ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.IDCLASSEVALORPROTHEUS AS IDCLASSEVALORPROTHEUS ,
  ODS_STURMA_MAP_TABELAS_SGE_ISO.IDITEMCONTABILPROTHEUS AS IDITEMCONTABILPROTHEUS ,
  --ODS_STURMA_MAP_TABELAS_SGE_ISO.ID_ODS_STURMA AS ID_ODS_STURMA ,
--  ODS_STURMA_MAP_TABELAS_SGE_ISO.FLAG_ATUAL AS FLAG_ATUAL_2 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODCOLIGADA AS CODCOLIGADA_3 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.IDHABILITACAOFILIAL AS IDHABILITACAOFILIAL_3 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODTURNO AS CODTURNO_1 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODFILIAL AS CODFILIAL_2 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODCURSO AS CODCURSO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODHABILITACAO AS CODHABILITACAO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODGRADE AS CODGRADE ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODCCUSTO AS CODCCUSTO_2 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODDEPARTAMENTO AS CODDEPARTAMENTO_1 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.ATIVO AS ATIVO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.CODTIPOCURSO AS CODTIPOCURSO_2 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.EMAILCOORDENACAO AS EMAILCOORDENACAO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.EXCLUIPAGTOCARTAOCREDITO AS EXCLUIPAGTOCARTAOCREDITO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.RECCREATEDBY AS RECCREATEDBY_3 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.RECCREATEDON AS RECCREATEDON_3 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.RECMODIFIEDBY AS RECMODIFIEDBY_3 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.RECMODIFIEDON AS RECMODIFIEDON_3 ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.DECRETOCURSO AS DECRETOCURSO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.DESCRICAOCURSO AS DESCRICAOCURSO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.DECRETOHABILITACAO AS DECRETOHABILITACAO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.DESCRICAOHABILITACAO AS DESCRICAOHABILITACAO ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.EMAILTCC AS EMAILTCC ,
  ODS_SHABILITACAOFILIAL_MAP_T_1.IDCURSOMEC AS IDCURSOMEC --,
 -- ODS_SHABILITACAOFILIAL_MAP_T_1.ID_ODS_SHABILITACAOFILIAL AS ID_ODS_SHABILITACAOFILIAL ,
  --ODS_SHABILITACAOFILIAL_MAP_T_1.DT_INI_VIG AS DT_INI_VIG_3 ,
  --ODS_SHABILITACAOFILIAL_MAP_T_1.DT_FIM_VIG AS DT_FIM_VIG_3 --,
  --ODS_SHABILITACAOFILIAL_MAP_T_1.FLAG_ATUAL AS FLAG_ATUAL_3   
FROM 
  ((rm.SMATRICULA SMATRICULA_MAP_TABELAS_SGE_ISO  INNER JOIN  rm.STURMADISC ODS_STURMADISC_MAP_TABELAS_SGE  
    ON  SMATRICULA_MAP_TABELAS_SGE_ISO.CODCOLIGADA = ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA
and SMATRICULA_MAP_TABELAS_SGE_ISO.IDTURMADISC = ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC
     )  INNER JOIN  rm.STURMA ODS_STURMA_MAP_TABELAS_SGE_ISO  
    ON  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODCOLIGADA                    = ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA
   AND ODS_STURMA_MAP_TABELAS_SGE_ISO.CODFILIAL                      = ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL
   AND ODS_STURMA_MAP_TABELAS_SGE_ISO.IDPERLET                       = ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET
   AND ODS_STURMA_MAP_TABELAS_SGE_ISO.CODTURMA                       = ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA
--   and ODS_STURMA_MAP_TABELAS_SGE_ISO.FLAG_ATUAL                     = 1
     )  INNER JOIN  rm.SHABILITACAOFILIAL ODS_SHABILITACAOFILIAL_MAP_T_1  
    ON   ODS_STURMA_MAP_TABELAS_SGE_ISO.CODCOLIGADA = ODS_SHABILITACAOFILIAL_MAP_T_1.CODCOLIGADA
and ODS_STURMA_MAP_TABELAS_SGE_ISO.CODFILIAL = ODS_SHABILITACAOFILIAL_MAP_T_1.CODFILIAL
and ODS_STURMA_MAP_TABELAS_SGE_ISO.IDHABILITACAOFILIAL = ODS_SHABILITACAOFILIAL_MAP_T_1.IDHABILITACAOFILIAL
--AND ODS_SHABILITACAOFILIAL_MAP_T_1.FLAG_ATUAL = 1
WHERE
  (SMATRICULA_MAP_TABELAS_SGE_ISO.IDHABILITACAOFILIAL is null
) AND   (ODS_STURMA_MAP_TABELAS_SGE_ISO.CODTURMA not like 'EP%'
) 
  ) INLINE_VIEW  LEFT OUTER JOIN  rm.SMATRICPL ODS_SMATRICPL_MAP_TABELAS_SGE_  
    ON  INLINE_VIEW.CODCOLIGADA = ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA
    and INLINE_VIEW.IDPERLET = ODS_SMATRICPL_MAP_TABELAS_SGE_.IDPERLET
    and INLINE_VIEW.IDHABILITACAOFILIAL = ODS_SMATRICPL_MAP_TABELAS_SGE_.IDHABILITACAOFILIAL
    and INLINE_VIEW.RA = ODS_SMATRICPL_MAP_TABELAS_SGE_.RA
--    and INLINE_VIEW.FLAG_ATUAL = 1
--    and ODS_SMATRICPL_MAP_TABELAS_SGE_.FLAG_ATUAL = 1
    /* )  INNER JOIN  rm.SMATRICPLCOMPL ODS_SMATRICPLCOMPL_MAP_TABEL_1  
    ON  ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA                        = ODS_SMATRICPLCOMPL_MAP_TABEL_1.CODCOLIGADA
   AND ODS_SMATRICPL_MAP_TABELAS_SGE_.IDPERLET                       = ODS_SMATRICPLCOMPL_MAP_TABEL_1.IDPERLET
   AND ODS_SMATRICPL_MAP_TABELAS_SGE_.IDHABILITACAOFILIAL            = ODS_SMATRICPLCOMPL_MAP_TABEL_1.IDHABILITACAOFILIAL
   AND TRIM(ODS_SMATRICPL_MAP_TABELAS_SGE_.RA)                       = TRIM(ODS_SMATRICPLCOMPL_MAP_TABEL_1.RA)*/
--   and ODS_SMATRICPL_MAP_TABELAS_SGE_.FLAG_ATUAL                     = 1
--   and ODS_SMATRICPLCOMPL_MAP_TABEL_1.FLAG_ATUAL                = 1
     )  INNER JOIN  rm.SALUNO ODS_SALUNO_MAP_TABELAS_SGE_ISO  
    ON  ODS_SALUNO_MAP_TABELAS_SGE_ISO.CODCOLIGADA                       = INLINE_VIEW.CODCOLIGADA
   AND ODS_SALUNO_MAP_TABELAS_SGE_ISO.RA                                = INLINE_VIEW.RA
 --  and ODS_SALUNO_MAP_TABELAS_SGE_ISO.FLAG_ATUAL                        = 1
     )  INNER JOIN  rm.PPESSOA ODS_PPESSOA_MAP_TABELAS_SGE_IS  
    ON  ODS_PPESSOA_MAP_TABELAS_SGE_IS.CODIGO                          = ODS_SALUNO_MAP_TABELAS_SGE_ISO.CODPESSOA 
--and ODS_PPESSOA_MAP_TABELAS_SGE_IS.FLAG_ATUAL                       = 1
    /* )  INNER JOIN  rm.SHABILITACAOALUNO ODS_SHABILITACAOALUNO_MAP_TA_1  
    ON  ODS_SHABILITACAOALUNO_MAP_TA_1.CODCOLIGADA            = ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA
AND ODS_SHABILITACAOALUNO_MAP_TA_1.IDHABILITACAOFILIAL    = ODS_SMATRICPL_MAP_TABELAS_SGE_.IDHABILITACAOFILIAL
AND ODS_SHABILITACAOALUNO_MAP_TA_1.RA                     = ODS_SMATRICPL_MAP_TABELAS_SGE_.RA*/
--and ODS_SHABILITACAOALUNO_MAP_TA_1.FLAG_ATUAL             = 1
--INLINE_VIEW.CODCOLIGADA_3           = ODS_SHABILITACAOALUNO_MAP_TA_1.CODCOLIGADA
--AND INLINE_VIEW.IDHABILITACAOFILIAL_3   = ODS_SHABILITACAOALUNO_MAP_TA_1.IDHABILITACAOFILIAL
     )  
    ON  ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODCOLIGADA                       = INLINE_VIEW.CODCOLIGADA_3 
   AND ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODCURSO                          = INLINE_VIEW.CODCURSO 
   AND ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODHABILITACAO                    = INLINE_VIEW.CODHABILITACAO 
   AND ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODGRADE                          = INLINE_VIEW.CODGRADE 
 --  and ODS_SGRADE_MAP_TABELAS_SGE_ISO.FLAG_ATUAL                        = 1
     )  INNER JOIN  rm.SHABILITACAO ODS_SHABILITACAO_MAP_TABELAS_1  
    ON  ODS_SHABILITACAO_MAP_TABELAS_1.CODCOLIGADA                = ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODCOLIGADA 
AND ODS_SHABILITACAO_MAP_TABELAS_1.CODHABILITACAO              = ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODHABILITACAO 
AND ODS_SHABILITACAO_MAP_TABELAS_1.CODCURSO                    = ODS_SGRADE_MAP_TABELAS_SGE_ISO.CODCURSO 
--and ODS_SHABILITACAO_MAP_TABELAS_1.FLAG_ATUAL            = 1
     )  INNER JOIN  rm.SSTATUS ODS_SSTATUS_MAP_TABELAS_SGE_IS  
    ON  ODS_SSTATUS_MAP_TABELAS_SGE_IS.CODCOLIGADA                      = INLINE_VIEW.CODCOLIGADA 
AND ODS_SSTATUS_MAP_TABELAS_SGE_IS.CODSTATUS                        = INLINE_VIEW.CODSTATUS 
--AND ODS_SSTATUS_MAP_TABELAS_SGE_IS.FLAG_ATUAL = 1
    /* )  INNER JOIN  rm.SPLETIVO ODS_SPLETIVO_MAP_TABELAS_SGE_I  
    ON  ODS_SPLETIVO_MAP_TABELAS_SGE_I.CODCOLIGADA                     = ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA 
AND ODS_SPLETIVO_MAP_TABELAS_SGE_I.IDPERLET                        = ODS_SMATRICPL_MAP_TABELAS_SGE_.IDPERLET */
--and ODS_SPLETIVO_MAP_TABELAS_SGE_I.FLAG_ATUAL = 1
   /*  )  INNER JOIN  rm.SFILIAL ODS_SFILIAL_MAP_TABELAS_SGE_IS  
    ON  ODS_SFILIAL_MAP_TABELAS_SGE_IS.CODCOLIGADA                      = ODS_SPLETIVO_MAP_TABELAS_SGE_I.CODCOLIGADA 
AND ODS_SFILIAL_MAP_TABELAS_SGE_IS.CODFILIAL                        = ODS_SPLETIVO_MAP_TABELAS_SGE_I.CODFILIAL */
--and ODS_SFILIAL_MAP_TABELAS_SGE_IS.FLAG_ATUAL = 1
     )  INNER JOIN  rm.SCURSO ODS_SCURSO_MAP_TABELAS_SGE_ISO  
    ON  ODS_SCURSO_MAP_TABELAS_SGE_ISO.CODCOLIGADA                       = ODS_SHABILITACAO_MAP_TABELAS_1.CODCOLIGADA 
AND ODS_SCURSO_MAP_TABELAS_SGE_ISO.CODCURSO                          = ODS_SHABILITACAO_MAP_TABELAS_1.CODCURSO 
--AND ODS_SCURSO_MAP_TABELAS_SGE_ISO.FLAG_ATUAL = 1
     )  INNER JOIN  rm.STIPOCURSO ODS_STIPOCURSO_MAP_TABELAS_S_1  
    ON  ODS_STIPOCURSO_MAP_TABELAS_S_1.CODCOLIGADA                   = ODS_SCURSO_MAP_TABELAS_SGE_ISO.CODCOLIGADA 
AND ODS_STIPOCURSO_MAP_TABELAS_S_1.CODTIPOCURSO                  = ODS_SCURSO_MAP_TABELAS_SGE_ISO.CODTIPOCURSO 
--and ODS_STIPOCURSO_MAP_TABELAS_S_1.FLAG_ATUAL = 1
   /*  )  LEFT OUTER JOIN  rm.GCONSIST ODS_GCONSIST_MAP_TABELAS_SGE_I  
    ON  ODS_GCONSIST_MAP_TABELAS_SGE_I.CODCOLIGADA               = ODS_SMATRICPLCOMPL_MAP_TABEL_1.CODCOLIGADA 
AND ODS_GCONSIST_MAP_TABELAS_SGE_I.CODCLIENTE                 = ODS_SMATRICPLCOMPL_MAP_TABEL_1.CATEGORIA 
AND ODS_GCONSIST_MAP_TABELAS_SGE_I.CODTABELA                  = 'SCATEGORIA' */
--and ODS_GCONSIST_MAP_TABELAS_SGE_I.FLAG_ATUAL                 = 1
    /* )  INNER JOIN  rm.STURNO ODS_STURNO_MAP_TABELAS_SGE_ISO  
    ON  ODS_STURNO_MAP_TABELAS_SGE_ISO.CODCOLIGADA                       = INLINE_VIEW.CODCOLIGADA_3 
AND ODS_STURNO_MAP_TABELAS_SGE_ISO.CODTURNO                          = INLINE_VIEW.CODTURNO_1 */
--AND ODS_STURNO_MAP_TABELAS_SGE_ISO.FLAG_ATUAL = 1
/*     )  LEFT OUTER JOIN  rm.SMOTIVOALTMAT OTIVOALTMAT_MAP_TABELAS_SGE_IS  
    ON  OTIVOALTMAT_MAP_TABELAS_SGE_IS.CODCOLIGADA         = ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA
   AND OTIVOALTMAT_MAP_TABELAS_SGE_IS.CODMOTIVO            = ODS_SMATRICPL_MAP_TABELAS_SGE_.CODMOTIVOTRANSFERENCIA*/
--   and OTIVOALTMAT_MAP_TABELAS_SGE_IS.FLAG_ATUAL            = 1
   /*  )  LEFT OUTER JOIN  rm.TMP_UO_CR ODS_TMP_UO_CR  
    ON  INLINE_VIEW.CODCOLIGADA_3                = ODS_TMP_UO_CR.COLIGADA
  and INLINE_VIEW.IDHABILITACAOFILIAL_2  = ODS_TMP_UO_CR.HABILITACAO             
  and ODS_SMATRICPL_MAP_TABELAS_SGE_.CODTURMA             = nvl(ODS_TMP_UO_CR.CODTURMA,ODS_SMATRICPL_MAP_TABELAS_SGE_.CODTURMA)
         */
         )


-- consulta para trazer as matriculas isoladas
-- substituir matricpl por smatricula e ligar na sturmadisc, depois chega no resto
select *--count(*) 
  from rm.smatricula matr
     , rm.sturmadisc tdis
     , rm.sturma turm
     , rm.shabilitacaofilial shfi
     , rm.smatricpl sma
  where matr.idhabilitacaofilial is null
    and matr.codcoligada = tdis.codcoligada
    and matr.idturmadisc = tdis.idturmadisc
    and turm.codcoligada = tdis.codcoligada
    and turm.codfilial = tdis.codfilial
    and turm.codturma = tdis.codturma
    and turm.idperlet = tdis.idperlet
    and turm.codcoligada = shfi.codcoligada
    and turm.codfilial = shfi.codfilial
    and turm.codturma not like 'EP%'  -- retirar os encontros com professores pois não contam 
    and matr.codcoligada = sma.codcoligada(+)
    and matr.idperlet = sma.idperlet(+)
    and matr.idhabilitacaofilial = sma.idhabilitacaofilial(+)
    and matr.ra = sma.ra(+)
  --  and sma.idperlet is not null
    and turm.idhabilitacaofilial = shfi.idhabilitacaofilial-- esta ligando pela turma e nao pela turmadisciplina
    and matr.codcoligada = 2;
    

select * from
(select *
FROM 
  ((rm.SMATRICULA SMATRICULA_MAP_TABELAS_SGE_ISO  INNER JOIN  rm.STURMADISC ODS_STURMADISC_MAP_TABELAS_SGE  
    ON  SMATRICULA_MAP_TABELAS_SGE_ISO.CODCOLIGADA = ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA
and SMATRICULA_MAP_TABELAS_SGE_ISO.IDTURMADISC = ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC
--and SMATRICULA_MAP_TABELAS_SGE_ISO.FLAG_ATUAL = 1
     )  INNER JOIN  rm.STURMA ODS_STURMA_MAP_TABELAS_SGE_ISO  
    ON  ODS_STURMA_MAP_TABELAS_SGE_ISO.CODCOLIGADA                    = ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA
   AND ODS_STURMA_MAP_TABELAS_SGE_ISO.CODFILIAL                      = ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL
   AND ODS_STURMA_MAP_TABELAS_SGE_ISO.IDPERLET                       = ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET
   AND ODS_STURMA_MAP_TABELAS_SGE_ISO.CODTURMA                       = ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA
--   and ODS_STURMA_MAP_TABELAS_SGE_ISO.FLAG_ATUAL                     = 1
     )  INNER JOIN  rm.SHABILITACAOFILIAL ODS_SHABILITACAOFILIAL_MAP_T_1  
    ON   ODS_STURMA_MAP_TABELAS_SGE_ISO.CODCOLIGADA = ODS_SHABILITACAOFILIAL_MAP_T_1.CODCOLIGADA
and ODS_STURMA_MAP_TABELAS_SGE_ISO.CODFILIAL = ODS_SHABILITACAOFILIAL_MAP_T_1.CODFILIAL
and ODS_STURMA_MAP_TABELAS_SGE_ISO.IDHABILITACAOFILIAL = ODS_SHABILITACAOFILIAL_MAP_T_1.IDHABILITACAOFILIAL
--AND ODS_SHABILITACAOFILIAL_MAP_T_1.FLAG_ATUAL = 1
WHERE
  (SMATRICULA_MAP_TABELAS_SGE_ISO.IDHABILITACAOFILIAL is null
  ) AND (ODS_STURMA_MAP_TABELAS_SGE_ISO.CODTURMA not like 'EP%'
) 
) INLINE_VIEW  LEFT OUTER JOIN  rm.SMATRICPL ODS_SMATRICPL_MAP_TABELAS_SGE_  
    ON  INLINE_VIEW.CODCOLIGADA = ODS_SMATRICPL_MAP_TABELAS_SGE_.CODCOLIGADA
    and INLINE_VIEW.IDPERLET = ODS_SMATRICPL_MAP_TABELAS_SGE_.IDPERLET
    and INLINE_VIEW.IDHABILITACAOFILIAL = ODS_SMATRICPL_MAP_TABELAS_SGE_.IDHABILITACAOFILIAL
    and INLINE_VIEW.RA = ODS_SMATRICPL_MAP_TABELAS_SGE_.RA
  --  and INLINE_VIEW.FLAG_ATUAL = 1
  --  and ODS_SMATRICPL_MAP_TABELAS_SGE_.FLAG_ATUAL = 1
  
  
  
  
--================== testes update EJA ==================================

-- busca RA no RM para verificar a situacao atual, turmas, matriculas, etc.
select  MP.RA, TU.CODTURMA, SST.DESCRICAO, MP.RECMODIFIEDON FROM   RM.SMATRICPL MP LEFT   JOIN RM.SHABILITACAOALUNO HA
ON     HA.CODCOLIGADA = MP.CODCOLIGADA
AND    HA.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    HA.RA = MP.RA


LEFT   JOIN RM.SHABILITACAOFILIAL HF
ON     HF.CODCOLIGADA = HA.CODCOLIGADA
AND    HF.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL


LEFT   JOIN RM.SGRADE GR
--ON     (TD.CODTURMA IS NOT NULL AND GR.CODCOLIGADA = PE.CODCOLIGADA 

on    GR.CODCOLIGADA = HF.CODCOLIGADA 
AND    GR.CODCURSO = HF.CODCURSO 
AND    GR.CODHABILITACAO = HF.CODHABILITACAO 
AND    GR.CODGRADE = HF.CODGRADE--)

LEFT   JOIN RM.SHABILITACAO HH
ON     HH.CODCOLIGADA = GR.CODCOLIGADA
AND    HH.CODCURSO = GR.CODCURSO
AND    HH.CODHABILITACAO = GR.CODHABILITACAO


LEFT   JOIN RM.SCURSO CUR
ON        CUR.CODCOLIGADA = hh.CODCOLIGADA
AND    CUR.CODCURSO = hh.CODCURSO

LEFT JOIN RM.SAREA SAR
ON    SAR.CODCOLIGADA = CUR.CODCOLIGADA
AND   SAR.CODAREA = CUR.CODAREA

LEFT   JOIN RM.STIPOCURSO STP
ON   CUR.CODCOLIGADA = STP.CODCOLIGADA
AND    CUR.CODTIPOCURSO = STP.CODTIPOCURSO


LEFT   JOIN RM.STIPOINGRESSO STI
ON     HA.CODCOLIGADA = STI.CODCOLIGADA
AND    HA.CODTIPOINGRESSO = STI.CODTIPOINGRESSO
AND    STI.CODCOLIGADA = STP.CODCOLIGADA
AND    STI.CODTIPOCURSO = STP.CODTIPOCURSO


LEFT   JOIN RM.STIPOMATRICULA STM
ON    STM.CODCOLIGADA = MP.CODCOLIGADA
AND    STM.CODTIPOMAT = MP.CODTIPOMAT
AND STM.CODCOLIGADA = STP.CODCOLIGADA
AND STM.CODTIPOCURSO = STP.CODTIPOCURSO

 
LEFT   JOIN RM.SSTATUS SST
ON     SST.CODCOLIGADA = MP.CODCOLIGADA
AND    SST.CODSTATUS = MP.CODSTATUS
AND SST.CODCOLIGADA = STP.CODCOLIGADA
AND SST.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SALUNO ALMPL --MATRICPL
ON     ALMPL.CODCOLIGADA = MP.CODCOLIGADA
AND    ALMPL.RA = MP.RA

JOIN RM.PPESSOA PEMPL
ON     PEMPL.CODIGO = ALMPL.CODPESSOA

LEFT   JOIN RM.PCORRACA PCOR
ON     PEMPL.CORRACA = PCOR.CODINTERNO

LEFT JOIN RM.SPLETIVO SPL
ON     SPL.CODCOLIGADA = MP.CODCOLIGADA
AND    SPL.IDPERLET = MP.IDPERLET


LEFT   JOIN RM.SFILIAL SFIL
ON     SFIL.CODCOLIGADA = SPL.CODCOLIGADA
AND    SFIL.CODFILIAL = SPL.CODFILIAL
AND    SFIL.CODCOLIGADA = HF.CODCOLIGADA
AND    SFIL.CODFILIAL = HF.CODFILIAL

LEFT   JOIN RM.STURMA TU
ON     TU.CODCOLIGADA = HF.CODCOLIGADA
AND    TU.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL
AND    tu.codcoligada = sfil.codcoligada
AND    TU.CODFILIAL = SFIL.CODFILIAL
AND    TU.CODCOLIGADA = SPL.CODCOLIGADA
AND    TU.IDPERLET = SPL.IDPERLET
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODFILIAL = MP.CODFILIAL
AND    tu.codturma  = MP.CODTURMA
AND    TU.IDPERLET = MP.IDPERLET


LEFT   JOIN RM.STURNO TUR
ON    TUR.CODCOLIGADA = HF.CODCOLIGADA
AND    TUR.CODTURNO = HF.CODTURNO
AND    TUR.CODCOLIGADA = SFIL.CODCOLIGADA
AND    TUR.CODFILIAL   = SFIL.CODFILIAL
AND  TUR.CODCOLIGADA = STP.CODCOLIGADA
AND    TUR.CODTIPOCURSO = STP.CODTIPOCURSO

LEFT   JOIN RM.SALUNORESPONSAVEL ARES

ON    ARES.CODCOLIGADA = ALMPL.CODCOLIGADA
AND    ARES.RA = ALMPL.RA

AND    ARES.CODPESSOA = PEMPL.CODIGO

LEFT   JOIN RM.SMATRICPLCOMPL MPC
ON     MPC.CODCOLIGADA = MP.CODCOLIGADA
AND    MPC.IDPERLET = MP.IDPERLET
AND    MPC.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    MPC.RA = MP.RA

LEFT   JOIN RM.SHABILITACAOALUNOCOMPL HAC
ON     HAC.CODCOLIGADA = HA.CODCOLIGADA
AND    HAC.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL
AND    HAC.RA = HA.RA

LEFT   JOIN RM.SALUNO ALMDI -- MATRICULA
ON     ALMDI.CODCOLIGADA = STP.CODCOLIGADA
AND    ALMDI.CODTIPOCURSO = STP.CODTIPOCURSO
AND    ARES.CODCOLIGADA = ALMDI.CODCOLIGADA
AND    ARES.RA = ALMDI.RA
and    almdi.codcoligada = MP.CODCOLIGADA
AND    ALMDI.RA = MP.RA

LEFT   JOIN RM.SMATRICULA MA
ON     MP.CODCOLIGADA = MA.CODCOLIGADA
AND    MP.IDPERLET = MA.IDPERLET
AND    MP.IDHABILITACAOFILIAL = MA.IDHABILITACAOFILIAL
AND    MP.RA = MA.RA
AND    MA.CODCOLIGADA = SST.CODCOLIGADA
AND    MA.CODSTATUS = SST.CODSTATUS
AND    STM.CODCOLIGADA = MA.CODCOLIGADA
AND    STM.CODTIPOMAT = MA.TIPOMAT
and    ALMDI.CODCOLIGADA = MA.CODCOLIGADA
AND    ALMDI.RA = MA.RA


LEFT   JOIN RM.GFILIAL GFIL
ON     HF.CODFILIAL = GFIL.CODFILIAL
AND    HF.CODCOLIGADA = GFIL.CODCOLIGADA
where  (1=1)
AND MP.ra =  '00046238'
and    MP.codcoligada = 2
and    cur.codcurso IN ('NOVA EJA', 'EJA-PRO', 'EJA EM', 'EJA EF II')
and   sst.descricao not in ('Inscrito',
                             'Pré Inscrito',
                             'Pré Matrícula',
                             'Pré Matrícula Online',
                             'Pré-Matricula',
                             'Pré-Matriculado',
                             'Cancelado',
                             'Reclassificado',
                             'Transferência Interna',
                             'Transferência de Turma' )  
--group by sma.ra, sst.codstatus
order by MP.ra



-- verifica o mesmo RA na tabela tmp_update EJA para verificar se ela setou corretamente o semestre
select * from dda_bidw.tmp_update_eja where ra = '00046238'

delete from dda_bidw.tmp_update_eja
delete from fat_educacao where sistema_origem = 'SGE'
update fat_educacao set entr_disc_saida = 0 where sistema_origem = 'SGE'

-- verifica o mesmo RA na fat_educacao para ver se o update_eja_prc setou corretamente 1 na entr_disc_saida
--select ra, sum(entr_disc_saida) from (
select fat.dt_id, dalu.id, DALU.RA, FAT.ENTR_DISC_SAIDA, TUR.ID ID_TURMA, TUR.SIGLA_TURMA,SIT.ID, SIT.COD_ORIGEM_SGE, SIT.DESCRICAO  
from dda_bidw.fat_educacao fat, 
              dda_bidw.dim_alunos dalu, 
              dda_bidw.dim_turmas tur, 
              dda_bidw.dim_centros_resp cr,
              dda_bidw.dim_situacao_aluno sit,
              dda_bidw.dim_cursos_modulos curs
where fat.dalu_id = dalu.id
and   fat.dturm_id = tur.id
and   fat.dcr_id = cr.id
and   fat.dsial_id = sit.id
and   fat.dcurm_id = curs.id
and   curs.curs_titulo like 'EJA%'
and  ra = '00046238' --90181N1ME3
and dt_id between '201801' and '201808'
order by dalu.ra
--)group by ra having sum(entr_disc_saida)>1 -- nao achou nenhum OK



-- conferencia dados sesi e senai

select sum(realizado_matricula),  
       sum(entr_disc_saida), 
       sum(fat.realizado_eja), 
       sum(fat.realizado_fora_prazo_mes), 
       sum(fat.realizado_matricula_senai),
       sum(fat.entrada_nova) ,
       sum(fat.entrada_residual),
       sum(fat.entrada_transferencia),
       sum(fat.entrada_trancamento),
       sum(fat.saida_concluido),
       sum(fat.saida_evadido),
       sum(fat.saida_trancado),
       sum(fat.saida_transferido),
       sum(fat.saida_residual)
from dda_bidw.fat_educacao fat
where sistema_origem = 'SGE'



-- total de matriculas

select sum(fat.entr_disc_saida+fat.realizado_eja) from dda_bidw.fat_educacao fat, dda_bidw.dim_turmas tu 
where fat.dturm_id = tu.id
--and fat.sistema_origem = 'SGE' 
and demp_id = 2 --and realizado_eja = 1 
and fat.flag_mobilidade = 'S'--and cod_origem_sge like 'ECO%'




--verifica o mesmo RA na ODS para ver se está igual ao RM
select  TU.CODTURMA, SST.DESCRICAO, MP.RECMODIFIEDON FROM   dda_bi.ods_SMATRICPL MP LEFT   JOIN  dda_bi.ods_SHABILITACAOALUNO HA
ON     HA.CODCOLIGADA = MP.CODCOLIGADA
AND    HA.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    HA.RA = MP.RA
AND    MP.FLAG_ATUAL = 1
AND    HA.FLAG_ATUAL = 1 

LEFT   JOIN  dda_bi.ods_SHABILITACAOFILIAL HF
ON     HF.CODCOLIGADA = HA.CODCOLIGADA
AND    HF.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL
AND    HF.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_SGRADE GR
--ON     (TD.CODTURMA IS NOT NULL AND GR.CODCOLIGADA = PE.CODCOLIGADA 

on    GR.CODCOLIGADA = HF.CODCOLIGADA 
AND    GR.CODCURSO = HF.CODCURSO 
AND    GR.CODHABILITACAO = HF.CODHABILITACAO 
AND    GR.CODGRADE = HF.CODGRADE--)
AND    GR.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_SHABILITACAO HH
ON     HH.CODCOLIGADA = GR.CODCOLIGADA
AND    HH.CODCURSO = GR.CODCURSO
AND    HH.CODHABILITACAO = GR.CODHABILITACAO
AND    HH.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_SCURSO CUR
ON        CUR.CODCOLIGADA = hh.CODCOLIGADA
AND    CUR.CODCURSO = hh.CODCURSO
AND    CUR.FLAG_ATUAL = 1

LEFT JOIN  dda_bi.ods_SAREA SAR
ON    SAR.CODCOLIGADA = CUR.CODCOLIGADA
AND   SAR.CODAREA = CUR.CODAREA
AND   SAR.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_STIPOCURSO STP
ON   CUR.CODCOLIGADA = STP.CODCOLIGADA
AND    CUR.CODTIPOCURSO = STP.CODTIPOCURSO
AND   CUR.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_STIPOINGRESSO STI
ON     HA.CODCOLIGADA = STI.CODCOLIGADA
AND    HA.CODTIPOINGRESSO = STI.CODTIPOINGRESSO
AND    STI.CODCOLIGADA = STP.CODCOLIGADA
AND    STI.CODTIPOCURSO = STP.CODTIPOCURSO
AND    STI.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_STIPOMATRICULA STM
ON    STM.CODCOLIGADA = MP.CODCOLIGADA
AND    STM.CODTIPOMAT = MP.CODTIPOMAT
AND STM.CODCOLIGADA = STP.CODCOLIGADA
AND STM.CODTIPOCURSO = STP.CODTIPOCURSO
AND  STM.FLAG_ATUAL = 1

 
LEFT   JOIN  dda_bi.ods_SSTATUS SST
ON     SST.CODCOLIGADA = MP.CODCOLIGADA
AND    SST.CODSTATUS = MP.CODSTATUS
AND SST.CODCOLIGADA = STP.CODCOLIGADA
AND SST.CODTIPOCURSO = STP.CODTIPOCURSO
AND   SST.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_SALUNO ALMPL --MATRICPL
ON     ALMPL.CODCOLIGADA = MP.CODCOLIGADA
AND    ALMPL.RA = MP.RA
AND    ALMPL.FLAG_ATUAL = 1

JOIN  dda_bi.ods_PPESSOA PEMPL
ON     PEMPL.CODIGO = ALMPL.CODPESSOA
AND    PEMPL.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_PCORRACA PCOR
ON     PEMPL.CORRACA = PCOR.CODINTERNO
AND    PCOR.FLAG_ATUAL = 1

LEFT JOIN  dda_bi.ods_SPLETIVO SPL
ON     SPL.CODCOLIGADA = MP.CODCOLIGADA
AND    SPL.IDPERLET = MP.IDPERLET
AND    SPL.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_SFILIAL SFIL
ON     SFIL.CODCOLIGADA = SPL.CODCOLIGADA
AND    SFIL.CODFILIAL = SPL.CODFILIAL
AND    SFIL.CODCOLIGADA = HF.CODCOLIGADA
AND    SFIL.CODFILIAL = HF.CODFILIAL
AND    SFIL.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_STURMA TU
ON     TU.CODCOLIGADA = HF.CODCOLIGADA
AND    TU.IDHABILITACAOFILIAL = HF.IDHABILITACAOFILIAL
AND    tu.codcoligada = sfil.codcoligada
AND    TU.CODFILIAL = SFIL.CODFILIAL
AND    TU.CODCOLIGADA = SPL.CODCOLIGADA
AND    TU.IDPERLET = SPL.IDPERLET
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODCOLIGADA = MP.CODCOLIGADA
AND    TU.CODFILIAL = MP.CODFILIAL
AND    tu.codturma  = MP.CODTURMA
AND    TU.IDPERLET = MP.IDPERLET
AND    TU.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_STURNO TUR
ON    TUR.CODCOLIGADA = HF.CODCOLIGADA
AND    TUR.CODTURNO = HF.CODTURNO
AND    TUR.CODCOLIGADA = SFIL.CODCOLIGADA
AND    TUR.CODFILIAL   = SFIL.CODFILIAL
AND  TUR.CODCOLIGADA = STP.CODCOLIGADA
AND    TUR.CODTIPOCURSO = STP.CODTIPOCURSO
AND    TUR.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_SALUNORESPONSAVEL ARES

ON    ARES.CODCOLIGADA = ALMPL.CODCOLIGADA
AND    ARES.RA = ALMPL.RA
AND    ARES.FLAG_ATUAL = 1

AND    ARES.CODPESSOA = PEMPL.CODIGO

LEFT   JOIN  dda_bi.ods_SMATRICPLCOMPL MPC
ON     MPC.CODCOLIGADA = MP.CODCOLIGADA
AND    MPC.IDPERLET = MP.IDPERLET
AND    MPC.IDHABILITACAOFILIAL = MP.IDHABILITACAOFILIAL
AND    MPC.RA = MP.RA
AND    MPC.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_SHABILITACAOALUNOCOMPL HAC
ON     HAC.CODCOLIGADA = HA.CODCOLIGADA
AND    HAC.IDHABILITACAOFILIAL = HA.IDHABILITACAOFILIAL
AND    HAC.RA = HA.RA
AND    HAC.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_SALUNO ALMDI -- MATRICULA
ON     ALMDI.CODCOLIGADA = STP.CODCOLIGADA
AND    ALMDI.CODTIPOCURSO = STP.CODTIPOCURSO
AND    ARES.CODCOLIGADA = ALMDI.CODCOLIGADA
AND    ARES.RA = ALMDI.RA
and    almdi.codcoligada = MP.CODCOLIGADA
AND    ALMDI.RA = MP.RA
AND    ALMDI.FLAG_ATUAL = 1

LEFT   JOIN  dda_bi.ods_SMATRICULA MA
ON     MP.CODCOLIGADA = MA.CODCOLIGADA
AND    MP.IDPERLET = MA.IDPERLET
AND    MP.IDHABILITACAOFILIAL = MA.IDHABILITACAOFILIAL
AND    MP.RA = MA.RA
AND    MA.CODCOLIGADA = SST.CODCOLIGADA
AND    MA.CODSTATUS = SST.CODSTATUS
AND    STM.CODCOLIGADA = MA.CODCOLIGADA
AND    STM.CODTIPOMAT = MA.TIPOMAT
and    ALMDI.CODCOLIGADA = MA.CODCOLIGADA
AND    ALMDI.RA = MA.RA
AND    MA.FLAG_ATUAL = 1


LEFT   JOIN  dda_bi.ods_GFILIAL GFIL
ON     HF.CODFILIAL = GFIL.CODFILIAL
AND    HF.CODCOLIGADA = GFIL.CODCOLIGADA
AND    GFIL.FLAG_ATUAL = 1
where  MP.ra =  '00000323'
and    MP.codcoligada = 2
and    cur.codcurso IN ('NOVA EJA', 'EJA-PRO', 'EJA EM', 'EJA EF II')
and   sst.descricao not in ('Inscrito',
                             'Pré Inscrito',
                             'Pré Matrícula',
                             'Pré Matrícula Online',
                             'Pré-Matricula',
                             'Pré-Matriculado',
                             'Cancelado',
                             'Reclassificado',
                             'Transferência Interna',
                             'Transferência de Turma' )  
--group by sma.ra, sst.codstatus
order by MP.ra


-- verifica se tem necessidade esse where na update_eja
 


select ra, semestre, t.dt_modificacao, cod_status
from dda_bidw.tmp_update_eja t
where t.dt_modificacao  = (select max(dt_modificacao) from dda_bidw.tmp_update_eja tt where tt.ra = t.ra
                           and tt.semestre = t.semestre)
and ra = '00046238'


-- testa o RA para ver se há necessidade de mudar o processo de carga da TMP
select ra, max(codstatus),semestre/*,max(recmodifiedon)*/,max(recturma)--, sum(total) 
from (
--SELECT CODSTATUS, RA, SEMESTRE, RECMODIFIEDON, recturma,/*, MAX(RECturma)*//*MAX(*/CODTURMA/*)*/--, count(1)total 
--FROM (
SELECT  SMA.RA, SMA.RECMODIFIEDON, SMA.DTMATRICULA, TUR.DTINICIAL, SMA.CODTURMA, SMA.RECMODIFIEDBY,SST.CODSTATUS ,tur.recmodifiedon recturma,
CASE WHEN (CASE WHEN SMA.DTMATRICULA <= TUR.DTINICIAL 
                THEN TO_CHAR(TUR.DTINICIAL,'YYYYMM')
                ELSE TO_CHAR(SMA.DTMATRICULA,'YYYYMM')
           END) BETWEEN '201801' AND '201806' THEN 1 ELSE 2 END SEMESTRE

FROM RM.SMATRICPL SMA, RM.STURMA TUR, RM.SSTATUS SST
WHERE SMA.CODCOLIGADA = TUR.CODCOLIGADA
AND   SMA.IDPERLET = TUR.IDPERLET
AND   SMA.CODFILIAL = TUR.CODFILIAL
AND   SMA.CODTURMA = TUR.CODTURMA
AND   SMA.CODCOLIGADA = SST.CODCOLIGADA
AND   SMA.CODSTATUS = SST.CODSTATUS
AND   SMA.ra =  '00046238'
and   SMA.codcoligada = 2
--and    cur.codcurso IN ('NOVA EJA', 'EJA-PRO', 'EJA EM', 'EJA EF II')
ORDER BY RA
--)
--GROUP BY  CODSTATUS, RA, SEMESTRE, RECMODIFIEDON,codturma,recturma
)group by ra,semestre



begin
 -- popula_bi_dbger_pck.REBUILD_INDICES_PRC('FAT_EDUCACAO');
  update_eja_prc('201807','201812');
end;




--=======================================================================

-- verificacao e limpeza de CNPJ

select sma.codcoligada, 
       sma.ra, 
       sma.idhabilitacaofilial, 
       sma.cnpjempresa, 
       sma.recmodifiedby,
       trim(replace(translate(cnpjempresa,'./-','  '),' ',''))cnpj_so_numeros, 
       length(cnpjempresa)tamanho_original, 
       length(replace(translate(cnpjempresa,'./-','  '),' ',''))tamanho_tratado 
from rm.smatricplcompl sma
where length(trim(replace(translate(cnpjempresa,'./-','  '),' ',''))) > 14
and sma.cnpjempresa = '222639000000164'


select length(cnpjempresa), 
       cnpjempresa, length(replace(translate(cnpjempresa,'./-','  '),' ','')),
       replace(translate(cnpjempresa,'./-','  '),' ',''), 
       replace(replace(replace(cnpjempresa,'.',''),'/',''),'-',''), 
       nvl(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp_replace(cnpjempresa,'[A-Z a-z]|\/',''),'-',''),'[:punct:]',''),'[:space:]',''),'[:cntrl:]',''),'°',''),'º',''),',',''),'''',''),0)REG , 
       length(cnpjempresa),
       Replace(Replace(translate(upper(cnpjempresa),
                                               'ÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜ',
                                               'ACEIOUAEIOUAEIOUAOEU'),
                                     '-',
                                     ''),
                             '''',
                             ''),
       length( Replace(Replace(translate(upper(cnpjempresa),
                                               'ÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜ',
                                               'ACEIOUAEIOUAEIOUAOEU'),
                                     '-',
                                     ''),
                             '''',
                             ''))
from rm.smatricplcompl where cnpjempresa is not null and length(replace(translate(cnpjempresa,'./-','  '),' ',''))!= 14    --= '01.622.686/0001-15'

select cnpjempresa, length(cnpjempresa), trim(cnpjempresa), length(trim(cnpjempresa)) from rm.smatricplcompl
where cnpjempresa is not null
and length(cnpjempresa) > 14
and cnpjempresa = '91495499000100		' -- problema de tab, nao aparece no length


-- preenchimento da mobilidade no campo codccustol

select stu.codturma, stu.codfilial, stu.idperlet, stu.codccusto, stc.codturma, stc.codfilial, stc.idperlet, stc.codccustol from rm.sturma stu, rm.sturmacompl stc
where stu.codcoligada = stc.codcoligada--(+)
and   stu.codfilial = stc.codfilial--(+)
and   stu.idperlet = stc.idperlet--(+)
and   stu.codturma = stc.codturma--(+)
--and   stc.codturma is null


--NEO4J -- MOBILIDADE

// POLOS
select 'CREATE ('||descricao||':Polo {polo:'|| descricao/*'Canoas'*/||'})' from dda_bidw.dim_unidades_org 
where descricao like '%CAT%'

// FILIAIS
CREATE (PassoFundo_CAT:Filial {filial:'Passo Fundo'})
CREATE (Bento_CAT:Filial {filial:'Bento Goncalves'})
CREATE (POA_CAT:Filial {filial:'Porto Alegre'})
CREATE (NH_CAT:Filial {filial:'Novo Hamburgo'})
CREATE (Sapiranga_CAT:Filial {filial:'Sapiranga'})

// CIDADES
select 'CREATE ('||NOME||':Cidade {cidade: '|| NOME/*'Canoas'*/||', estado: '||UF_SIGLA||'})' from dda_bidw.dim_municipios 
CREATE (Tapejara:Cidade {cidade:'Tapejara'})
CREATE (Panambi:Cidade {cidade:'Panambi'})
CREATE (NaoMeToque:Cidade {cidade:'Não Me Toque'})
CREATE (Garibaldi:Cidade {cidade:'Garibaldi'})
CREATE (Bento:Cidade {cidade:'Bento Goncalves'})
CREATE (MonteBelo:Cidade {cidade:'Monte Belo'})

// DATAS
CREATE (Julho2018:DataCurso {cidade:'Julho 2018'})
CREATE (Junho2018:DataCurso {cidade:'Junho 2018'})

// CURSOS
select 'CREATE ('||CURS_TITULO||':Curso {curso: '|| CURS_TITULO/*'Canoas'*/||', aat_descricao: '||AAT_DESCRICAO||', ead: '||FLAG_EAD ||'})' from dda_bidw.dim_cursos_modulos 
select * from dda_bidw.dim_cursos_modulos
CREATE (ECONR201800723:Curso {curso:'ECO-NR-2018-00723'})
CREATE (ECONR201800665:Curso {curso:'ECO-NR-2018-00665'})
CREATE (ECOCIPA201800145:Curso {curso:'ECO-CIPA-2018-00145'})

// ALUNOS
CREATE (RA00063720:Aluno {RA:'00063720', Nome: 'Laercio Petry'})
CREATE (RA00012845:Aluno {RA:'00012845', Nome: 'Alvaro Biazotto'})
CREATE (RA00080440:Aluno {RA:'RA00080440', Nome: 'Adair Poletti'})


// RELACIONAMENTOS EMPRESTOU
CREATE
  (PassoFundo_CAT)-[:EMPRESTOU_PARA]->(Canoas),
  (Bento_CAT)-[:EMPRESTOU_PARA]->(Canoas),
  (NH_CAT)-[:EMPRESTOU_PARA]->(Canoas),
  (POA_CAT)-[:EMPRESTOU_PARA]->(Canoas),
  (Sapiranga_CAT)-[:EMPRESTOU_PARA]->(Canoas)
  
// RELACIONAMENTOS ATENDE  
CREATE
  (PassoFundo_CAT)-[:ATENDE]->(Tapejara),
  (PassoFundo_CAT)-[:ATENDE]->(Panambi),
  (PassoFundo_CAT)-[:ATENDE]->(NaoMeToque),
  (Bento_CAT)-[:ATENDE]->(MonteBelo),
  (Bento_CAT)-[:ATENDE]->(Garibaldi),
  (Bento_CAT)-[:ATENDE]->(Bento)
  
// RELACIONAMENTOS CURSO
CREATE
  (Canoas)-[:MINISTROU]->(ECONR201800723),
  (Canoas)-[:MINISTROU]->(ECONR201800665),
  (Canoas)-[:MINISTROU]->(ECOCIPA201800145)
  
// RELACIONAMENTOS CURSA O QUE
CREATE
 (RA00063720)-[:CURSOU]->(ECONR201800723),
 (RA00012845)-[:CURSOU]->(ECONR201800665),
 (RA00080440)-[:CURSOU]->(ECOCIPA201800145)

// RELACIONAMENTOS MORA EM
CREATE
(RA00063720)-[:MORA_EM]->(NaoMeToque),
(RA00012845)-[:MORA_EM]->(Tapejara),
(RA00080440)-[:MORA_EM]->(Bento)

// RELACIONAMENTOS CURSO-DATAS
CREATE
(ECONR201800723)-[:ACONTECEU_EM]->(Julho2018),
(ECONR201800665)-[:ACONTECEU_EM]->(Junho2018)
 
  
  with (Canoas)as a
  MATCH (e)-[:CURSOU]->(d)<-[:MINISTROU]-(a)<-[:EMPRESTOU_PARA]-(b)- [:ATENDE]->(c)<-[:MORA_EM]-(f)
  MATCH (g) <-[:ACONTECEU_EM]-(d)
  RETURN a,b,c,d,e,f,g LIMIT 50
  
-- para retornar simplesmente um registro

MATCH (EJA_ENSINO_MÉDIO_EDUCAÇÃO_A_DISTÂNCIA {ead: "S"}) RETURN EJA_ENSINO_MÉDIO_EDUCAÇÃO_A_DISTÂNCIA

-- alias para buscar todas as colunas no join

select 'fat',fat.*,'aluno',dalu.*,'turma',tur.id, 'curso',cur.* 
from dda_bidw.fat_educacao fat, dda_bidw.dim_alunos dalu, dda_bidw.dim_turmas tur, dda_bidw.dim_cursos_modulos cur
where fat.dalu_id = dalu.id(+)
and   fat.dturm_id = tur.id
and   fat.dcurm_id = cur.id
and dalu.ra in ('00009271',
'00009955',
'00047152',
'00053078',
'00057313'
)


/*INSERE O ARQUIVO XML CONVERTENDO PARA CLOB*/

insert into zfn_scae_xml
select
xmlelement("dr"
          ,xmlelement("uf",regexp_replace(gcoligada.estado,'[[:cntrl:]]',''))
                    ,(select xmlagg(xmlelement("curso"
                                              ,xmlelement("codCurso",regexp_replace(zcurso.codCurso,'[[:cntrl:]]',''))
                                              ,xmlelement("codServico",regexp_replace(zcurso.codservico,'[[:cntrl:]]',''))
                                              ,xmlelement("codTipoPortfolio",regexp_replace(zcurso.codtipoportfolio,'[[:cntrl:]]',''))
                                              ,xmlelement("codPortfolio",regexp_replace(zcurso.codportfolio,'[[:cntrl:]]',''))
                                              ,xmlelement("nomCurso",regexp_replace(zcurso.nomcurso,'[[:cntrl:]]',''))
                                              ,xmlelement("desCurso",regexp_replace(zcurso.desCurso,'[[:cntrl:]]',''))
                                              ,xmlelement("numCargaHorariaHora",regexp_replace(zcurso.numcargahorariahora,'[[:cntrl:]]',''))
                                              ,xmlelement("numCargaHorariaMinuto",regexp_replace(zcurso.numcargahorariaminuto,'[[:cntrl:]]',''))
                                              ,xmlelement("desCentroResp",regexp_replace(zcurso.descentroresp,'[[:cntrl:]]',''))
                                              ,xmlelement("indAtivo",regexp_replace(zcurso.indativo,'[[:cntrl:]]',''))
                                              ,(select xmlagg(xmlelement  ("unidade"
                                                                          ,xmlelement("codUnidade",regexp_replace(zunidade.codUnidade,'[[:cntrl:]]',''))
                                                                          ,(select xmlagg(xmlelement  ("turma"
                                                                                                      ,xmlelement("codTurma",regexp_replace(zturma.codTurma,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("codModalidade",regexp_replace(zturma.codModalidade,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("nomTurma",regexp_replace(zturma.nomTurma,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("datInicio",regexp_replace(zturma.datInicio,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("datTermino",regexp_replace(zturma.datTermino,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("numVagas",regexp_replace(zturma.numVagas,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("numCnpjInstituicaoParceira",regexp_replace(zturma.numCnpjInstituicaoParceira,'[[:cntrl:]]',''))
                                                                                                      ,(select xmlagg(xmlelement  ("matricula"
                                                                                                                                  ,xmlelement("codMatricula",regexp_replace(zmatricula.codMatricula,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indEbep",regexp_replace(zmatricula.indEbep,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indTempoIntegral",regexp_replace(zmatricula.indTempoIntegral,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indViravida",regexp_replace(zmatricula.indViravida,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codFinanciamento",regexp_replace(zmatricula.codFinanciamento,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codEscolaridade",regexp_replace(zmatricula.codEscolaridade,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codSituacao",regexp_replace(zmatricula.codSituacao,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codVinculo",regexp_replace(zmatricula.codVinculo,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("datEfetivacaoMatricula",regexp_replace(zmatricula.datEfetivacaoMatricula,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("datEfetivacaoReconhecimento",regexp_replace(zmatricula.datEfetivacaoReconhecimento,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("datMovimentacao",regexp_replace(zmatricula.datMovimentacao,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indExclusao",regexp_replace(zmatricula.indExclusao,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("numCnpjVinculo",regexp_replace(zmatricula.numCnpjVinculo,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("nomRazaoSocialIndustria",regexp_replace(zmatricula.nomRazaoSocialIndustria,'[[:cntrl:]]',''))
                                                                                                                                            ,(select xmlagg(xmlelement  ("estudante"
                                                                                                                                                                        ,xmlelement("codEstudante",regexp_replace(zestudante.codestudante,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomEstudante",regexp_replace(zestudante.nomestudante,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("datNascimento",regexp_replace(zestudante.datnascimento,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("sexo",regexp_replace(zestudante.sexo,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("desEmail",regexp_replace(zestudante.desemail,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numRegistroGeral",regexp_replace(zestudante.numregistrogeral,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("sigOrgaoExpedidor",regexp_replace(zestudante.sigorgaoexpedidor,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomPaiResp",regexp_replace(zestudante.nompairesp,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numTelefone",regexp_replace(zestudante.numtelefone,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numCelular",regexp_replace(zestudante.numcelular,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numCep",regexp_replace(zestudante.numcep,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("endLogradouro",regexp_replace(zestudante.endlogradouro,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("endComplemento",regexp_replace(zestudante.endcomplemento,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("endNumero",regexp_replace(zestudante.endnumero,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomBairro",regexp_replace(zestudante.nombairro,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("codEstadoCivil",regexp_replace(zestudante.codestadocivil,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("codMunicipio",regexp_replace(zestudante.codmunicipio,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomMae",regexp_replace(zestudante.nommae,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numCpf",regexp_replace(zestudante.numcpf,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numNit",regexp_replace(zestudante.numnit,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("indBrasileiro",regexp_replace(zestudante.indbrasileiro,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomeResponsavelLegal",regexp_replace(zestudante.nomeresponsavellegal,'[[:cntrl:]]',''))
                                                                                                                                                                        )
                                                                                                                                                            )
                                                                                                                                              from (  select      codestudante,
                                                                                                                                                                  nomestudante,
                                                                                                                                                                  datnascimento,
                                                                                                                                                                  sexo,
                                                                                                                                                                  desemail,
                                                                                                                                                                  numregistrogeral,
                                                                                                                                                                  sigorgaoexpedidor,
                                                                                                                                                                  nompairesp,
                                                                                                                                                                  numtelefone,
                                                                                                                                                                  numcelular,
                                                                                                                                                                  numcep,
                                                                                                                                                                  endlogradouro,
                                                                                                                                                                  endcomplemento,
                                                                                                                                                                  endnumero,
                                                                                                                                                                  nombairro,
                                                                                                                                                                  codestadocivil,
                                                                                                                                                                  min(codmunicipio) codmunicipio,
                                                                                                                                                                  nommae,
                                                                                                                                                                  numcpf,
                                                                                                                                                                  numnit,
                                                                                                                                                                  indbrasileiro,
                                                                                                                                                                  nomeresponsavellegal,
                                                                                                                                                                  codturma,
                                                                                                                                                                  ra

                                                                                                                                                      from        zfn_scae

                                                                                                                                                      group by    codestudante,
                                                                                                                                                                  nomestudante,
                                                                                                                                                                  datnascimento,
                                                                                                                                                                  sexo,
                                                                                                                                                                  desemail,
                                                                                                                                                                  numregistrogeral,
                                                                                                                                                                  sigorgaoexpedidor,
                                                                                                                                                                  nompairesp,
                                                                                                                                                                  numtelefone,
                                                                                                                                                                  numcelular,
                                                                                                                                                                  numcep,
                                                                                                                                                                  endlogradouro,
                                                                                                                                                                  endcomplemento,
                                                                                                                                                                  endnumero,
                                                                                                                                                                  nombairro,
                                                                                                                                                                  codestadocivil,
                                                                                                                                                                  nommae,
                                                                                                                                                                  numcpf,
                                                                                                                                                                  numnit,
                                                                                                                                                                  indbrasileiro,
                                                                                                                                                                  nomeresponsavellegal,
                                                                                                                                                                  codturma,
                                                                                                                                                                  ra
                                                                                                                                                    ) zestudante
                                                                                                                                              where zmatricula.codturma = zestudante.codturma
                                                                                                                                              and zmatricula.ra = zestudante.ra
                                                                                                                                              )
                                                                                                                                              ,(select xmlagg(xmlelement  ("disciplina"
                                                                                                                                                                          ,xmlelement("codDisciplina",regexp_replace(zfn_scae_disciplinas.coddisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,xmlelement("datEfetivacaoMatriculaDisciplina",regexp_replace(zfn_scae_disciplinas.datefetivacaomatdisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,xmlelement("datMovimentacaoDisciplina",regexp_replace(zfn_scae_disciplinas.datmovimentacaodisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,xmlelement("codSituacaoDisciplina",regexp_replace(zfn_scae_disciplinas.codsituacaodisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,(select xmlagg(xmlelement  ("tipoavaliacao"
                                                                                                                                                                                                      ,xmlelement("codTipoAvaliacao",regexp_replace(zsd.codtipoavaliacao,'[[:cntrl:]]',''))
                                                                                                                                                                                                      )
                                                                                                                                                                                          )
                                                                                                                                                                            from (  select      zfn_scae_disciplinas.tipoavaliacao codtipoavaliacao,
                                                                                                                                                                                                zfn_scae_disciplinas.ra,
                                                                                                                                                                                                zfn_scae_disciplinas.idturmadisc

                                                                                                                                                                                    from        zfn_scae_disciplinas

                                                                                                                                                                                    group by    zfn_scae_disciplinas.tipoavaliacao,
                                                                                                                                                                                                zfn_scae_disciplinas.ra,
                                                                                                                                                                                                zfn_scae_disciplinas.idturmadisc
                                                                                                                                                                                  ) zsd
                                                                                                                                                                            where nvl(zsd.idturmadisc,1) = nvl(zfn_scae_disciplinas.idturmadisc,1)
                                                                                                                                                                            and zsd.ra = zfn_scae_disciplinas.ra
                                                                                                                                                                            )
                                                                                                                                                                          )
                                                                                                                                                              )
                                                                                                                                                from (  select      zfn_scae_disciplinas.coddisc coddisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade_matriculado datefetivacaomatdisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade datmovimentacaodisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.codstatus_mobilidade codsituacaodisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.ra,
                                                                                                                                                                    zfn_scae_disciplinas.codturma,
                                                                                                                                                                    zfn_scae_disciplinas.idturmadisc

                                                                                                                                                        from        zfn_scae_disciplinas

                                                                                                                                                        group by    zfn_scae_disciplinas.coddisc,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade_matriculado,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade,
                                                                                                                                                                    zfn_scae_disciplinas.codstatus_mobilidade,
                                                                                                                                                                    zfn_scae_disciplinas.ra,
                                                                                                                                                                    zfn_scae_disciplinas.codturma,
                                                                                                                                                                    zfn_scae_disciplinas.idturmadisc
                                                                                                                                                      ) zfn_scae_disciplinas
                                                                                                                                                where zmatricula.codturma = zfn_scae_disciplinas.codturma
                                                                                                                                                and zmatricula.ra = zfn_scae_disciplinas.ra
                                                                                                                                                )
                                                                                                                                  )
                                                                                                                      )
                                                                                                        from (  select      codMatricula,
                                                                                                                            indEbep,
                                                                                                                            indTempoIntegral,
                                                                                                                            indViravida,
                                                                                                                            codFinanciamento,
                                                                                                                            codEscolaridade,
                                                                                                                            codSituacao,
                                                                                                                            codVinculo,
                                                                                                                            datEfetivacaoMatricula,
                                                                                                                            datEfetivacaoReconhecimento,
                                                                                                                            datMovimentacao,
                                                                                                                            indExclusao,
                                                                                                                            numCnpjVinculo,
                                                                                                                            nomRazaoSocialIndustria,
                                                                                                                            idhabilitacaofilial,
                                                                                                                            idperlet,
                                                                                                                            codturma,
                                                                                                                            ra

                                                                                                                from        zfn_scae

                                                                                                                group by    codMatricula,
                                                                                                                            indEbep,
                                                                                                                            indTempoIntegral,
                                                                                                                            indViravida,
                                                                                                                            codFinanciamento,
                                                                                                                            codEscolaridade,
                                                                                                                            codSituacao,
                                                                                                                            codVinculo,
                                                                                                                            datEfetivacaoMatricula,
                                                                                                                            datEfetivacaoReconhecimento,
                                                                                                                            datMovimentacao,
                                                                                                                            indExclusao,
                                                                                                                            numCnpjVinculo,
                                                                                                                            nomRazaoSocialIndustria,
                                                                                                                            idhabilitacaofilial,
                                                                                                                            idperlet,
                                                                                                                            codturma,
                                                                                                                            ra
                                                                                                              ) zmatricula
                                                                                                        where zmatricula.codturma = zturma.codturma
                                                                                                        and zmatricula.idhabilitacaofilial = zturma.idhabilitacaofilial
                                                                                                        and zmatricula.idperlet = zturma.idperlet
                                                                                                        )
                                                                                                      )
                                                                                          )
                                                                            from (  select    codturma,
                                                                                              codmodalidade,
                                                                                              nomturma,
                                                                                              nvl(datinicio,' ') datinicio,
                                                                                              nvl(dattermino,' ') dattermino,
                                                                                              numvagas,
                                                                                              numcnpjinstituicaoparceira,
                                                                                              idhabilitacaofilial,
                                                                                              idperlet

                                                                                    from      zfn_scae

                                                                                    group by  codturma,
                                                                                              codmodalidade,
                                                                                              nomturma,
                                                                                              datinicio,
                                                                                              dattermino,
                                                                                              numvagas,
                                                                                              numcnpjinstituicaoparceira,
                                                                                              idhabilitacaofilial,
                                                                                              idperlet
                                                                                  ) zturma
                                                                            where zturma.idhabilitacaofilial = zunidade.idhabilitacaofilial
                                                                            and zturma.idperlet = zunidade.idperlet
                                                                            )
                                                                          )
                                                              )
                                                from (  select    codUnidade,
                                                                  idhabilitacaofilial,
                                                                  idperlet

                                                        from      zfn_scae

                                                        group by  codunidade,
                                                                  idhabilitacaofilial,
                                                                  idperlet
                                                      ) zunidade
                                                where zunidade.idhabilitacaofilial = zcurso.idhabilitacaofilial
                                                and zunidade.idperlet = zcurso.idperlet
                                                )
                                            )
                                  )
                      from  ( select    codCurso,
                                        codServico,
                                        codTipoPortfolio,
                                        codPortfolio,
                                        nomCurso,
                                        desCurso,
                                        numCargaHorariaHora,
                                        numCargaHorariaMinuto,
                                        desCentroResp,
                                        indAtivo,
                                        idhabilitacaofilial,
                                        idperlet

                              from      zfn_scae

                              group by  codCurso,
                                        codServico,
                                        codTipoPortfolio,
                                        codPortfolio,
                                        nomCurso,
                                        desCurso,
                                        numCargaHorariaHora,
                                        numCargaHorariaMinuto,
                                        desCentroResp,
                                        indAtivo,
                                        idhabilitacaofilial,
                                        idperlet
                            ) zcurso
                      )
).getclobval() dr
from gcoligada
where gcoligada.codcoligada = vCODCOLIGADA;


-- comparar valores com vaores anteriores no oracle

case when sma.ra = LAG((sma.RA),1) OVER (ORDER BY SMA.RA)then 0 else 1 end
  
-- para valores posteriores usa-se o LEAD


-- VALIDACAO MATRICULAS ISOLADAS BASEADAS NA SP_SCAE_2017


SELECT *
FROM (
    SELECT
    uf,
    substr(codCurso,1,30) codCurso,
    codServico,
    codTipoPortfolio,
    codPortfolio,
    nomCurso,
    desCurso,
    numCargaHorariaHora,
    numCargaHorariaMinuto,
    desCentroResp,
    indAtivo,
    substr(codUnidade,1,10)  codUnidade,
    substr(codTurma,1,30) codTurma,
    codModalidade,
    substr(nomTurma,1,60) nomTurma,
    datInicio,
    datTermino,
    numvagas,
    numCnpjInstituicaoParceira,
    substr(codMatricula,1,30) codMatricula,
    indEbep,
    indTempoIntegral,
    indViraVida,
    codFinanciamento,
    codEscolaridade,
    codSituacao,
    codVinculo,
    datEfetivacaoMatricula,
    datEfetivacaoReconhecimento,
    NVL(
    CASE WHEN codSituacao IN ('1','17','24') THEN datEfetivacaoMatricula
       WHEN codSituacao IN ('11','12','13') THEN datTermino
       ELSE COALESCE(CMOBEST,DTALTMOB)
    END,'') datMovimentacao,
    indExclusao,
    substr(numCnpjVinculo,1,14) numCnpjVinculo,
    substr(nomRazaoSocialIndustria,1,100) nomRazaoSocialIndustria,
    codEstudante,
    substr(nomEstudante,1,60) nomEstudante,
    datNascimento,
    sexo,
    desEmail,
    numRegistroGeral,
    substr(sigOrgaoExpedidor,1,10) sigOrgaoExpedidor,
    substr(nomMae,1,60) nomMae,
    substr(nomPaiResp,1,60) nomPaiResp,
    numTelefone,
    numCelular,
    codMunicipio,
    numCep,
    substr(endLogradouro,1,100) endLogradouro,
    endComplemento,
    endNumero,
    substr(nomBairro,1,72) nomBairro,
    codEstadoCivil,
    numCpf,
    substr(numNit,1,11) numNit,
    indBrasileiro ,
    substr(nomeResponsavelLegal,1,100) nomeResponsavelLegal,
    IDHABILITACAOFILIAL,
    IDPERLET,
    RA,
    DTALTMOB,
    DTTURMAMODIF,
    DTMATRICPLMODIF,
    DTMOBDISCEJA
    FROM
        (
        /*SELECT
          GCOLIGADA.ESTADO uf,
          NVL(SHABILITACAOCOMPL.CODCURSOSCAE, SCURSO.CODCURSO || SHABILITACAO.CODHABILITACAO || SGRADE.CODGRADE) codCurso,
          NVL(SHABILITACAOCOMPL.CODSERVICOSCAE,'') codServico,
          NVL(SHABILITACAOCOMPL.CODTIPOPORTFOLIO,'') codTipoPortfolio,
          NVL((CASE SHABILITACAOCOMPL.TIPORTFOLIO
                WHEN 'N' THEN SHABILITACAOCOMPL.CODPORTFOLION
                WHEN 'R' THEN SHABILITACAOCOMPL.CODPORTFOLIOR
              END),'') codPortfolio,
          SCURSO.NOME nomCurso,
          SCURSO.NOME desCurso,
          NVL(SGRADE.CARGAHORARIA,0) numCargaHorariaHora,
          SUBSTR(NVL(TO_CHAR(SGRADE.CARGAHORARIA,'99999999999999D99'),'0'),-2) numCargaHorariaMinuto,
          'CR' desCentroResp,
          CASE WHEN SGRADE.STATUS IN (0,2) THEN '1' ELSE '0' END indAtivo,
          NVL(GFILIAL.IDINTEGRACAO,GFILIAL.CODFILIAL) codUnidade,
          NVL(TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  codTurma,
          NVL(CASE STURMA.TIPOMEDIACAO WHEN 1 THEN '1' WHEN 2 THEN '2' WHEN 3 THEN '3' END,'') codModalidade,
          COALESCE(STURMA.NOME, TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  nomTurma,
          TO_CHAR(STURMA.DTINICIAL,'YYYY-MM-DD') datInicio,
          TO_CHAR(STURMA.DTFINAL,'YYYY-MM-DD') datTermino,
          STURMA.MAXALUNOS numvagas,
          CASE
            WHEN INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'.',5) = 0  AND INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'/',5) = 0
              THEN (CASE WHEN TRIM(TRANSLATE(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'0123456789', ' ')) IS NULL THEN  (SUBSTR(EMPRESATURMA.DESCRICAO,1,14)) ELSE '' END)
              ELSE (CASE WHEN TRIM(TRANSLATE(SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14),'0123456789', ' ')) IS NULL THEN  SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14) ELSE '' END)
          END  numCnpjInstituicaoParceira,
          NVL(SMATRICPLCOMPL.CODMATRICULASCAE,TO_CHAR(STURMACOMPL.IDFT) || SALUNO.RA) codMatricula,
          NVL(SMATRICPLCOMPL.EBEP,'') indEbep,
          NVL(SMATRICPLCOMPL.TEMPOINTEGRAL,'') indTempoIntegral,
          NVL(SMATRICPLCOMPL.VIRAVIDA,'') indViraVida,
          NVL(SMATRICPLCOMPL.CODFINANC,'') codFinanciamento,
          NVL(  CASE PPESSOA.GRAUINSTRUCAO WHEN 'A' THEN '10'
                             WHEN 'B' THEN '10'
                             WHEN 'C' THEN '11'
                             WHEN 'D' THEN '11'
                             WHEN 'E' THEN '12'
                             WHEN 'F' THEN '12'
                             WHEN 'G' THEN '12'
                             WHEN 'H' THEN '12'
              ELSE PPESSOA.GRAUINSTRUCAO END,'0') codEscolaridade,
           COALESCE(
           CASE WHEN (SELECT ESTADO FROM GCOLIGADA WHERE CODCOLIGADA = 2) = 'PR' THEN
                                      CASE NVL(MOBILIDADE.CODSTATUSRES, MOBILIDADE.CODSTATUS)   WHEN 30 THEN '22'
                                                                    WHEN 32 THEN '19'
                                      END
           END,
           CASE NVL(MOBILIDADE.CODSTATUSRES, MOBILIDADE.CODSTATUS)
                              WHEN 2  THEN '1'
                            WHEN 17 THEN '1'
                            WHEN 39 THEN '1'
                            WHEN 5  THEN '5'
                            WHEN 19 THEN '5'
                            WHEN 7  THEN '9'
                            WHEN 21 THEN '9'
                            WHEN 67 THEN '9'
                            WHEN 9  THEN '11'
                            WHEN 23 THEN '11'
                            WHEN 75 THEN '11'
                            WHEN 10 THEN '13'
                            WHEN 11 THEN '13'
                            WHEN 24 THEN '13'
                            WHEN 25 THEN '13'
                            WHEN 43 THEN '13'
                            WHEN 3  THEN '18'
                            WHEN 33 THEN '18'
                            WHEN 68 THEN '18'
                            WHEN 30 THEN '19'
                            WHEN 69 THEN '19'
                            WHEN 31 THEN '20'
                            WHEN 46 THEN '20'
                            WHEN 6  THEN '21'
                            WHEN 20 THEN '21'
                            WHEN 41 THEN '21'
                            WHEN 45 THEN '22'
                            WHEN 73 THEN '22'
                            WHEN 32 THEN '23'
                            WHEN 70 THEN '24'
                            WHEN 42 THEN '12'
                            WHEN 66 THEN '17'
                            WHEN 4 THEN  '1'
                            WHEN 18 THEN '1'
                            WHEN 40 THEN '1'
                            WHEN 63 THEN '12'
              END,'')  codSituacao,
          NVL(SMATRICPLCOMPL.CATEGORIA,'') codVinculo,
          NVL(TO_CHAR((CASE WHEN SMATRICPL.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICPL.DTMATRICULA END),'YYYY-MM-DD'),'') datEfetivacaoMatricula,
          NVL(TO_CHAR(MOBILIDADE_RECSABERES.DTALTERACAO,'YYYY-MM-DD'),'') datEfetivacaoReconhecimento,
          TO_CHAR(SMATRICPLCOMPL.CMOBEST,'YYYY-MM-DD') CMOBEST,
            CASE WHEN MOBILIDADE.CODSTATUS IN ( 4, 18, 40 ) THEN 1 ELSE 0 END indExclusao,
          NVL(  CASE WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CEI'  THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CEIEMPRESA,'.',''),'-',''),'/','')
                 WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CNPJ' THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CNPJEMPRESA,'.',''),'-',''),'/','')
              END , '' ) AS numCnpjVinculo,
          NVL(SMATRICPLCOMPL.NOMEEMPRESA,'') nomRazaoSocialIndustria,
          NVL(SALUNOCOMPL.CODALUNOSCAE,SALUNO.RA) codEstudante,
          PPESSOA.NOME nomEstudante,
          NVL(TO_CHAR(PPESSOA.DTNASCIMENTO,'YYYY-MM-DD'),'') datNascimento,
          NVL(PPESSOA.SEXO,'') sexo,
          NVL(PPESSOA.EMAIL,'') desEmail,
          NVL(PPESSOA.CARTIDENTIDADE,'') numRegistroGeral,
          NVL(PPESSOA.ORGEMISSORIDENT,'') sigOrgaoExpedidor,
          NVL(MAE.NOME,'') nomMae,
          NVL(PAI.NOME,'') nomPaiResp,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE1,' ', ''),'(',''),')',''),'-',''),'.',''),'') numTelefone,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,' ', ''),'(',''),')',''),'-',''),'.',''),'') numCelular,
          NVL(PPESSOA.CEP,'') numCep,
          NVL(PPESSOA.RUA,'') endLogradouro,
          NVL(PPESSOA.COMPLEMENTO,'') endComplemento,
          NVL(PPESSOA.NUMERO,'') endNumero,
          NVL(PPESSOA.BAIRRO,'') nomBairro,
          NVL (CASE PPESSOA.ESTADOCIVIL WHEN 'C' THEN '2'
                           WHEN 'S' THEN '1'
                           WHEN 'I' THEN '5'
                           WHEN 'D' THEN '3'
                           WHEN 'V' THEN '4'
              END,'0') codEstadoCivil,
          NVL(TO_CHAR(ZSCAEMUNICIPIO.CODIGO),'') codMunicipio,
          NVL(PPESSOA.CPF,'') numCpf,
          NVL(SALUNOCOMPL.NIT,'') numNit,
          SHABILITACAOFILIAL.IDHABILITACAOFILIAL,
          SPLETIVO.IDPERLET,
          SMATRICPL.RA,
          CASE WHEN PPESSOA.NACIONALIDADE = 10 THEN 'B' ELSE 'E' END indBrasileiro,
          NVL(COALESCE( MAE.NOME, PAI.NOME, RESPLEGAL.NOMEFANTASIA ),'') nomeResponsavelLegal,
          MOBILIDADE.CODSTATUS,
          TO_CHAR(CASE
                WHEN MOBILIDADE.CODSTATUS IN ( 2, 17, 39, 66 )
                THEN (CASE WHEN SMATRICPL.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICPL.DTMATRICULA END)
                ELSE MOBILIDADE.DTALTERACAO
              END,'YYYY-MM-DD') DTALTMOB,
          STURMA.RECMODIFIEDON DTTURMAMODIF,
          CASE WHEN SMATRICPLCOMPL.RECMODIFIEDON > SMATRICPL.RECMODIFIEDON THEN SMATRICPLCOMPL.RECMODIFIEDON
             ELSE  SMATRICPL.RECMODIFIEDON END DTMATRICPLMODIF,
          MOBILIDADEDISCEJA.DTALTERACAO AS DTMOBDISCEJA
        FROM SMATRICPL
          INNER JOIN GCOLIGADA
              ON GCOLIGADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
          INNER JOIN SHABILITACAOFILIAL
              ON SHABILITACAOFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
          INNER JOIN SHABILITACAO
              ON SHABILITACAO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SHABILITACAO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SHABILITACAO.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
          LEFT JOIN SHABILITACAOCOMPL
              ON SHABILITACAOCOMPL.CODCOLIGADA = SHABILITACAO.CODCOLIGADA
              AND SHABILITACAOCOMPL.CODCURSO = SHABILITACAO.CODCURSO
              AND SHABILITACAOCOMPL.CODHABILITACAO = SHABILITACAO.CODHABILITACAO
          INNER JOIN GFILIAL
              ON GFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND GFILIAL.CODFILIAL = SMATRICPL.CODFILIAL
          INNER JOIN SCURSO
              ON SCURSO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SCURSO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
          INNER JOIN SCURSOCOMPL
            ON SCURSO.CODCOLIGADA = SCURSOCOMPL.CODCOLIGADA
            AND SCURSO.CODCURSO = SCURSOCOMPL.CODCURSO
          INNER JOIN STURMA
              ON STURMA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND STURMA.CODFILIAL = SMATRICPL.CODFILIAL
              AND STURMA.CODTURMA = SMATRICPL.CODTURMA
              AND STURMA.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN STURMACOMPL
              ON STURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
              AND STURMA.CODFILIAL = STURMACOMPL.CODFILIAL
              AND STURMA.CODTURMA = STURMACOMPL.CODTURMA
              AND STURMA.IDPERLET = STURMACOMPL.IDPERLET
          INNER JOIN SPLETIVO
              ON SPLETIVO.CODCOLIGADA = STURMA.CODCOLIGADA
              AND SPLETIVO.IDPERLET = STURMA.IDPERLET
          LEFT JOIN GCCUSTO
              ON GCCUSTO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND GCCUSTO.CODCCUSTO = SHABILITACAOFILIAL.CODCCUSTO
          INNER JOIN SGRADE
              ON SGRADE.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SGRADE.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SGRADE.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              AND SGRADE.CODGRADE = SHABILITACAOFILIAL.CODGRADE
          INNER JOIN SMATRICPLCOMPL
              ON SMATRICPL.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND SMATRICPL.IDPERLET = SMATRICPLCOMPL.IDPERLET
              AND SMATRICPL.RA = SMATRICPLCOMPL.RA
              AND SMATRICPL.IDHABILITACAOFILIAL = SMATRICPLCOMPL.IDHABILITACAOFILIAL
          LEFT JOIN GCONSIST EMPRESA
              ON EMPRESA.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND EMPRESA.CODTABELA = 'SEMPRESA'
              AND EMPRESA.CODCLIENTE = SMATRICPLCOMPL.EMPRESA
          INNER JOIN SALUNO
              ON SALUNO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SALUNO.RA = SMATRICPL.RA
          INNER JOIN SALUNOCOMPL
              ON SALUNO.CODCOLIGADA = SALUNOCOMPL.CODCOLIGADA
              AND SALUNO.RA = SALUNOCOMPL.RA
          INNER JOIN SPESSOA
              ON SPESSOA.CODIGO = SALUNO.CODPESSOA
          INNER JOIN PPESSOA
              ON PPESSOA.CODIGO = SALUNO.CODPESSOA
          LEFT JOIN PPESSOA MAE
              ON MAE.CODIGO = SPESSOA.CODPESSOAMAE
          LEFT JOIN PPESSOA PAI
              ON PAI.CODIGO = SPESSOA.CODPESSOAPAI
          LEFT JOIN ZSCAEMUNICIPIO
              ON UPPER(ZSCAEMUNICIPIO.MUNICIPIO) = UPPER(PPESSOA.CIDADE)
              AND ZSCAEMUNICIPIO.UF = PPESSOA.ESTADO
          LEFT JOIN FCFO RESPLEGAL
              ON RESPLEGAL.CODCOLIGADA = SALUNO.CODCOLCFO
              AND RESPLEGAL.CODCFO = SALUNO.CODCFO
          LEFT JOIN GCONSIST EMPRESATURMA
            ON  EMPRESATURMA.CODCOLIGADA  = STURMACOMPL.CODCOLIGADA
            AND EMPRESATURMA.CODTABELA    = 'SEMPRESA'
            AND EMPRESATURMA.CODCLIENTE   = STURMACOMPL.EMPRESAP
          INNER JOIN ZSCAEMOBILIDADE MOBILIDADE
              ON  MOBILIDADE.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE.RA = SMATRICPL.RA
              AND MOBILIDADE.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN ZSCAEMOBILIDADE_RECSABERES MOBILIDADE_RECSABERES
              ON  MOBILIDADE_RECSABERES.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_RECSABERES.RA = SMATRICPL.RA
              AND MOBILIDADE_RECSABERES.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_RECSABERES.IDPERLET = SMATRICPL.IDPERLET
          INNER JOIN ZSCAEMOBILIDADE_MATRICULADO MOBILIDADE_MATRICULADO
              ON  MOBILIDADE_MATRICULADO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_MATRICULADO.RA = SMATRICPL.RA
              AND MOBILIDADE_MATRICULADO.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_MATRICULADO.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN (
                SELECT
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET,
                MAX(ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO) AS DTALTERACAO

                FROM ZSCAEMOBILIDADE_DISCIPLINA

                WHERE ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO BETWEEN vDATA1 AND vDATA2

                GROUP BY
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET

                ) MOBILIDADEDISCEJA
              ON  MOBILIDADEDISCEJA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADEDISCEJA.RA = SMATRICPL.RA
              AND MOBILIDADEDISCEJA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADEDISCEJA.IDPERLET = SMATRICPL.IDPERLET

        WHERE  GCOLIGADA.CODCOLIGADA = vCODCOLIGADA
        AND    NVL(MOBILIDADE.CODSTATUSRES, MOBILIDADE.CODSTATUS) NOT IN ( 1, 16, 37, 38, 65, 13, 74 )
        AND   (MOBILIDADE.CODSTATUS NOT IN ( 4, 18, 40 ) OR (MOBILIDADE.DTALTERACAO > vDATA1 AND MOBILIDADE.DTALTERACAO >= ADD_MONTHS(TO_DATE('01-'||TO_CHAR(STURMA.DTINICIAL,'MM')||'-'||(TO_CHAR(STURMA.DTINICIAL,'YYYY')),'DD-MM-YYYY'),1) ))

        UNION ALL*/

        /***********MATRICULA ISOLADA***********/

                SELECT
          GCOLIGADA.ESTADO uf,
          NVL(SHABILITACAOCOMPL.CODCURSOSCAE, SCURSO.CODCURSO || SHABILITACAO.CODHABILITACAO || SGRADE.CODGRADE) codCurso,
          NVL(SHABILITACAOCOMPL.CODSERVICOSCAE,'') codServico,
          NVL(SHABILITACAOCOMPL.CODTIPOPORTFOLIO,'') codTipoPortfolio,
          NVL((CASE SHABILITACAOCOMPL.TIPORTFOLIO
                WHEN 'N' THEN SHABILITACAOCOMPL.CODPORTFOLION
                WHEN 'R' THEN SHABILITACAOCOMPL.CODPORTFOLIOR
              END),'') codPortfolio,
          SCURSO.NOME nomCurso,
          SCURSO.NOME desCurso,
          NVL(SGRADE.CARGAHORARIA,0) numCargaHorariaHora,
          SUBSTR(NVL(TO_CHAR(SGRADE.CARGAHORARIA,'99999999999999D99'),'0'),-2) numCargaHorariaMinuto,
          'CR' desCentroResp,
          CASE WHEN SGRADE.STATUS IN (0,2) THEN '1' ELSE '0' END indAtivo,
          NVL(GFILIAL.IDINTEGRACAO,GFILIAL.CODFILIAL) codUnidade,
          NVL(TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  codTurma,
          NVL(CASE STURMA.TIPOMEDIACAO WHEN 1 THEN '1' WHEN 2 THEN '2' WHEN 3 THEN '3' END,'') codModalidade,
          COALESCE(STURMA.NOME, TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  nomTurma,
          TO_CHAR(STURMA.DTINICIAL,'YYYY-MM-DD') datInicio,
          TO_CHAR(STURMA.DTFINAL,'YYYY-MM-DD') datTermino,
          STURMA.MAXALUNOS numvagas,
          CASE
            WHEN INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'.',5) = 0  AND INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'/',5) = 0
              THEN (CASE WHEN TRIM(TRANSLATE(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'0123456789', ' ')) IS NULL THEN  (SUBSTR(EMPRESATURMA.DESCRICAO,1,14)) ELSE '' END)
              ELSE (CASE WHEN TRIM(TRANSLATE(SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14),'0123456789', ' ')) IS NULL THEN  SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14) ELSE '' END)
          END  numCnpjInstituicaoParceira,
          NVL(SMATRICPLCOMPL.CODMATRICULASCAE,TO_CHAR(STURMACOMPL.IDFT) || SALUNO.RA) codMatricula,
          NVL(SMATRICPLCOMPL.EBEP,'') indEbep,
          NVL(SMATRICPLCOMPL.TEMPOINTEGRAL,'') indTempoIntegral,
          NVL(SMATRICPLCOMPL.VIRAVIDA,'') indViraVida,
          NVL(SMATRICPLCOMPL.CODFINANC,'') codFinanciamento,
          NVL(  CASE PPESSOA.GRAUINSTRUCAO WHEN 'A' THEN '10'
                             WHEN 'B' THEN '10'
                             WHEN 'C' THEN '11'
                             WHEN 'D' THEN '11'
                             WHEN 'E' THEN '12'
                             WHEN 'F' THEN '12'
                             WHEN 'G' THEN '12'
                             WHEN 'H' THEN '12'
              ELSE PPESSOA.GRAUINSTRUCAO END,'0') codEscolaridade,
           COALESCE(
           CASE WHEN (SELECT ESTADO FROM rm.GCOLIGADA WHERE CODCOLIGADA = 2) = 'PR' THEN
                                      CASE MOBILIDADE_ISOLADA.CODSTATUS   WHEN 30 THEN '22'
                                                                WHEN 32 THEN '19'
                                      END
           END,
           CASE MOBILIDADE_ISOLADA.CODSTATUS
                              WHEN 2  THEN '1'
                            WHEN 17 THEN '1'
                            WHEN 39 THEN '1'
                            WHEN 5  THEN '5'
                            WHEN 19 THEN '5'
                            WHEN 7  THEN '9'
                            WHEN 21 THEN '9'
                            WHEN 67 THEN '9'
                            WHEN 9  THEN '11'
                            WHEN 23 THEN '11'
                            WHEN 75 THEN '11'
                            WHEN 10 THEN '13'
                            WHEN 11 THEN '13'
                            WHEN 24 THEN '13'
                            WHEN 25 THEN '13'
                            WHEN 43 THEN '13'
                            WHEN 3  THEN '18'
                            WHEN 33 THEN '18'
                            WHEN 68 THEN '18'
                            WHEN 30 THEN '19'
                            WHEN 69 THEN '19'
                            WHEN 31 THEN '20'
                            WHEN 46 THEN '20'
                            WHEN 6  THEN '21'
                            WHEN 20 THEN '21'
                            WHEN 41 THEN '21'
                            WHEN 45 THEN '22'
                            WHEN 73 THEN '22'
                            WHEN 32 THEN '23'
                            WHEN 70 THEN '24'
                            WHEN 42 THEN '12'
                            WHEN 66 THEN '17'
                            WHEN 4 THEN  '1'
                            WHEN 18 THEN '1'
                            WHEN 40 THEN '1'
                            WHEN 63 THEN '12'
              END,'')  codSituacao,
          NVL(SMATRICPLCOMPL.CATEGORIA,'') codVinculo,
          NVL(TO_CHAR((CASE WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICULA.DTMATRICULA END),'YYYY-MM-DD'),'') datEfetivacaoMatricula,
          NVL(TO_CHAR(MOBILIDADE_RECSABERES.DTALTERACAO,'YYYY-MM-DD'),'') datEfetivacaoReconhecimento,
          TO_CHAR(SMATRICPLCOMPL.CMOBEST,'YYYY-MM-DD') CMOBEST,
            CASE WHEN MOBILIDADE_ISOLADA.CODSTATUS IN ( 4, 18, 40 ) THEN 1 ELSE 0 END indExclusao,
          NVL(  CASE WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CEI'  THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CEIEMPRESA,'.',''),'-',''),'/','')
                 WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CNPJ' THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CNPJEMPRESA,'.',''),'-',''),'/','')
              END , '' ) AS numCnpjVinculo,
          NVL(SMATRICPLCOMPL.NOMEEMPRESA,'') nomRazaoSocialIndustria,
          NVL(SALUNOCOMPL.CODALUNOSCAE,SALUNO.RA) codEstudante,
          PPESSOA.NOME nomEstudante,
          NVL(TO_CHAR(PPESSOA.DTNASCIMENTO,'YYYY-MM-DD'),'') datNascimento,
          NVL(PPESSOA.SEXO,'') sexo,
          NVL(PPESSOA.EMAIL,'') desEmail,
          NVL(PPESSOA.CARTIDENTIDADE,'') numRegistroGeral,
          NVL(PPESSOA.ORGEMISSORIDENT,'') sigOrgaoExpedidor,
          NVL(MAE.NOME,'') nomMae,
          NVL(PAI.NOME,'') nomPaiResp,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE1,' ', ''),'(',''),')',''),'-',''),'.',''),'') numTelefone,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,' ', ''),'(',''),')',''),'-',''),'.',''),'') numCelular,
          NVL(PPESSOA.CEP,'') numCep,
          NVL(PPESSOA.RUA,'') endLogradouro,
          NVL(PPESSOA.COMPLEMENTO,'') endComplemento,
          NVL(PPESSOA.NUMERO,'') endNumero,
          NVL(PPESSOA.BAIRRO,'') nomBairro,
          NVL (CASE PPESSOA.ESTADOCIVIL WHEN 'C' THEN '2'
                           WHEN 'S' THEN '1'
                           WHEN 'I' THEN '5'
                           WHEN 'D' THEN '3'
                           WHEN 'V' THEN '4'
              END,'0') codEstadoCivil,
          NVL(TO_CHAR(ZSCAEMUNICIPIO.CODIGO),'') codMunicipio,
          NVL(PPESSOA.CPF,'') numCpf,
          NVL(SALUNOCOMPL.NIT,'') numNit,
          SHABILITACAOFILIAL.IDHABILITACAOFILIAL,
          SPLETIVO.IDPERLET,
          SMATRICPL.RA,
          CASE WHEN PPESSOA.NACIONALIDADE = 10 THEN 'B' ELSE 'E' END indBrasileiro,
          NVL(COALESCE( MAE.NOME, PAI.NOME, RESPLEGAL.NOMEFANTASIA ),'') nomeResponsavelLegal,
          MOBILIDADE_ISOLADA.CODSTATUS,
          TO_CHAR(CASE
                WHEN MOBILIDADE_ISOLADA.CODSTATUS IN ( 2, 17, 39, 66 )
                THEN (CASE WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICULA.DTMATRICULA END)
                ELSE MOBILIDADE_ISOLADA.DTALTERACAO
              END,'YYYY-MM-DD') DTALTMOB,
          STURMA.RECMODIFIEDON DTTURMAMODIF,
          CASE WHEN SMATRICPLCOMPL.RECMODIFIEDON > SMATRICPL.RECMODIFIEDON THEN SMATRICPLCOMPL.RECMODIFIEDON
             ELSE  SMATRICPL.RECMODIFIEDON END DTMATRICPLMODIF,
          MOBILIDADEDISCEJA.DTALTERACAO AS DTMOBDISCEJA
        FROM rm.SMATRICPL
          INNER JOIN rm.SMATRICULA
              ON SMATRICULA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SMATRICULA.IDPERLET = SMATRICPL.IDPERLET
              AND SMATRICULA.RA = SMATRICPL.RA
          INNER JOIN rm.STURMADISC
              ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
              AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
          INNER JOIN rm.GCOLIGADA
              ON GCOLIGADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
          INNER JOIN rm.SHABILITACAOFILIAL
              ON SHABILITACAOFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
          INNER JOIN rm.SHABILITACAO
              ON SHABILITACAO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SHABILITACAO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SHABILITACAO.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
          LEFT JOIN rm.SHABILITACAOCOMPL
              ON SHABILITACAOCOMPL.CODCOLIGADA = SHABILITACAO.CODCOLIGADA
              AND SHABILITACAOCOMPL.CODCURSO = SHABILITACAO.CODCURSO
              AND SHABILITACAOCOMPL.CODHABILITACAO = SHABILITACAO.CODHABILITACAO
          INNER JOIN rm.GFILIAL
              ON GFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND GFILIAL.CODFILIAL = SMATRICPL.CODFILIAL
          INNER JOIN rm.SCURSO
              ON SCURSO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SCURSO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
          INNER JOIN rm.SCURSOCOMPL
            ON SCURSO.CODCOLIGADA = SCURSOCOMPL.CODCOLIGADA
            AND SCURSO.CODCURSO = SCURSOCOMPL.CODCURSO
          INNER JOIN rm.STURMA
              ON STURMA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND STURMA.CODFILIAL = SMATRICPL.CODFILIAL
              AND STURMA.CODTURMA = STURMADISC.CODTURMA
              AND STURMA.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN rm.STURMACOMPL
              ON STURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
              AND STURMA.CODFILIAL = STURMACOMPL.CODFILIAL
              AND STURMA.CODTURMA = STURMACOMPL.CODTURMA
              AND STURMA.IDPERLET = STURMACOMPL.IDPERLET
          INNER JOIN rm.SPLETIVO
              ON SPLETIVO.CODCOLIGADA = STURMA.CODCOLIGADA
              AND SPLETIVO.IDPERLET = STURMA.IDPERLET
          LEFT JOIN rm.GCCUSTO
              ON GCCUSTO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND GCCUSTO.CODCCUSTO = SHABILITACAOFILIAL.CODCCUSTO
          INNER JOIN rm.SGRADE
              ON SGRADE.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SGRADE.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SGRADE.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              AND SGRADE.CODGRADE = SHABILITACAOFILIAL.CODGRADE
          INNER JOIN rm.SMATRICPLCOMPL
              ON SMATRICPL.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND SMATRICPL.IDPERLET = SMATRICPLCOMPL.IDPERLET
              AND SMATRICPL.RA = SMATRICPLCOMPL.RA
              AND SMATRICPL.IDHABILITACAOFILIAL = SMATRICPLCOMPL.IDHABILITACAOFILIAL
          LEFT JOIN rm.GCONSIST EMPRESA
              ON EMPRESA.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND EMPRESA.CODTABELA = 'SEMPRESA'
              AND EMPRESA.CODCLIENTE = SMATRICPLCOMPL.EMPRESA
          INNER JOIN rm.SALUNO
              ON SALUNO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SALUNO.RA = SMATRICPL.RA
          INNER JOIN rm.SALUNOCOMPL
              ON SALUNO.CODCOLIGADA = SALUNOCOMPL.CODCOLIGADA
              AND SALUNO.RA = SALUNOCOMPL.RA
          INNER JOIN rm.SPESSOA
              ON SPESSOA.CODIGO = SALUNO.CODPESSOA
          INNER JOIN rm.PPESSOA
              ON PPESSOA.CODIGO = SALUNO.CODPESSOA
          LEFT JOIN rm.PPESSOA MAE
              ON MAE.CODIGO = SPESSOA.CODPESSOAMAE
          LEFT JOIN rm.PPESSOA PAI
              ON PAI.CODIGO = SPESSOA.CODPESSOAPAI
          LEFT JOIN rm.ZSCAEMUNICIPIO
              ON UPPER(ZSCAEMUNICIPIO.MUNICIPIO) = UPPER(PPESSOA.CIDADE)
              AND ZSCAEMUNICIPIO.UF = PPESSOA.ESTADO
          LEFT JOIN rm.FCFO RESPLEGAL
              ON RESPLEGAL.CODCOLIGADA = SALUNO.CODCOLCFO
              AND RESPLEGAL.CODCFO = SALUNO.CODCFO
          LEFT JOIN rm.GCONSIST EMPRESATURMA
            ON  EMPRESATURMA.CODCOLIGADA  = STURMACOMPL.CODCOLIGADA
            AND EMPRESATURMA.CODTABELA    = 'SEMPRESA'
            AND EMPRESATURMA.CODCLIENTE   = STURMACOMPL.EMPRESAP
          INNER JOIN (SELECT  SLOGMATRICULA.CODCOLIGADA,
    SLOGMATRICULA.RA,
    SLOGMATRICULA.CODSTATUS,
    STURMADISC.IDHABILITACAOFILIAL,
    SMATRICULA.IDPERLET,
    SLOGMATRICULA.DTALTERACAO
FROM rm.SLOGMATRICULA
INNER JOIN rm.SMATRICULA
 ON SMATRICULA.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
AND SMATRICULA.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
AND SMATRICULA.RA = SLOGMATRICULA.RA
INNER JOIN rm.STURMADISC
 ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
WHERE SLOGMATRICULA.CODCOLIGADA = 2
AND SMATRICULA.TIPODISCIPLINA = 'E'
AND  SLOGMATRICULA.CODSTATUS NOT IN ( 1,16,37,38,65,13,74 )
AND IDLOGMATRICULA = (  SELECT MAX(IDLOGMATRICULA) FROM rm.SLOGMATRICULA SLOGMATRICULA_A
            WHERE SLOGMATRICULA_A.CODCOLIGADA       = SLOGMATRICULA.CODCOLIGADA
            AND   SLOGMATRICULA_A.IDTURMADISC   = SLOGMATRICULA.IDTURMADISC
            AND   SLOGMATRICULA_A.RA                = SLOGMATRICULA.RA
            AND   SLOGMATRICULA_A.DTALTERACAO       <= '30/06/2018'
            AND   SLOGMATRICULA_A.CODSTATUS NOT IN ( 1,16,37,38,65,13,74 )
            AND   SLOGMATRICULA_A.CODSTATUS IN (2,17,39,5,19,7,21,67,9,23,10,11,24,25,3,33,68,30,69,31,46,6,20,41,45,73,32,70,42,66,4,18,40,63)
          ))/*ZSCAEMOBILIDADE_ISOLADA*/ MOBILIDADE_ISOLADA
            ON  MOBILIDADE_ISOLADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
            AND MOBILIDADE_ISOLADA.RA = SMATRICPL.RA
            AND MOBILIDADE_ISOLADA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
            AND MOBILIDADE_ISOLADA.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN (SELECT  CODCOLIGADA,
    RA,
    CODSTATUS,
    IDHABILITACAOFILIAL,
    IDPERLET,
    DTALTERACAO
FROM rm.SLOGPLETIVO
WHERE CODCOLIGADA = 2/*vCODCOLIGADA*/
AND SLOGPLETIVO.CODSTATUS = 70
AND IDLOGPLETIVO = (  SELECT MIN(IDLOGPLETIVO) FROM rm.SLOGPLETIVO SLOGPLETIVO_A
            WHERE SLOGPLETIVO_A.CODCOLIGADA         = SLOGPLETIVO.CODCOLIGADA
            AND   SLOGPLETIVO_A.IDHABILITACAOFILIAL = SLOGPLETIVO.IDHABILITACAOFILIAL
            AND   SLOGPLETIVO_A.RA                  = SLOGPLETIVO.RA
            AND   SLOGPLETIVO_A.IDPERLET            = SLOGPLETIVO.IDPERLET
            AND   SLOGPLETIVO_A.DTALTERACAO        <= '30/06/2018'/*vDATA2*/
            AND   SLOGPLETIVO_A.CODSTATUS = 70
          ))/*ZSCAEMOBILIDADE_RECSABERES*/ MOBILIDADE_RECSABERES
              ON  MOBILIDADE_RECSABERES.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_RECSABERES.RA = SMATRICPL.RA
              AND MOBILIDADE_RECSABERES.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_RECSABERES.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN (
                SELECT
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET,
                MAX(ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO) AS DTALTERACAO

                FROM (SELECT  SMATRICULA.CODCOLIGADA,
    SMATRICULA.RA,
    SLOGMATRICULA.CODSTATUS,
    SMATRICULA.IDTURMADISC,
    SMATRICULA.IDPERLET,
    SMATRICULA.IDHABILITACAOFILIAL,
    SLOGMATRICULA.DTALTERACAO
FROM rm.SLOGMATRICULA
INNER JOIN rm.STURMADISC
    ON STURMADISC.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
    AND STURMADISC.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
INNER JOIN rm.SMATRICULA
    ON SLOGMATRICULA.CODCOLIGADA = SMATRICULA.CODCOLIGADA
    AND SLOGMATRICULA.IDTURMADISC = SMATRICULA.IDTURMADISC
    AND SLOGMATRICULA.RA = SMATRICULA.RA
INNER JOIN rm.GCONSIST
    ON GCONSIST.CODTABELA = 'DISCEJA'
    AND GCONSIST.APLICACAO = 'S'
    AND GCONSIST.CODCOLIGADA = STURMADISC.CODCOLIGADA
    AND GCONSIST.CODCLIENTE = STURMADISC.CODDISC
WHERE SLOGMATRICULA.CODCOLIGADA = 2
AND IDLOGMATRICULA = (  SELECT MAX(IDLOGMATRICULA) FROM rm.SLOGMATRICULA SLOGMATRICULA_A
            WHERE SLOGMATRICULA_A.CODCOLIGADA         = SLOGMATRICULA.CODCOLIGADA
            AND   SLOGMATRICULA_A.IDTURMADISC     = SLOGMATRICULA.IDTURMADISC
            AND   SLOGMATRICULA_A.RA                  = SLOGMATRICULA.RA
            AND   SLOGMATRICULA_A.DTALTERACAO        <= '30/06/2018'/*vDATA2*/
           ))ZSCAEMOBILIDADE_DISCIPLINA

                WHERE ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO BETWEEN '01/06/2018'/*vDATA1*/ AND '30/06/2018'/*vDATA2*/

                GROUP BY
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET

                ) MOBILIDADEDISCEJA
              ON  MOBILIDADEDISCEJA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADEDISCEJA.RA = SMATRICPL.RA
              AND MOBILIDADEDISCEJA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADEDISCEJA.IDPERLET = SMATRICPL.IDPERLET

        WHERE GCOLIGADA.CODCOLIGADA = 2/*vCODCOLIGADA*/
        AND   SMATRICULA.TIPODISCIPLINA = 'E'
        AND   MOBILIDADE_ISOLADA.CODSTATUS NOT IN ( 1, 16, 37, 38, 65, 13, 74 )
        AND   (MOBILIDADE_ISOLADA.CODSTATUS NOT IN ( 4, 18, 40 ) OR (MOBILIDADE_ISOLADA.DTALTERACAO > '01/06/2018'/*vDATA1*/ AND MOBILIDADE_ISOLADA.DTALTERACAO >= ADD_MONTHS(TO_DATE('01-'||TO_CHAR(STURMA.DTINICIAL,'MM')||'-'||(TO_CHAR(STURMA.DTINICIAL,'YYYY')),'DD-MM-YYYY'),1) ))


  ) TAB1

        GROUP BY  uf,
              codCurso,
              codServico,
              codTipoPortfolio,
              codPortfolio,
              nomCurso,
              desCurso   ,
              numCargaHorariaHora,
              numCargaHorariaMinuto,
              desCentroResp,
              indAtivo,
              codUnidade,
              codTurma,
              codModalidade,
              nomTurma,
              datInicio,
              datTermino,
              numvagas,
              numCnpjInstituicaoParceira,
              codMatricula,
              indEbep,
              indTempoIntegral,
              indViraVida,
              codFinanciamento,
              codEscolaridade,
              codSituacao,
              codVinculo,
              datEfetivacaoMatricula,
              datEfetivacaoReconhecimento,
              NVL(
              CASE WHEN codSituacao IN ('1','17','24') THEN datEfetivacaoMatricula
                 WHEN codSituacao IN ('11','12','13') THEN datTermino
                 ELSE COALESCE(CMOBEST,DTALTMOB)
              END,''),
              CMOBEST,
              indExclusao,
              numCnpjVinculo,
              nomRazaoSocialIndustria ,
              codEstudante,
              nomEstudante,
              datNascimento,
              sexo ,
              desEmail ,
              numRegistroGeral,
              sigOrgaoExpedidor,
              nomMae,
              nomPaiResp,
              numTelefone,
              numCelular ,
              codMunicipio,
              numCep,
              endLogradouro,
              endComplemento,
              endNumero,
              nomBairro,
              codEstadoCivil,
              numCpf,
              numNit,
              IDHABILITACAOFILIAL,
              IDPERLET,
              RA  ,
              indBrasileiro ,
              nomeResponsavelLegal,
              DTALTMOB,
              DTTURMAMODIF,
              DTMATRICPLMODIF,
              DTMOBDISCEJA
    )FN_SCAE
WHERE ( ( ( EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DTALTMOB,'YYYY-MM-DD')) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM  TO_DATE(FN_SCAE.DTALTMOB,'YYYY-MM-DD')) = '2018'/*v_ANO_S*/) AND TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '30/06/2018'/*vDATA2*/ )
  OR  (   ( ( EXTRACT(MONTH FROM FN_SCAE.DTTURMAMODIF) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTTURMAMODIF) = '2018'/*v_ANO_S*/ ) AND ( TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '30/06/2018'/*vDATA2*/ AND TO_DATE(FN_SCAE.DATTERMINO,'YYYY-MM-DD') >= '30/06/2018'/*vDATA1*/ )  )
      OR  ( ( EXTRACT(MONTH FROM FN_SCAE.DTMATRICPLMODIF) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTMATRICPLMODIF) = '2018'/*v_ANO_S*/ ) AND ( TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '30/06/2018' /*vDATA2*/ AND TO_DATE(FN_SCAE.DATTERMINO,'YYYY-MM-DD') >= '01/06/2018'/*vDATA1*/ ) )
    )
  OR  ( ( EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD')) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD')) = '2018'/*v_ANO_S*/ ) )
  OR  ( ( EXTRACT(MONTH FROM FN_SCAE.DTMOBDISCEJA) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTMOBDISCEJA) = '2018'/*v_ANO_S*/ ) )
  );
  
  
-- validacao na ODS

SELECT *
FROM (
    SELECT
    uf,
    substr(codCurso,1,30) codCurso,
    codServico,
    codTipoPortfolio,
    codPortfolio,
    nomCurso,
    desCurso,
    numCargaHorariaHora,
    numCargaHorariaMinuto,
    desCentroResp,
    indAtivo,
    substr(codUnidade,1,10)  codUnidade,
    substr(codTurma,1,30) codTurma,
    codModalidade,
    substr(nomTurma,1,60) nomTurma,
    datInicio,
    datTermino,
    numvagas,
    numCnpjInstituicaoParceira,
    substr(codMatricula,1,30) codMatricula,
    indEbep,
    indTempoIntegral,
    indViraVida,
    codFinanciamento,
    codEscolaridade,
    codSituacao,
    codVinculo,
    datEfetivacaoMatricula,
    datEfetivacaoReconhecimento,
    NVL(
    CASE WHEN codSituacao IN ('1','17','24') THEN datEfetivacaoMatricula
       WHEN codSituacao IN ('11','12','13') THEN datTermino
       ELSE COALESCE(CMOBEST,DTALTMOB)
    END,'') datMovimentacao,
    indExclusao,
    substr(numCnpjVinculo,1,14) numCnpjVinculo,
    substr(nomRazaoSocialIndustria,1,100) nomRazaoSocialIndustria,
    codEstudante,
    substr(nomEstudante,1,60) nomEstudante,
    datNascimento,
    sexo,
    desEmail,
    numRegistroGeral,
    substr(sigOrgaoExpedidor,1,10) sigOrgaoExpedidor,
    substr(nomMae,1,60) nomMae,
    substr(nomPaiResp,1,60) nomPaiResp,
    numTelefone,
    numCelular,
    codMunicipio,
    numCep,
    substr(endLogradouro,1,100) endLogradouro,
    endComplemento,
    endNumero,
    substr(nomBairro,1,72) nomBairro,
    codEstadoCivil,
    numCpf,
    substr(numNit,1,11) numNit,
    indBrasileiro ,
    substr(nomeResponsavelLegal,1,100) nomeResponsavelLegal,
    IDHABILITACAOFILIAL,
    IDPERLET,
    RA,
    DTALTMOB,
    DTTURMAMODIF,
    DTMATRICPLMODIF,
    DTMOBDISCEJA
    FROM
        (
        /*SELECT
          GCOLIGADA.ESTADO uf,
          NVL(SHABILITACAOCOMPL.CODCURSOSCAE, SCURSO.CODCURSO || SHABILITACAO.CODHABILITACAO || SGRADE.CODGRADE) codCurso,
          NVL(SHABILITACAOCOMPL.CODSERVICOSCAE,'') codServico,
          NVL(SHABILITACAOCOMPL.CODTIPOPORTFOLIO,'') codTipoPortfolio,
          NVL((CASE SHABILITACAOCOMPL.TIPORTFOLIO
                WHEN 'N' THEN SHABILITACAOCOMPL.CODPORTFOLION
                WHEN 'R' THEN SHABILITACAOCOMPL.CODPORTFOLIOR
              END),'') codPortfolio,
          SCURSO.NOME nomCurso,
          SCURSO.NOME desCurso,
          NVL(SGRADE.CARGAHORARIA,0) numCargaHorariaHora,
          SUBSTR(NVL(TO_CHAR(SGRADE.CARGAHORARIA,'99999999999999D99'),'0'),-2) numCargaHorariaMinuto,
          'CR' desCentroResp,
          CASE WHEN SGRADE.STATUS IN (0,2) THEN '1' ELSE '0' END indAtivo,
          NVL(GFILIAL.IDINTEGRACAO,GFILIAL.CODFILIAL) codUnidade,
          NVL(TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  codTurma,
          NVL(CASE STURMA.TIPOMEDIACAO WHEN 1 THEN '1' WHEN 2 THEN '2' WHEN 3 THEN '3' END,'') codModalidade,
          COALESCE(STURMA.NOME, TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  nomTurma,
          TO_CHAR(STURMA.DTINICIAL,'YYYY-MM-DD') datInicio,
          TO_CHAR(STURMA.DTFINAL,'YYYY-MM-DD') datTermino,
          STURMA.MAXALUNOS numvagas,
          CASE
            WHEN INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'.',5) = 0  AND INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'/',5) = 0
              THEN (CASE WHEN TRIM(TRANSLATE(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'0123456789', ' ')) IS NULL THEN  (SUBSTR(EMPRESATURMA.DESCRICAO,1,14)) ELSE '' END)
              ELSE (CASE WHEN TRIM(TRANSLATE(SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14),'0123456789', ' ')) IS NULL THEN  SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14) ELSE '' END)
          END  numCnpjInstituicaoParceira,
          NVL(SMATRICPLCOMPL.CODMATRICULASCAE,TO_CHAR(STURMACOMPL.IDFT) || SALUNO.RA) codMatricula,
          NVL(SMATRICPLCOMPL.EBEP,'') indEbep,
          NVL(SMATRICPLCOMPL.TEMPOINTEGRAL,'') indTempoIntegral,
          NVL(SMATRICPLCOMPL.VIRAVIDA,'') indViraVida,
          NVL(SMATRICPLCOMPL.CODFINANC,'') codFinanciamento,
          NVL(  CASE PPESSOA.GRAUINSTRUCAO WHEN 'A' THEN '10'
                             WHEN 'B' THEN '10'
                             WHEN 'C' THEN '11'
                             WHEN 'D' THEN '11'
                             WHEN 'E' THEN '12'
                             WHEN 'F' THEN '12'
                             WHEN 'G' THEN '12'
                             WHEN 'H' THEN '12'
              ELSE PPESSOA.GRAUINSTRUCAO END,'0') codEscolaridade,
           COALESCE(
           CASE WHEN (SELECT ESTADO FROM GCOLIGADA WHERE CODCOLIGADA = 2) = 'PR' THEN
                                      CASE NVL(MOBILIDADE.CODSTATUSRES, MOBILIDADE.CODSTATUS)   WHEN 30 THEN '22'
                                                                    WHEN 32 THEN '19'
                                      END
           END,
           CASE NVL(MOBILIDADE.CODSTATUSRES, MOBILIDADE.CODSTATUS)
                              WHEN 2  THEN '1'
                            WHEN 17 THEN '1'
                            WHEN 39 THEN '1'
                            WHEN 5  THEN '5'
                            WHEN 19 THEN '5'
                            WHEN 7  THEN '9'
                            WHEN 21 THEN '9'
                            WHEN 67 THEN '9'
                            WHEN 9  THEN '11'
                            WHEN 23 THEN '11'
                            WHEN 75 THEN '11'
                            WHEN 10 THEN '13'
                            WHEN 11 THEN '13'
                            WHEN 24 THEN '13'
                            WHEN 25 THEN '13'
                            WHEN 43 THEN '13'
                            WHEN 3  THEN '18'
                            WHEN 33 THEN '18'
                            WHEN 68 THEN '18'
                            WHEN 30 THEN '19'
                            WHEN 69 THEN '19'
                            WHEN 31 THEN '20'
                            WHEN 46 THEN '20'
                            WHEN 6  THEN '21'
                            WHEN 20 THEN '21'
                            WHEN 41 THEN '21'
                            WHEN 45 THEN '22'
                            WHEN 73 THEN '22'
                            WHEN 32 THEN '23'
                            WHEN 70 THEN '24'
                            WHEN 42 THEN '12'
                            WHEN 66 THEN '17'
                            WHEN 4 THEN  '1'
                            WHEN 18 THEN '1'
                            WHEN 40 THEN '1'
                            WHEN 63 THEN '12'
              END,'')  codSituacao,
          NVL(SMATRICPLCOMPL.CATEGORIA,'') codVinculo,
          NVL(TO_CHAR((CASE WHEN SMATRICPL.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICPL.DTMATRICULA END),'YYYY-MM-DD'),'') datEfetivacaoMatricula,
          NVL(TO_CHAR(MOBILIDADE_RECSABERES.DTALTERACAO,'YYYY-MM-DD'),'') datEfetivacaoReconhecimento,
          TO_CHAR(SMATRICPLCOMPL.CMOBEST,'YYYY-MM-DD') CMOBEST,
            CASE WHEN MOBILIDADE.CODSTATUS IN ( 4, 18, 40 ) THEN 1 ELSE 0 END indExclusao,
          NVL(  CASE WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CEI'  THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CEIEMPRESA,'.',''),'-',''),'/','')
                 WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CNPJ' THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CNPJEMPRESA,'.',''),'-',''),'/','')
              END , '' ) AS numCnpjVinculo,
          NVL(SMATRICPLCOMPL.NOMEEMPRESA,'') nomRazaoSocialIndustria,
          NVL(SALUNOCOMPL.CODALUNOSCAE,SALUNO.RA) codEstudante,
          PPESSOA.NOME nomEstudante,
          NVL(TO_CHAR(PPESSOA.DTNASCIMENTO,'YYYY-MM-DD'),'') datNascimento,
          NVL(PPESSOA.SEXO,'') sexo,
          NVL(PPESSOA.EMAIL,'') desEmail,
          NVL(PPESSOA.CARTIDENTIDADE,'') numRegistroGeral,
          NVL(PPESSOA.ORGEMISSORIDENT,'') sigOrgaoExpedidor,
          NVL(MAE.NOME,'') nomMae,
          NVL(PAI.NOME,'') nomPaiResp,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE1,' ', ''),'(',''),')',''),'-',''),'.',''),'') numTelefone,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,' ', ''),'(',''),')',''),'-',''),'.',''),'') numCelular,
          NVL(PPESSOA.CEP,'') numCep,
          NVL(PPESSOA.RUA,'') endLogradouro,
          NVL(PPESSOA.COMPLEMENTO,'') endComplemento,
          NVL(PPESSOA.NUMERO,'') endNumero,
          NVL(PPESSOA.BAIRRO,'') nomBairro,
          NVL (CASE PPESSOA.ESTADOCIVIL WHEN 'C' THEN '2'
                           WHEN 'S' THEN '1'
                           WHEN 'I' THEN '5'
                           WHEN 'D' THEN '3'
                           WHEN 'V' THEN '4'
              END,'0') codEstadoCivil,
          NVL(TO_CHAR(ZSCAEMUNICIPIO.CODIGO),'') codMunicipio,
          NVL(PPESSOA.CPF,'') numCpf,
          NVL(SALUNOCOMPL.NIT,'') numNit,
          SHABILITACAOFILIAL.IDHABILITACAOFILIAL,
          SPLETIVO.IDPERLET,
          SMATRICPL.RA,
          CASE WHEN PPESSOA.NACIONALIDADE = 10 THEN 'B' ELSE 'E' END indBrasileiro,
          NVL(COALESCE( MAE.NOME, PAI.NOME, RESPLEGAL.NOMEFANTASIA ),'') nomeResponsavelLegal,
          MOBILIDADE.CODSTATUS,
          TO_CHAR(CASE
                WHEN MOBILIDADE.CODSTATUS IN ( 2, 17, 39, 66 )
                THEN (CASE WHEN SMATRICPL.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICPL.DTMATRICULA END)
                ELSE MOBILIDADE.DTALTERACAO
              END,'YYYY-MM-DD') DTALTMOB,
          STURMA.RECMODIFIEDON DTTURMAMODIF,
          CASE WHEN SMATRICPLCOMPL.RECMODIFIEDON > SMATRICPL.RECMODIFIEDON THEN SMATRICPLCOMPL.RECMODIFIEDON
             ELSE  SMATRICPL.RECMODIFIEDON END DTMATRICPLMODIF,
          MOBILIDADEDISCEJA.DTALTERACAO AS DTMOBDISCEJA
        FROM SMATRICPL
          INNER JOIN GCOLIGADA
              ON GCOLIGADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
          INNER JOIN SHABILITACAOFILIAL
              ON SHABILITACAOFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
          INNER JOIN SHABILITACAO
              ON SHABILITACAO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SHABILITACAO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SHABILITACAO.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
          LEFT JOIN SHABILITACAOCOMPL
              ON SHABILITACAOCOMPL.CODCOLIGADA = SHABILITACAO.CODCOLIGADA
              AND SHABILITACAOCOMPL.CODCURSO = SHABILITACAO.CODCURSO
              AND SHABILITACAOCOMPL.CODHABILITACAO = SHABILITACAO.CODHABILITACAO
          INNER JOIN GFILIAL
              ON GFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND GFILIAL.CODFILIAL = SMATRICPL.CODFILIAL
          INNER JOIN SCURSO
              ON SCURSO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SCURSO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
          INNER JOIN SCURSOCOMPL
            ON SCURSO.CODCOLIGADA = SCURSOCOMPL.CODCOLIGADA
            AND SCURSO.CODCURSO = SCURSOCOMPL.CODCURSO
          INNER JOIN STURMA
              ON STURMA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND STURMA.CODFILIAL = SMATRICPL.CODFILIAL
              AND STURMA.CODTURMA = SMATRICPL.CODTURMA
              AND STURMA.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN STURMACOMPL
              ON STURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
              AND STURMA.CODFILIAL = STURMACOMPL.CODFILIAL
              AND STURMA.CODTURMA = STURMACOMPL.CODTURMA
              AND STURMA.IDPERLET = STURMACOMPL.IDPERLET
          INNER JOIN SPLETIVO
              ON SPLETIVO.CODCOLIGADA = STURMA.CODCOLIGADA
              AND SPLETIVO.IDPERLET = STURMA.IDPERLET
          LEFT JOIN GCCUSTO
              ON GCCUSTO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND GCCUSTO.CODCCUSTO = SHABILITACAOFILIAL.CODCCUSTO
          INNER JOIN SGRADE
              ON SGRADE.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SGRADE.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SGRADE.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              AND SGRADE.CODGRADE = SHABILITACAOFILIAL.CODGRADE
          INNER JOIN SMATRICPLCOMPL
              ON SMATRICPL.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND SMATRICPL.IDPERLET = SMATRICPLCOMPL.IDPERLET
              AND SMATRICPL.RA = SMATRICPLCOMPL.RA
              AND SMATRICPL.IDHABILITACAOFILIAL = SMATRICPLCOMPL.IDHABILITACAOFILIAL
          LEFT JOIN GCONSIST EMPRESA
              ON EMPRESA.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND EMPRESA.CODTABELA = 'SEMPRESA'
              AND EMPRESA.CODCLIENTE = SMATRICPLCOMPL.EMPRESA
          INNER JOIN SALUNO
              ON SALUNO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SALUNO.RA = SMATRICPL.RA
          INNER JOIN SALUNOCOMPL
              ON SALUNO.CODCOLIGADA = SALUNOCOMPL.CODCOLIGADA
              AND SALUNO.RA = SALUNOCOMPL.RA
          INNER JOIN SPESSOA
              ON SPESSOA.CODIGO = SALUNO.CODPESSOA
          INNER JOIN PPESSOA
              ON PPESSOA.CODIGO = SALUNO.CODPESSOA
          LEFT JOIN PPESSOA MAE
              ON MAE.CODIGO = SPESSOA.CODPESSOAMAE
          LEFT JOIN PPESSOA PAI
              ON PAI.CODIGO = SPESSOA.CODPESSOAPAI
          LEFT JOIN ZSCAEMUNICIPIO
              ON UPPER(ZSCAEMUNICIPIO.MUNICIPIO) = UPPER(PPESSOA.CIDADE)
              AND ZSCAEMUNICIPIO.UF = PPESSOA.ESTADO
          LEFT JOIN FCFO RESPLEGAL
              ON RESPLEGAL.CODCOLIGADA = SALUNO.CODCOLCFO
              AND RESPLEGAL.CODCFO = SALUNO.CODCFO
          LEFT JOIN GCONSIST EMPRESATURMA
            ON  EMPRESATURMA.CODCOLIGADA  = STURMACOMPL.CODCOLIGADA
            AND EMPRESATURMA.CODTABELA    = 'SEMPRESA'
            AND EMPRESATURMA.CODCLIENTE   = STURMACOMPL.EMPRESAP
          INNER JOIN ZSCAEMOBILIDADE MOBILIDADE
              ON  MOBILIDADE.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE.RA = SMATRICPL.RA
              AND MOBILIDADE.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN ZSCAEMOBILIDADE_RECSABERES MOBILIDADE_RECSABERES
              ON  MOBILIDADE_RECSABERES.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_RECSABERES.RA = SMATRICPL.RA
              AND MOBILIDADE_RECSABERES.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_RECSABERES.IDPERLET = SMATRICPL.IDPERLET
          INNER JOIN ZSCAEMOBILIDADE_MATRICULADO MOBILIDADE_MATRICULADO
              ON  MOBILIDADE_MATRICULADO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_MATRICULADO.RA = SMATRICPL.RA
              AND MOBILIDADE_MATRICULADO.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_MATRICULADO.IDPERLET = SMATRICPL.IDPERLET
          LEFT JOIN (
                SELECT
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET,
                MAX(ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO) AS DTALTERACAO

                FROM ZSCAEMOBILIDADE_DISCIPLINA

                WHERE ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO BETWEEN vDATA1 AND vDATA2

                GROUP BY
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET

                ) MOBILIDADEDISCEJA
              ON  MOBILIDADEDISCEJA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADEDISCEJA.RA = SMATRICPL.RA
              AND MOBILIDADEDISCEJA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADEDISCEJA.IDPERLET = SMATRICPL.IDPERLET

        WHERE  GCOLIGADA.CODCOLIGADA = vCODCOLIGADA
        AND    NVL(MOBILIDADE.CODSTATUSRES, MOBILIDADE.CODSTATUS) NOT IN ( 1, 16, 37, 38, 65, 13, 74 )
        AND   (MOBILIDADE.CODSTATUS NOT IN ( 4, 18, 40 ) OR (MOBILIDADE.DTALTERACAO > vDATA1 AND MOBILIDADE.DTALTERACAO >= ADD_MONTHS(TO_DATE('01-'||TO_CHAR(STURMA.DTINICIAL,'MM')||'-'||(TO_CHAR(STURMA.DTINICIAL,'YYYY')),'DD-MM-YYYY'),1) ))

        UNION ALL*/

        /***********MATRICULA ISOLADA***********/

                SELECT
          GCOLIGADA.ESTADO uf,
          NVL(SHABILITACAOCOMPL.CODCURSOSCAE, SCURSO.CODCURSO || SHABILITACAO.CODHABILITACAO || SGRADE.CODGRADE) codCurso,
          NVL(SHABILITACAOCOMPL.CODSERVICOSCAE,'') codServico,
          NVL(SHABILITACAOCOMPL.CODTIPOPORTFOLIO,'') codTipoPortfolio,
          NVL((CASE SHABILITACAOCOMPL.TIPORTFOLIO
                WHEN 'N' THEN SHABILITACAOCOMPL.CODPORTFOLION
                WHEN 'R' THEN SHABILITACAOCOMPL.CODPORTFOLIOR
              END),'') codPortfolio,
          SCURSO.NOME nomCurso,
          SCURSO.NOME desCurso,
          NVL(SGRADE.CARGAHORARIA,0) numCargaHorariaHora,
          SUBSTR(NVL(TO_CHAR(SGRADE.CARGAHORARIA,'99999999999999D99'),'0'),-2) numCargaHorariaMinuto,
          'CR' desCentroResp,
          CASE WHEN SGRADE.STATUS IN (0,2) THEN '1' ELSE '0' END indAtivo,
          NVL(GFILIAL.IDINTEGRACAO,GFILIAL.CODFILIAL) codUnidade,
          NVL(TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  codTurma,
          NVL(CASE STURMA.TIPOMEDIACAO WHEN 1 THEN '1' WHEN 2 THEN '2' WHEN 3 THEN '3' END,'') codModalidade,
          COALESCE(STURMA.NOME, TO_CHAR(STURMACOMPL.CODTURMASCAE),LPAD(TO_CHAR(STURMA.CODFILIAL),5,'0') || '-' || TO_CHAR(STURMA.CODTURMA) || '-' || TO_CHAR(SPLETIVO.CODPERLET) )  nomTurma,
          TO_CHAR(STURMA.DTINICIAL,'YYYY-MM-DD') datInicio,
          TO_CHAR(STURMA.DTFINAL,'YYYY-MM-DD') datTermino,
          STURMA.MAXALUNOS numvagas,
          CASE
            WHEN INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'.',5) = 0  AND INSTR(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'/',5) = 0
              THEN (CASE WHEN TRIM(TRANSLATE(SUBSTR(EMPRESATURMA.DESCRICAO,1,14),'0123456789', ' ')) IS NULL THEN  (SUBSTR(EMPRESATURMA.DESCRICAO,1,14)) ELSE '' END)
              ELSE (CASE WHEN TRIM(TRANSLATE(SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14),'0123456789', ' ')) IS NULL THEN  SUBSTR(REPLACE(REPLACE(REPLACE(SUBSTR(EMPRESATURMA.DESCRICAO,1,18),'-',''),'.',''),'/',''),1,14) ELSE '' END)
          END  numCnpjInstituicaoParceira,
          NVL(SMATRICPLCOMPL.CODMATRICULASCAE,TO_CHAR(STURMACOMPL.IDFT) || SALUNO.RA) codMatricula,
          NVL(SMATRICPLCOMPL.EBEP,'') indEbep,
          NVL(SMATRICPLCOMPL.TEMPOINTEGRAL,'') indTempoIntegral,
          NVL(SMATRICPLCOMPL.VIRAVIDA,'') indViraVida,
          NVL(SMATRICPLCOMPL.CODFINANC,'') codFinanciamento,
          NVL(  CASE PPESSOA.GRAUINSTRUCAO WHEN 'A' THEN '10'
                             WHEN 'B' THEN '10'
                             WHEN 'C' THEN '11'
                             WHEN 'D' THEN '11'
                             WHEN 'E' THEN '12'
                             WHEN 'F' THEN '12'
                             WHEN 'G' THEN '12'
                             WHEN 'H' THEN '12'
              ELSE PPESSOA.GRAUINSTRUCAO END,'0') codEscolaridade,
           COALESCE(
           CASE WHEN (SELECT ESTADO FROM ODS_GCOLIGADA WHERE CODCOLIGADA = 2) = 'PR' THEN
                                      CASE MOBILIDADE_ISOLADA.CODSTATUS   WHEN 30 THEN '22'
                                                                WHEN 32 THEN '19'
                                      END
           END,
           CASE MOBILIDADE_ISOLADA.CODSTATUS
                              WHEN 2  THEN '1'
                            WHEN 17 THEN '1'
                            WHEN 39 THEN '1'
                            WHEN 5  THEN '5'
                            WHEN 19 THEN '5'
                            WHEN 7  THEN '9'
                            WHEN 21 THEN '9'
                            WHEN 67 THEN '9'
                            WHEN 9  THEN '11'
                            WHEN 23 THEN '11'
                            WHEN 75 THEN '11'
                            WHEN 10 THEN '13'
                            WHEN 11 THEN '13'
                            WHEN 24 THEN '13'
                            WHEN 25 THEN '13'
                            WHEN 43 THEN '13'
                            WHEN 3  THEN '18'
                            WHEN 33 THEN '18'
                            WHEN 68 THEN '18'
                            WHEN 30 THEN '19'
                            WHEN 69 THEN '19'
                            WHEN 31 THEN '20'
                            WHEN 46 THEN '20'
                            WHEN 6  THEN '21'
                            WHEN 20 THEN '21'
                            WHEN 41 THEN '21'
                            WHEN 45 THEN '22'
                            WHEN 73 THEN '22'
                            WHEN 32 THEN '23'
                            WHEN 70 THEN '24'
                            WHEN 42 THEN '12'
                            WHEN 66 THEN '17'
                            WHEN 4 THEN  '1'
                            WHEN 18 THEN '1'
                            WHEN 40 THEN '1'
                            WHEN 63 THEN '12'
              END,'')  codSituacao,
          NVL(SMATRICPLCOMPL.CATEGORIA,'') codVinculo,
          NVL(TO_CHAR((CASE WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICULA.DTMATRICULA END),'YYYY-MM-DD'),'') datEfetivacaoMatricula,
          NVL(TO_CHAR(MOBILIDADE_RECSABERES.DTALTERACAO,'YYYY-MM-DD'),'') datEfetivacaoReconhecimento,
          TO_CHAR(SMATRICPLCOMPL.CMOBEST,'YYYY-MM-DD') CMOBEST,
            CASE WHEN MOBILIDADE_ISOLADA.CODSTATUS IN ( 4, 18, 40 ) THEN 1 ELSE 0 END indExclusao,
          NVL(  CASE WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CEI'  THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CEIEMPRESA,'.',''),'-',''),'/','')
                 WHEN SMATRICPLCOMPL.TIPODOCUMENTO = 'CNPJ' THEN REPLACE(REPLACE(REPLACE(SMATRICPLCOMPL.CNPJEMPRESA,'.',''),'-',''),'/','')
              END , '' ) AS numCnpjVinculo,
          NVL(SMATRICPLCOMPL.NOMEEMPRESA,'') nomRazaoSocialIndustria,
          NVL(SALUNOCOMPL.CODALUNOSCAE,SALUNO.RA) codEstudante,
          PPESSOA.NOME nomEstudante,
          NVL(TO_CHAR(PPESSOA.DTNASCIMENTO,'YYYY-MM-DD'),'') datNascimento,
          NVL(PPESSOA.SEXO,'') sexo,
          NVL(PPESSOA.EMAIL,'') desEmail,
          NVL(PPESSOA.CARTIDENTIDADE,'') numRegistroGeral,
          NVL(PPESSOA.ORGEMISSORIDENT,'') sigOrgaoExpedidor,
          NVL(MAE.NOME,'') nomMae,
          NVL(PAI.NOME,'') nomPaiResp,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE1,' ', ''),'(',''),')',''),'-',''),'.',''),'') numTelefone,
          NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,' ', ''),'(',''),')',''),'-',''),'.',''),'') numCelular,
          NVL(PPESSOA.CEP,'') numCep,
          NVL(PPESSOA.RUA,'') endLogradouro,
          NVL(PPESSOA.COMPLEMENTO,'') endComplemento,
          NVL(PPESSOA.NUMERO,'') endNumero,
          NVL(PPESSOA.BAIRRO,'') nomBairro,
          NVL (CASE PPESSOA.ESTADOCIVIL WHEN 'C' THEN '2'
                           WHEN 'S' THEN '1'
                           WHEN 'I' THEN '5'
                           WHEN 'D' THEN '3'
                           WHEN 'V' THEN '4'
              END,'0') codEstadoCivil,
          NVL(TO_CHAR(ZSCAEMUNICIPIO.CODIGO),'') codMunicipio,
          NVL(PPESSOA.CPF,'') numCpf,
          NVL(SALUNOCOMPL.NIT,'') numNit,
          SHABILITACAOFILIAL.IDHABILITACAOFILIAL,
          SPLETIVO.IDPERLET,
          SMATRICPL.RA,
          CASE WHEN PPESSOA.NACIONALIDADE = 10 THEN 'B' ELSE 'E' END indBrasileiro,
          NVL(COALESCE( MAE.NOME, PAI.NOME, RESPLEGAL.NOMEFANTASIA ),'') nomeResponsavelLegal,
          MOBILIDADE_ISOLADA.CODSTATUS,
          TO_CHAR(CASE
                WHEN MOBILIDADE_ISOLADA.CODSTATUS IN ( 2, 17, 39, 66 )
                THEN (CASE WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICULA.DTMATRICULA END)
                ELSE MOBILIDADE_ISOLADA.DTALTERACAO
              END,'YYYY-MM-DD') DTALTMOB,
          STURMA.RECMODIFIEDON DTTURMAMODIF,
          CASE WHEN SMATRICPLCOMPL.RECMODIFIEDON > SMATRICPL.RECMODIFIEDON THEN SMATRICPLCOMPL.RECMODIFIEDON
             ELSE  SMATRICPL.RECMODIFIEDON END DTMATRICPLMODIF,
          MOBILIDADEDISCEJA.DTALTERACAO AS DTMOBDISCEJA
        FROM ODS_SMATRICPL SMATRICPL
          INNER JOIN ODS_SMATRICULA SMATRICULA
              ON SMATRICULA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SMATRICULA.IDPERLET = SMATRICPL.IDPERLET
              AND SMATRICULA.RA = SMATRICPL.RA
              and smatricpl.flag_atual = 1
              and smatricula.flag_atual = 1
          INNER JOIN ODS_STURMADISC STURMADISC
              ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
              AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
              and sturmadisc.flag_atual = 1
          INNER JOIN ods_GCOLIGADA GCOLIGADA
              ON GCOLIGADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              and gcoligada.flag_atual = 1
          INNER JOIN ODS_SHABILITACAOFILIAL SHABILITACAOFILIAL
              ON SHABILITACAOFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              and SHABILITACAOFILIAL.FLAG_ATUAL = 1
          INNER JOIN ODS_SHABILITACAO SHABILITACAO
              ON SHABILITACAO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SHABILITACAO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SHABILITACAO.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              and SHABILITACAO.FLAG_ATUAL = 1
          LEFT JOIN ODS_SHABILITACAOCOMPL SHABILITACAOCOMPL
              ON SHABILITACAOCOMPL.CODCOLIGADA = SHABILITACAO.CODCOLIGADA
              AND SHABILITACAOCOMPL.CODCURSO = SHABILITACAO.CODCURSO
              AND SHABILITACAOCOMPL.CODHABILITACAO = SHABILITACAO.CODHABILITACAO
              and SHABILITACAOCOMPL.FLAG_ATUAL = 1
          INNER JOIN ODS_GFILIAL GFILIAL
              ON GFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND GFILIAL.CODFILIAL = SMATRICPL.CODFILIAL
              and GFILIAL.Flag_Atual = 1
          INNER JOIN ODS_SCURSO SCURSO
              ON SCURSO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SCURSO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              and SCURSO.Flag_Atual = 1
          INNER JOIN ODS_SCURSOCOMPL SCURSOCOMPL
            ON SCURSO.CODCOLIGADA = SCURSOCOMPL.CODCOLIGADA
            AND SCURSO.CODCURSO = SCURSOCOMPL.CODCURSO
            and SCURSOCOMPL.Flag_Atual = 1
          INNER JOIN ODS_STURMA STURMA
              ON STURMA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND STURMA.CODFILIAL = SMATRICPL.CODFILIAL
              AND STURMA.CODTURMA = STURMADISC.CODTURMA
              AND STURMA.IDPERLET = SMATRICPL.IDPERLET
              and STURMA.Flag_Atual = 1
          LEFT JOIN ODS_STURMACOMPL STURMACOMPL
              ON STURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
              AND STURMA.CODFILIAL = STURMACOMPL.CODFILIAL
              AND STURMA.CODTURMA = STURMACOMPL.CODTURMA
              AND STURMA.IDPERLET = STURMACOMPL.IDPERLET
              and STURMACOMPL.Flag_Atual = 1
          INNER JOIN ODS_SPLETIVO SPLETIVO
              ON SPLETIVO.CODCOLIGADA = STURMA.CODCOLIGADA
              AND SPLETIVO.IDPERLET = STURMA.IDPERLET
              and SPLETIVO.Flag_Atual = 1
          LEFT JOIN ODS_GCCUSTO GCCUSTO
              ON GCCUSTO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND GCCUSTO.CODCCUSTO = SHABILITACAOFILIAL.CODCCUSTO
              and GCCUSTO.Flag_Atual = 1
          INNER JOIN ODS_SGRADE SGRADE
              ON SGRADE.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SGRADE.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SGRADE.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              AND SGRADE.CODGRADE = SHABILITACAOFILIAL.CODGRADE
              and SGRADE.Flag_Atual = 1
          INNER JOIN ODS_SMATRICPLCOMPL SMATRICPLCOMPL
              ON SMATRICPL.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND SMATRICPL.IDPERLET = SMATRICPLCOMPL.IDPERLET
              AND SMATRICPL.RA = SMATRICPLCOMPL.RA
              AND SMATRICPL.IDHABILITACAOFILIAL = SMATRICPLCOMPL.IDHABILITACAOFILIAL
              and SMATRICPLCOMPL.Flag_Atual = 1
          LEFT JOIN ODS_GCONSIST EMPRESA
              ON EMPRESA.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND EMPRESA.CODTABELA = 'SEMPRESA'
              AND EMPRESA.CODCLIENTE = SMATRICPLCOMPL.EMPRESA
              and EMPRESA.FLAG_ATUAL = 1
          INNER JOIN ODS_SALUNO SALUNO
              ON SALUNO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              and saluno.flag_atual = 1
              AND SALUNO.RA = SMATRICPL.RA
          INNER JOIN ODS_SALUNOCOMPL SALUNOCOMPL
              ON SALUNO.CODCOLIGADA = SALUNOCOMPL.CODCOLIGADA
              AND SALUNO.RA = SALUNOCOMPL.RA
              and SALUNOCOMPL.Flag_Atual = 1
          INNER JOIN ODS_SPESSOA SPESSOA
              ON SPESSOA.CODIGO = SALUNO.CODPESSOA
              and SPESSOA.Flag_Atual = 1
          INNER JOIN ODS_PPESSOA PPESSOA
              ON PPESSOA.CODIGO = SALUNO.CODPESSOA
              and PPESSOA.Flag_Atual =1
          LEFT JOIN ODS_PPESSOA MAE
              ON MAE.CODIGO = SPESSOA.CODPESSOAMAE
              and MAE.Flag_Atual = 1
          LEFT JOIN ODS_PPESSOA PAI
              ON PAI.CODIGO = SPESSOA.CODPESSOAPAI
              and PAi.Flag_Atual = 1
          LEFT JOIN ODS_ZSCAEMUNICIPIO ZSCAEMUNICIPIO
              ON UPPER(ZSCAEMUNICIPIO.MUNICIPIO) = UPPER(PPESSOA.CIDADE)
              AND ZSCAEMUNICIPIO.UF = PPESSOA.ESTADO
              and ZSCAEMUNICIPIO.Flag_Atual = 1
          LEFT JOIN ODS_FCFO RESPLEGAL
              ON RESPLEGAL.CODCOLIGADA = SALUNO.CODCOLCFO
              AND RESPLEGAL.CODCFO = SALUNO.CODCFO
              and RESPLEGAL.Flag_Atual = 1
          LEFT JOIN ODS_GCONSIST EMPRESATURMA
            ON  EMPRESATURMA.CODCOLIGADA  = STURMACOMPL.CODCOLIGADA
            AND EMPRESATURMA.CODTABELA    = 'SEMPRESA'
            AND EMPRESATURMA.CODCLIENTE   = STURMACOMPL.EMPRESAP
            and EMPRESATURMA.Flag_Atual = 1
          INNER JOIN (SELECT  SLOGMATRICULA.CODCOLIGADA,
    SLOGMATRICULA.RA,
    SLOGMATRICULA.CODSTATUS,
    STURMADISC.IDHABILITACAOFILIAL,
    SMATRICULA.IDPERLET,
    SLOGMATRICULA.DTALTERACAO
FROM ODS_SLOGMATRICULA SLOGMATRICULA
INNER JOIN ODS_SMATRICULA SMATRICULA
 ON SMATRICULA.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
AND SMATRICULA.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
AND SMATRICULA.RA = SLOGMATRICULA.RA
and SMATRICULA.FLAG_ATUAL = 1
and SLOGMATRICULA.FLAG_ATUAL = 1
INNER JOIN ODS_STURMADISC STURMADISC
 ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
and STURMADISC.FLAG_ATUAL = 1
WHERE SLOGMATRICULA.CODCOLIGADA = 2
AND SMATRICULA.TIPODISCIPLINA = 'E'
AND  SLOGMATRICULA.CODSTATUS NOT IN ( 1,16,37,38,65,13,74 )
AND IDLOGMATRICULA = (  SELECT MAX(IDLOGMATRICULA) FROM ODS_SLOGMATRICULA SLOGMATRICULA_A
            WHERE SLOGMATRICULA_A.CODCOLIGADA       = SLOGMATRICULA.CODCOLIGADA
            AND   SLOGMATRICULA_A.IDTURMADISC   = SLOGMATRICULA.IDTURMADISC
            AND   SLOGMATRICULA_A.RA                = SLOGMATRICULA.RA
            AND   SLOGMATRICULA_A.DTALTERACAO       <= '31/05/2018'
            AND   SLOGMATRICULA_A.CODSTATUS NOT IN ( 1,16,37,38,65,13,74 )
            AND   SLOGMATRICULA_A.CODSTATUS IN (2,17,39,5,19,7,21,67,9,23,10,11,24,25,3,33,68,30,69,31,46,6,20,41,45,73,32,70,42,66,4,18,40,63)
            AND SLOGMATRICULA_A.Flag_Atual = 1
          ))/*ODS_ZSCAEMOBILIDADE_ISOLADA*/ MOBILIDADE_ISOLADA
            ON  MOBILIDADE_ISOLADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
            AND MOBILIDADE_ISOLADA.RA = SMATRICPL.RA
            AND MOBILIDADE_ISOLADA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
            AND MOBILIDADE_ISOLADA.IDPERLET = SMATRICPL.IDPERLET
         --   and MOBILIDADE_ISOLADA.Flag_Atual = 1
          LEFT JOIN ODS_ZSCAEMOBILIDADE_RECSABERES MOBILIDADE_RECSABERES
              ON  MOBILIDADE_RECSABERES.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_RECSABERES.RA = SMATRICPL.RA
              AND MOBILIDADE_RECSABERES.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_RECSABERES.IDPERLET = SMATRICPL.IDPERLET
              and MOBILIDADE_RECSABERES.Flag_Atual = 1
          LEFT JOIN (
                SELECT
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET,
                MAX(ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO) AS DTALTERACAO

                FROM ODS_ZSCAEMOB_DISCIPLINA ZSCAEMOBILIDADE_DISCIPLINA

                WHERE ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO BETWEEN '01/05/2018'/*vDATA1*/ AND '31/05/2018'/*vDATA2*/
                and ZSCAEMOBILIDADE_DISCIPLINA.Flag_Atual = 1
                
                GROUP BY
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET

                ) MOBILIDADEDISCEJA
              ON  MOBILIDADEDISCEJA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADEDISCEJA.RA = SMATRICPL.RA
              AND MOBILIDADEDISCEJA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADEDISCEJA.IDPERLET = SMATRICPL.IDPERLET

        WHERE GCOLIGADA.CODCOLIGADA = 2/*vCODCOLIGADA*/
        AND   SMATRICULA.TIPODISCIPLINA = 'E'
        AND   MOBILIDADE_ISOLADA.CODSTATUS NOT IN ( 1, 16, 37, 38, 65, 13, 74 )
        AND   (MOBILIDADE_ISOLADA.CODSTATUS NOT IN ( 4, 18, 40 ) OR (MOBILIDADE_ISOLADA.DTALTERACAO > '01/05/2018'/*vDATA1*/ AND MOBILIDADE_ISOLADA.DTALTERACAO >= ADD_MONTHS(TO_DATE('01-'||TO_CHAR(STURMA.DTINICIAL,'MM')||'-'||(TO_CHAR(STURMA.DTINICIAL,'YYYY')),'DD-MM-YYYY'),1) ))


  ) TAB1

        GROUP BY  uf,
              codCurso,
              codServico,
              codTipoPortfolio,
              codPortfolio,
              nomCurso,
              desCurso   ,
              numCargaHorariaHora,
              numCargaHorariaMinuto,
              desCentroResp,
              indAtivo,
              codUnidade,
              codTurma,
              codModalidade,
              nomTurma,
              datInicio,
              datTermino,
              numvagas,
              numCnpjInstituicaoParceira,
              codMatricula,
              indEbep,
              indTempoIntegral,
              indViraVida,
              codFinanciamento,
              codEscolaridade,
              codSituacao,
              codVinculo,
              datEfetivacaoMatricula,
              datEfetivacaoReconhecimento,
              NVL(
              CASE WHEN codSituacao IN ('1','17','24') THEN datEfetivacaoMatricula
                 WHEN codSituacao IN ('11','12','13') THEN datTermino
                 ELSE COALESCE(CMOBEST,DTALTMOB)
              END,''),
              CMOBEST,
              indExclusao,
              numCnpjVinculo,
              nomRazaoSocialIndustria ,
              codEstudante,
              nomEstudante,
              datNascimento,
              sexo ,
              desEmail ,
              numRegistroGeral,
              sigOrgaoExpedidor,
              nomMae,
              nomPaiResp,
              numTelefone,
              numCelular ,
              codMunicipio,
              numCep,
              endLogradouro,
              endComplemento,
              endNumero,
              nomBairro,
              codEstadoCivil,
              numCpf,
              numNit,
              IDHABILITACAOFILIAL,
              IDPERLET,
              RA  ,
              indBrasileiro ,
              nomeResponsavelLegal,
              DTALTMOB,
              DTTURMAMODIF,
              DTMATRICPLMODIF,
              DTMOBDISCEJA
    )FN_SCAE
WHERE ( ( ( EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DTALTMOB,'YYYY-MM-DD')) = '05'/*v_MES_S*/ AND EXTRACT(YEAR FROM  TO_DATE(FN_SCAE.DTALTMOB,'YYYY-MM-DD')) = '2018'/*v_ANO_S*/) AND TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '31/05/2018'/*vDATA2*/ )
  OR  (   ( ( EXTRACT(MONTH FROM FN_SCAE.DTTURMAMODIF) = '05'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTTURMAMODIF) = '2018'/*v_ANO_S*/ ) AND ( TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '31/05/2018'/*vDATA2*/ AND TO_DATE(FN_SCAE.DATTERMINO,'YYYY-MM-DD') >= '01/05/2018'/*vDATA1*/ )  )
      OR  ( ( EXTRACT(MONTH FROM FN_SCAE.DTMATRICPLMODIF) = '05'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTMATRICPLMODIF) = '2018'/*v_ANO_S*/ ) AND ( TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '31/05/2018' /*vDATA2*/ AND TO_DATE(FN_SCAE.DATTERMINO,'YYYY-MM-DD') >= '01/05/2018'/*vDATA1*/ ) )
    )
  OR  ( ( EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD')) = '05'/*v_MES_S*/ AND EXTRACT(YEAR FROM TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD')) = '2018'/*v_ANO_S*/ ) )
  OR  ( ( EXTRACT(MONTH FROM FN_SCAE.DTMOBDISCEJA) = '05'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTMOBDISCEJA) = '2018'/*v_ANO_S*/ ) )
  );
  
  
  -- polo sede ajustado
  -- criado campo sede_id no odi para carregar a uo da matriz aplicada
  -- alterado campo polo_id para trazer da turma, da turmadisc ou matriz aplic
  
select  fat.sede_id, uo.descricao, polo_id, polo.descricao, sum(realizado_matricula_senai)
from fat_educacao fat, dim_unidades_org uo, dim_unidades_org polo
where fat.sede_id = uo.id
and   fat.polo_id = polo.id
--and   fat.sede_id <> fat.polo_id
and fat.sede_id = 423030101007001 --223031401001500
and fat.demp_id = 4 --2
group by fat.sede_id, uo.descricao, polo_id, polo.descricao
  
-- producao

-- colocar filtro de sede no dash
select fat.origem, fat.sede_id, uo.descricao, fat.polo_id, polo.descricao, sum(realizado)
from fat_dre_educ fat, dim_unidades_org uo, dim_unidades_org polo, dim_contas con, dim_centros_resp cr--, fat_dre_educ dre, 
where fat.sede_id = to_char(uo.id)
and   fat.polo_id = to_char(polo.id)
and   fat.dcta_id = con.id
and   fat.dcr_id  = cr.id
--and   dre.duorg_id = uo.id
--and   dre.polo_id = to_char(polo.id)
--and   fat.sede_id <> fat.polo_id
--and uo.id = 423030101007001 --223031401001500
--and fat.demp_id = 4 --2
--and fat.origem = 'DRE'
and   cr.codigo_6 = 30202030110
and   cr.codigo_7 = 30202030110004
and   con.cod_mascara_1 = '99'
--and dre.origem = 'DRE'
and fat.dt_id between '201801' and '201807'
group by fat.origem,fat.sede_id, uo.descricao, fat.polo_id, polo.descricao


-- financeiro

select dre.duorg_id, uo.descricao, sum(dre.realizado)
from dda_bidw.fat_dre_educ dre, 
     dda_bidw.dim_unidades_org uo, 
     dda_bidw.dim_contas con, 
     dda_bidw.dim_centros_resp cr,--, dim_filiais_sge fil
--     dda_bidw.fat_educacao educ,
     dda_bidw.dim_tempo tem
where dre.duorg_id = uo.id
and   dre.dcta_id =  con.id
and   dre.dcr_id   = cr.id
and   dre.dt_id   = tem.id
/*and   educ.duorg_id = uo.id(+)
and   educ.dt_id   = tem.id(+)
and   educ.demp_id = 4
--and   educ.dcta_id =  con.id
and   educ.dcr_id   = cr.id(+)*/
--and   cr.codigo_4 = 3020203
and   cr.codigo_6 = 30202030110
and   cr.codigo_7 = 30202030110004
--and   con.cod_mascara_1 = '99'
and dre.origem = 'DRE'
and dre.dt_id between '201801' and '201807'
group by dre.duorg_id, uo.descricao


-- teste das diferencas de matriculas de polo x sede entre prod e hml (com carga feita depois das alteracoes na rotina do Luciano)

-- prod 318
-- hml 1

select sum(realizado) 
from dda_bidw.fat_dre_educ 
where dcta_id = 99999999 
and dcr_id = 430202030110004
and dt_id between '201801' and '201807'

select sum(realizado_matricula) 
from dda_bidw.fat_educacao 
where (1=1)
--and dcta_id = 99999999 
and dcr_id = 430202030110004
and dt_id between '201801' and '201807'


-- validacao codigos ODI para polo x sede antes e depois de incluir a turma disciplina

-- antes map_tabelas SGE odi_ddabi_exec@dbprod

--65972
select count(*) from (
SELECT 
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA AS CODCOLIGADA ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCCUSTO AS CODCCUSTO ,
  ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL AS DTINICIAL ,
  ODS_STURMA_MAP_TABELAS_SGE.DTFINAL AS DTFINAL ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODGRADE AS CODGRADE ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_2 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET AS IDPERLET_1 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.RA AS RA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA AS CODTURMA_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA AS DTMATRICULA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.RECMODIFIEDON AS RECMODIFIEDON_2 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA AS CODCOLIGADA_3 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.BAIXARENDA AS BAIXARENDA ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CATEGORIA AS CATEGORIA ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.EBEP AS EBEP ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.GRATUIDADE AS GRATUIDADE ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CODFINANC AS CODFINANC ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.TIPOGRAT AS TIPOGRAT ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CNPJEMPRESA AS CNPJEMPRESA ,
  ODS_SALUNO_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_4 ,
  ODS_SALUNO_MAP_TABELAS_SGE.RA AS RA_2 ,
  ODS_SALUNO_MAP_TABELAS_SGE.CODPESSOA AS CODPESSOA ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NOME AS NOME_1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.DTNASCIMENTO AS DTNASCIMENTO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NACIONALIDADE AS NACIONALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.RUA AS RUA ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NUMERO AS NUMERO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.BAIRRO AS BAIRRO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.ESTADO AS ESTADO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.CIDADE AS CIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.CEP AS CEP ,
  ODS_PPESSOA_MAP_TABELAS_SGE.PAIS AS PAIS ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE1 AS TELEFONE1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE2 AS TELEFONE2 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NATURALIDADE AS NATURALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE3 AS TELEFONE3 ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCCUSTO AS CODCCUSTO_1 ,
  ODS_SSTATUS_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_8 ,
  ODS_SSTATUS_MAP_TABELAS_SGE.CODSTATUS AS CODSTATUS_2 ,
  ODS_SCURSO_MAP_TABELAS_SGE.CODCURSO AS CODCURSO_3 ,
  ODS_STURNO_MAP_TABELAS_SGE.CODTURNO AS CODTURNO_1 ,
  ODS_STURNO_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_5 ,
  OTIVOALTMAT_MAP_TABELAS_SGE.DESCRICAO AS DESCRICAO_6 ,
  (CASE WHEN ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA <= ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL
      THEN TO_CHAR(ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL,'YYYYMM')
      ELSE TO_CHAR(ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA,'YYYYMM')
END) AS DATA_CARGA ,
  ODS_STURMACOMPL_MAP_TABELAS__1.CODCCUSTOL AS CODCCUSTOL ,
  ODS_STURMACOMPL_MAP_TABELAS__1.CODCOLIGADA AS CODCOLIGADA_STUCPL ,
  ODS_TMP_UO_CR.CR AS CR ,
  ODS_TMP_UO_CR.UO AS UO ,
  ODS_TMP_UO_CR.COLIGADA AS COLIGADA   
FROM 
  ((((((((((DDA_BI.ODS_STURMA ODS_STURMA_MAP_TABELAS_SGE  INNER JOIN  ((DDA_BI.ODS_SGRADE ODS_SGRADE_MAP_TABELAS_SGE  INNER JOIN  (((((DDA_BI.ODS_SMATRICPL ODS_SMATRICPL_MAP_TABELAS_SGE  INNER JOIN  DDA_BI.ODS_SMATRICPLCOMPL ODS_SMATRICPLCOMPL_MAP_TABELAS  
    ON  ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA                        = ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA
   AND ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET                       = ODS_SMATRICPLCOMPL_MAP_TABELAS.IDPERLET
   AND ODS_SMATRICPL_MAP_TABELAS_SGE.IDHABILITACAOFILIAL            = ODS_SMATRICPLCOMPL_MAP_TABELAS.IDHABILITACAOFILIAL
   AND TRIM(ODS_SMATRICPL_MAP_TABELAS_SGE.RA)                       = TRIM(ODS_SMATRICPLCOMPL_MAP_TABELAS.RA)
   and ODS_SMATRICPL_MAP_TABELAS_SGE.FLAG_ATUAL                     = 1
   and ODS_SMATRICPLCOMPL_MAP_TABELAS.FLAG_ATUAL                = 1
     )  INNER JOIN  DDA_BI.ODS_SALUNO ODS_SALUNO_MAP_TABELAS_SGE  
    ON  ODS_SALUNO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
   AND ODS_SALUNO_MAP_TABELAS_SGE.RA                                = ODS_SMATRICPL_MAP_TABELAS_SGE.RA
   and ODS_SALUNO_MAP_TABELAS_SGE.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_PPESSOA ODS_PPESSOA_MAP_TABELAS_SGE  
    ON  ODS_PPESSOA_MAP_TABELAS_SGE.CODIGO                          = ODS_SALUNO_MAP_TABELAS_SGE.CODPESSOA 
and ODS_PPESSOA_MAP_TABELAS_SGE.FLAG_ATUAL                       = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOALUNO ODS_SHABILITACAOALUNO_MAP_TABE  
    ON  ODS_SHABILITACAOALUNO_MAP_TABE.CODCOLIGADA            = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
AND ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL    = ODS_SMATRICPL_MAP_TABELAS_SGE.IDHABILITACAOFILIAL
AND ODS_SHABILITACAOALUNO_MAP_TABE.RA                     = ODS_SMATRICPL_MAP_TABELAS_SGE.RA
and ODS_SHABILITACAOALUNO_MAP_TABE.FLAG_ATUAL             = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOFILIAL ODS_SHABILITACAOFILIAL_MAP_TAB  
    ON  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA           = ODS_SHABILITACAOALUNO_MAP_TABE.CODCOLIGADA 
AND ODS_SHABILITACAOFILIAL_MAP_TAB.IDHABILITACAOFILIAL   = ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL 
AND ODS_SHABILITACAOFILIAL_MAP_TAB.FLAG_ATUAL = 1
     )  
    ON  ODS_SGRADE_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODCURSO                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCURSO 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODHABILITACAO                    = ODS_SHABILITACAOFILIAL_MAP_TAB.CODHABILITACAO 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODGRADE                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODGRADE 
   and ODS_SGRADE_MAP_TABELAS_SGE.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAO ODS_SHABILITACAO_MAP_TABELAS_S  
    ON  ODS_SHABILITACAO_MAP_TABELAS_S.CODCOLIGADA                = ODS_SGRADE_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SHABILITACAO_MAP_TABELAS_S.CODHABILITACAO              = ODS_SGRADE_MAP_TABELAS_SGE.CODHABILITACAO 
AND ODS_SHABILITACAO_MAP_TABELAS_S.CODCURSO                    = ODS_SGRADE_MAP_TABELAS_SGE.CODCURSO 
and ODS_SHABILITACAO_MAP_TABELAS_S.FLAG_ATUAL            = 1
     )  
    ON  ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA                    = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
   AND ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL                      = ODS_SMATRICPL_MAP_TABELAS_SGE.CODFILIAL 
   AND ODS_STURMA_MAP_TABELAS_SGE.IDPERLET                       = ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET 
   AND ODS_STURMA_MAP_TABELAS_SGE.CODTURMA                       = ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA 
   and ODS_STURMA_MAP_TABELAS_SGE.FLAG_ATUAL                     = 1
     )  INNER JOIN  DDA_BI.ODS_STURMACOMPL ODS_STURMACOMPL_MAP_TABELAS__1  
    ON  ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA = ODS_STURMACOMPL_MAP_TABELAS__1.CODCOLIGADA
and   ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL = ODS_STURMACOMPL_MAP_TABELAS__1.CODFILIAL
and   ODS_STURMA_MAP_TABELAS_SGE.IDPERLET = ODS_STURMACOMPL_MAP_TABELAS__1.IDPERLET
and   ODS_STURMA_MAP_TABELAS_SGE.CODTURMA = ODS_STURMACOMPL_MAP_TABELAS__1.CODTURMA
and   ODS_STURMACOMPL_MAP_TABELAS__1.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SSTATUS ODS_SSTATUS_MAP_TABELAS_SGE  
    ON  ODS_SSTATUS_MAP_TABELAS_SGE.CODCOLIGADA                      = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SSTATUS_MAP_TABELAS_SGE.CODSTATUS                        = ODS_SMATRICPL_MAP_TABELAS_SGE.CODSTATUS 
AND ODS_SSTATUS_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SPLETIVO ODS_SPLETIVO_MAP_TABELAS_SGE  
    ON  ODS_SPLETIVO_MAP_TABELAS_SGE.CODCOLIGADA                     = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SPLETIVO_MAP_TABELAS_SGE.IDPERLET                        = ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET 
and ODS_SPLETIVO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SFILIAL ODS_SFILIAL_MAP_TABELAS_SGE  
    ON  ODS_SFILIAL_MAP_TABELAS_SGE.CODCOLIGADA                      = ODS_SPLETIVO_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SFILIAL_MAP_TABELAS_SGE.CODFILIAL                        = ODS_SPLETIVO_MAP_TABELAS_SGE.CODFILIAL 
and ODS_SFILIAL_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SCURSO ODS_SCURSO_MAP_TABELAS_SGE  
    ON  ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAO_MAP_TABELAS_S.CODCOLIGADA 
AND ODS_SCURSO_MAP_TABELAS_SGE.CODCURSO                          = ODS_SHABILITACAO_MAP_TABELAS_S.CODCURSO 
AND ODS_SCURSO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_STIPOCURSO ODS_STIPOCURSO_MAP_TABELAS_SGE  
    ON  ODS_STIPOCURSO_MAP_TABELAS_SGE.CODCOLIGADA                   = ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_STIPOCURSO_MAP_TABELAS_SGE.CODTIPOCURSO                  = ODS_SCURSO_MAP_TABELAS_SGE.CODTIPOCURSO 
and ODS_STIPOCURSO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_GCONSIST ODS_GCONSIST_MAP_TABELAS_SGE  
    ON  ODS_GCONSIST_MAP_TABELAS_SGE.CODCOLIGADA               = ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA 
AND ODS_GCONSIST_MAP_TABELAS_SGE.CODCLIENTE                 = ODS_SMATRICPLCOMPL_MAP_TABELAS.CATEGORIA 
AND ODS_GCONSIST_MAP_TABELAS_SGE.CODTABELA                  = 'SCATEGORIA' 
and ODS_GCONSIST_MAP_TABELAS_SGE.FLAG_ATUAL                 = 1
     )  INNER JOIN  DDA_BI.ODS_STURNO ODS_STURNO_MAP_TABELAS_SGE  
    ON  ODS_STURNO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA 
AND ODS_STURNO_MAP_TABELAS_SGE.CODTURNO                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODTURNO 
AND ODS_STURNO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_SMOTIVOALTMAT OTIVOALTMAT_MAP_TABELAS_SGE  
    ON  OTIVOALTMAT_MAP_TABELAS_SGE.CODCOLIGADA         = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
   AND OTIVOALTMAT_MAP_TABELAS_SGE.CODMOTIVO            = ODS_SMATRICPL_MAP_TABELAS_SGE.CODMOTIVOTRANSFERENCIA
   and OTIVOALTMAT_MAP_TABELAS_SGE.FLAG_ATUAL            = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_TMP_UO_CR ODS_TMP_UO_CR  
    ON  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA                = ODS_TMP_UO_CR.COLIGADA 
  and ODS_STURMA_MAP_TABELAS_SGE.IDHABILITACAOFILIAL  = ODS_TMP_UO_CR.HABILITACAO              
  and ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA             = nvl(ODS_TMP_UO_CR.CODTURMA,ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA)
)where codcoligada_2 = 4


-- depois MAP_TABELAS_SGE dda_bi@dbget

--65.738
select */*count(*)*/ from (
SELECT 
  ODS_GCONSIST_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA ,
  ODS_STURMADISC_MAP_TABELAS_S_1.CODCCUSTO_1 AS CODCCUSTO ,
  ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL AS DTINICIAL ,
  ODS_STURMA_MAP_TABELAS_SGE.DTFINAL AS DTFINAL ,
  ODS_SGRADE_MAP_TABELAS_SGE.CODGRADE AS CODGRADE ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_2 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET AS IDPERLET_1 ,
  ODS_SALUNO_MAP_TABELAS_SGE.RA AS RA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA AS CODTURMA_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA AS DTMATRICULA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.RECMODIFIEDON AS RECMODIFIEDON_2 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA AS CODCOLIGADA_3 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.BAIXARENDA AS BAIXARENDA ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CATEGORIA AS CATEGORIA ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.EBEP AS EBEP ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.GRATUIDADE AS GRATUIDADE ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CODFINANC AS CODFINANC ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.TIPOGRAT AS TIPOGRAT ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CNPJEMPRESA AS CNPJEMPRESA ,
  ODS_SALUNO_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_4 ,
  ODS_SALUNO_MAP_TABELAS_SGE.RA AS RA_2 ,
  ODS_SALUNO_MAP_TABELAS_SGE.CODPESSOA AS CODPESSOA ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NOME AS NOME_1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.DTNASCIMENTO AS DTNASCIMENTO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NACIONALIDADE AS NACIONALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.RUA AS RUA ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NUMERO AS NUMERO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.BAIRRO AS BAIRRO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.ESTADO AS ESTADO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.CIDADE AS CIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.CEP AS CEP ,
  ODS_PPESSOA_MAP_TABELAS_SGE.PAIS AS PAIS ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE1 AS TELEFONE1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE2 AS TELEFONE2 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NATURALIDADE AS NATURALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE3 AS TELEFONE3 ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA AS CODCOLIGADA_6 ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCCUSTO AS CODCCUSTO_1 ,
  ODS_SSTATUS_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_8 ,
  ODS_SSTATUS_MAP_TABELAS_SGE.CODSTATUS AS CODSTATUS_2 ,
  ODS_SCURSO_MAP_TABELAS_SGE.CODCURSO AS CODCURSO_3 ,
  ODS_STURNO_MAP_TABELAS_SGE.CODTURNO AS CODTURNO_1 ,
  ODS_STURNO_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_5 ,
  OTIVOALTMAT_MAP_TABELAS_SGE.DESCRICAO AS DESCRICAO_6 ,
  (CASE WHEN ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA <= ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL
      THEN TO_CHAR(ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL,'YYYYMM')
      ELSE TO_CHAR(ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA,'YYYYMM')
END) AS DATA_CARGA ,
  ODS_STURMACOMPL_MAP_TABELAS__1.CODCCUSTOL AS CODCCUSTOL ,
  ODS_STURMACOMPL_MAP_TABELAS__1.CODCOLIGADA AS CODCOLIGADA_STUCPL ,
  ODS_STURMADISC_MAP_TABELAS_S_1.CODCCUSTO_1 AS CODCCUSTO_STDISC ,
  ODS_TMP_UO_CR.CR AS CR ,
  ODS_TMP_UO_CR.UO AS UO ,
  ODS_TMP_UO_CR.COLIGADA AS COLIGADA   
FROM 
  (((((((((((DDA_BI.ODS_STURMA ODS_STURMA_MAP_TABELAS_SGE  INNER JOIN  ((DDA_BI.ODS_SGRADE ODS_SGRADE_MAP_TABELAS_SGE  INNER JOIN  (((((DDA_BI.ODS_SMATRICPL ODS_SMATRICPL_MAP_TABELAS_SGE  INNER JOIN  DDA_BI.ODS_SMATRICPLCOMPL ODS_SMATRICPLCOMPL_MAP_TABELAS  
    ON  ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA                        = ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA
   AND ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET                       = ODS_SMATRICPLCOMPL_MAP_TABELAS.IDPERLET
   AND ODS_SMATRICPL_MAP_TABELAS_SGE.IDHABILITACAOFILIAL            = ODS_SMATRICPLCOMPL_MAP_TABELAS.IDHABILITACAOFILIAL
   AND TRIM(ODS_SMATRICPL_MAP_TABELAS_SGE.RA)                       = TRIM(ODS_SMATRICPLCOMPL_MAP_TABELAS.RA)
   and ODS_SMATRICPL_MAP_TABELAS_SGE.FLAG_ATUAL                     = 1
   and ODS_SMATRICPLCOMPL_MAP_TABELAS.FLAG_ATUAL                = 1
     )  INNER JOIN  DDA_BI.ODS_SALUNO ODS_SALUNO_MAP_TABELAS_SGE  
    ON  ODS_SALUNO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
   AND ODS_SALUNO_MAP_TABELAS_SGE.RA                                = ODS_SMATRICPL_MAP_TABELAS_SGE.RA
   and ODS_SALUNO_MAP_TABELAS_SGE.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_PPESSOA ODS_PPESSOA_MAP_TABELAS_SGE  
    ON  ODS_PPESSOA_MAP_TABELAS_SGE.CODIGO                          = ODS_SALUNO_MAP_TABELAS_SGE.CODPESSOA 
and ODS_PPESSOA_MAP_TABELAS_SGE.FLAG_ATUAL                       = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOALUNO ODS_SHABILITACAOALUNO_MAP_TABE  
    ON  ODS_SHABILITACAOALUNO_MAP_TABE.CODCOLIGADA            = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
AND ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL    = ODS_SMATRICPL_MAP_TABELAS_SGE.IDHABILITACAOFILIAL
AND ODS_SHABILITACAOALUNO_MAP_TABE.RA                     = ODS_SMATRICPL_MAP_TABELAS_SGE.RA
and ODS_SHABILITACAOALUNO_MAP_TABE.FLAG_ATUAL             = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOFILIAL ODS_SHABILITACAOFILIAL_MAP_TAB  
    ON  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA           = ODS_SHABILITACAOALUNO_MAP_TABE.CODCOLIGADA 
AND ODS_SHABILITACAOFILIAL_MAP_TAB.IDHABILITACAOFILIAL   = ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL 
AND ODS_SHABILITACAOFILIAL_MAP_TAB.FLAG_ATUAL = 1
     )  
    ON  ODS_SGRADE_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODCURSO                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCURSO 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODHABILITACAO                    = ODS_SHABILITACAOFILIAL_MAP_TAB.CODHABILITACAO 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODGRADE                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODGRADE 
   and ODS_SGRADE_MAP_TABELAS_SGE.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAO ODS_SHABILITACAO_MAP_TABELAS_S  
    ON  ODS_SHABILITACAO_MAP_TABELAS_S.CODCOLIGADA                = ODS_SGRADE_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SHABILITACAO_MAP_TABELAS_S.CODHABILITACAO              = ODS_SGRADE_MAP_TABELAS_SGE.CODHABILITACAO 
AND ODS_SHABILITACAO_MAP_TABELAS_S.CODCURSO                    = ODS_SGRADE_MAP_TABELAS_SGE.CODCURSO 
and ODS_SHABILITACAO_MAP_TABELAS_S.FLAG_ATUAL            = 1
     )  
    ON  ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA                    = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
   AND ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL                      = ODS_SMATRICPL_MAP_TABELAS_SGE.CODFILIAL 
   AND ODS_STURMA_MAP_TABELAS_SGE.IDPERLET                       = ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET 
   AND ODS_STURMA_MAP_TABELAS_SGE.CODTURMA                       = ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA 
   and ODS_STURMA_MAP_TABELAS_SGE.FLAG_ATUAL                     = 1
     )  INNER JOIN  DDA_BI.ODS_STURMACOMPL ODS_STURMACOMPL_MAP_TABELAS__1  
    ON  ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA = ODS_STURMACOMPL_MAP_TABELAS__1.CODCOLIGADA
and   ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL = ODS_STURMACOMPL_MAP_TABELAS__1.CODFILIAL
and   ODS_STURMA_MAP_TABELAS_SGE.IDPERLET = ODS_STURMACOMPL_MAP_TABELAS__1.IDPERLET
and   ODS_STURMA_MAP_TABELAS_SGE.CODTURMA = ODS_STURMACOMPL_MAP_TABELAS__1.CODTURMA
and   ODS_STURMACOMPL_MAP_TABELAS__1.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SSTATUS ODS_SSTATUS_MAP_TABELAS_SGE  
    ON  ODS_SSTATUS_MAP_TABELAS_SGE.CODCOLIGADA                      = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SSTATUS_MAP_TABELAS_SGE.CODSTATUS                        = ODS_SMATRICPL_MAP_TABELAS_SGE.CODSTATUS 
AND ODS_SSTATUS_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SPLETIVO ODS_SPLETIVO_MAP_TABELAS_SGE  
    ON  ODS_SPLETIVO_MAP_TABELAS_SGE.CODCOLIGADA                     = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SPLETIVO_MAP_TABELAS_SGE.IDPERLET                        = ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET 
and ODS_SPLETIVO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SFILIAL ODS_SFILIAL_MAP_TABELAS_SGE  
    ON  ODS_SFILIAL_MAP_TABELAS_SGE.CODCOLIGADA                      = ODS_SPLETIVO_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SFILIAL_MAP_TABELAS_SGE.CODFILIAL                        = ODS_SPLETIVO_MAP_TABELAS_SGE.CODFILIAL 
and ODS_SFILIAL_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SCURSO ODS_SCURSO_MAP_TABELAS_SGE  
    ON  ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAO_MAP_TABELAS_S.CODCOLIGADA 
AND ODS_SCURSO_MAP_TABELAS_SGE.CODCURSO                          = ODS_SHABILITACAO_MAP_TABELAS_S.CODCURSO 
AND ODS_SCURSO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_STIPOCURSO ODS_STIPOCURSO_MAP_TABELAS_SGE  
    ON  ODS_STIPOCURSO_MAP_TABELAS_SGE.CODCOLIGADA                   = ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_STIPOCURSO_MAP_TABELAS_SGE.CODTIPOCURSO                  = ODS_SCURSO_MAP_TABELAS_SGE.CODTIPOCURSO 
and ODS_STIPOCURSO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_GCONSIST ODS_GCONSIST_MAP_TABELAS_SGE  
    ON  ODS_GCONSIST_MAP_TABELAS_SGE.CODCOLIGADA               = ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA 
AND ODS_GCONSIST_MAP_TABELAS_SGE.CODCLIENTE                 = ODS_SMATRICPLCOMPL_MAP_TABELAS.CATEGORIA 
AND ODS_GCONSIST_MAP_TABELAS_SGE.CODTABELA                  = 'SCATEGORIA' 
and ODS_GCONSIST_MAP_TABELAS_SGE.FLAG_ATUAL                 = 1
     )  INNER JOIN  DDA_BI.ODS_STURNO ODS_STURNO_MAP_TABELAS_SGE  
    ON  ODS_STURNO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA 
AND ODS_STURNO_MAP_TABELAS_SGE.CODTURNO                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODTURNO 
AND ODS_STURNO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_SMOTIVOALTMAT OTIVOALTMAT_MAP_TABELAS_SGE  
    ON  OTIVOALTMAT_MAP_TABELAS_SGE.CODCOLIGADA         = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
   AND OTIVOALTMAT_MAP_TABELAS_SGE.CODMOTIVO            = ODS_SMATRICPL_MAP_TABELAS_SGE.CODMOTIVOTRANSFERENCIA
   and OTIVOALTMAT_MAP_TABELAS_SGE.FLAG_ATUAL            = 1
     )  LEFT OUTER JOIN  (
SELECT 
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA ,
  max(ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC) AS IDTURMADISC ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA AS CODTURMA ,
  ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET AS IDPERLET ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO AS CODCCUSTO ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_1 ,
  (max(ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC)) AS IDTURMADISC_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA AS CODTURMA_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET AS IDPERLET_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO AS CODCCUSTO_1   
FROM 
  DDA_BI.ODS_STURMADISC ODS_STURMADISC_MAP_TABELAS_SGE  
WHERE
  (ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO is not null
and ODS_STURMADISC_MAP_TABELAS_SGE.FLAG_ATUAL = 1
) 
GROUP BY
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA,ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL,ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA,ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET,ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO 
  ) ODS_STURMADISC_MAP_TABELAS_S_1  
    ON  ODS_STURMADISC_MAP_TABELAS_S_1.CODCOLIGADA_1 = ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA
and ODS_STURMADISC_MAP_TABELAS_S_1.CODFILIAL_1 = ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL
and ODS_STURMADISC_MAP_TABELAS_S_1.IDPERLET_1 = ODS_STURMA_MAP_TABELAS_SGE.IDPERLET
and ODS_STURMADISC_MAP_TABELAS_S_1.CODTURMA_1 = ODS_STURMA_MAP_TABELAS_SGE.CODTURMA
     )  LEFT OUTER JOIN  DDA_BI.ODS_TMP_UO_CR ODS_TMP_UO_CR  
    ON  ODS_GCONSIST_MAP_TABELAS_SGE.CODCOLIGADA                = ODS_TMP_UO_CR.COLIGADA 
  and ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL  = ODS_TMP_UO_CR.HABILITACAO              
  and ODS_STURMA_MAP_TABELAS_SGE.CODTURMA             = nvl(ODS_TMP_UO_CR.CODTURMA,ODS_STURMA_MAP_TABELAS_SGE.CODTURMA)
)where codcoligada_2 = 4 /*and codcoligada_6 is null*/


-- antes I$ odi_ddabi_exec 

select  dt_id,sum(realizado_matricula), sum(realizado_eja), sum(realizado_matricula_senai) from (
select 
DALU_ID,
  DCLI_ID,
  DCR_ID,
  DCURM_ID,
  DEMP_ID,
  DRAST_ID,
  DSIAL_ID,
  DTURM_ID,
  DT_ID,
  DUORG_ID,
  PREVISTO_AH,
  PREVISTO_MATRICULA,
  REALIZADO_AH,
  REALIZADO_MATRICULA,
  ENTR_DISC_SAIDA,
  VALOR_CURSO,
  VALOR_TOTAL,
  VALOR_DESCONTO,
  VALOR_EFETIVO,
  DATA_SISTEMA,
  DATA_INGRESSO,
  IDADE,
  DATA_INI_SIT_ALUN,
  MOTIVO_CANCELAMENTO,
  CLIENTELA_SESI,
  ISENTO,
  GRATUIDADE,
  BAIXA_RENDA,
  DECLARACAO,
  PREVISTO_AH_MES_ANT,
  REALIZADO_AH_MES_ANT,
  PREVISTO_AH_ANO_MES_ANT,
  REALIZADO_AH_ANO_MES_ANT,
  PREVISTO_MT_MES_ANT,
  REALIZADO_MT_MES_ANT,
  PREVISTO_MT_ANO_MES_ANT,
  REALIZADO_MT_ANO_MES_ANT,
  VALOR_CURSO_MES_ANT,
  VALOR_CURSO_ANO_MES_ANT,
  VALOR_TOTAL_MES_ANT,
  VALOR_TOTAL_ANO_MES_ANT,
  VALOR_DESCONTO_MES_ANT,
  VALOR_DESCONTO_ANO_MES_ANT,
  VALOR_EFETIVO_MES_ANT,
  VALOR_EFETIVO_ANO_MES_ANT,
  DTPMA_ID,
  DTPCL_ID,
  CR_LOT,
  IND_PROD,
  PREVISTO_HH,
  PREVISTO_ATENDIMENTO,
  REALIZADO_HH,
  REALIZADO_ATENDIMENTO,
  PREVISTO_HH_MES_ANT,
  REALIZADO_HH_MES_ANT,
  PREVISTO_HH_ANO_MES_ANT,
  REALIZADO_HH_ANO_MES_ANT,
  PREVISTO_AT_MES_ANT,
  REALIZADO_AT_MES_ANT,
  PREVISTO_AT_ANO_MES_ANT,
  REALIZADO_AT_ANO_MES_ANT,
  DST_ID,
  DCGS_ID,
  IND_DN,
  IND_ATEND,
  DPLA_ID,
  CHAVE,
  CHAVE_BSC,
  EM_ANDAMENTO,
  DCTA_ID,
  ENTRADA_NOVA,
  ENTRADA_RESIDUAL,
  ENTRADA_TRANSFERENCIA,
  ENTRADA_TRANCAMENTO,
  SAIDA_CONCLUIDO,
  SAIDA_EVADIDO,
  SAIDA_ELIMINADO,
  SAIDA_TRANCADO,
  SAIDA_TRANSFERIDO,
  SAIDA_RESIDUAL,
  TIPO_GRATUIDADE,
  DDISC_ID,
  DPRO_ID_INSTRUTOR,
  DCLIPF_ID,
  DCLIPJ_ID,
  DATA_BI,
  ENSAIOS,
  RELATORIOS,
  PROJETOS,
  PREVISTO_LAUDOS,
  PREVISTO_ENSAIOS,
  REALIZADO_HORAS_EFETIVAS_EST,
  REALIZADO_HORAS_PRATICA_APR,
  REALIZADO_HORAS_TOTAL,
  DCR_TURM_ID,
  PNE_ID,
  CONTA_PNE,
  FLAG_PNE,
  DTURN_ID,
  SISTEMA_ORIGEM,
  IDC_SGE_HIST,
  TIPO_FINANCIAMENTO,
  DFILSGE_ID,
  REALIZADO_FORA_PRAZO_DIA,
  REALIZADO_EJA,
  DT_CARGA,
  REALIZADO_FORA_PRAZO_MES,
  REALIZADO_MATRICULA_SENAI,
  NUM_CALC_EJA,
  POLO_SEDE,
  FLAG_MOBILIDADE,
  POLO_MOBILIDADE,
  FLAG_MATRICULA_ISOLADA,
  REALIZADO_MATRICULA_ISOLADA,
  IND_UPDATE
 from (
select   
  nvl(DIM_ALUNOS.ID,0) AS DALU_ID,
  nvl(DIM_CLIENTES.ID,0) AS DCLI_ID,
  nvl(INLINE_VIEW.COLIGADA||INLINE_VIEW.CR,0) AS DCR_ID,
  nvl(DIM_CURSOS_MODULOS.ID,0) AS DCURM_ID,
  nvl(INLINE_VIEW.CODCOLIGADA_2,0) AS DEMP_ID,
  nvl(case when  
       ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
       end) = 'RASTREAVEL'
     and 
       (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
      end) = 'DECLARACAO')
     then 1
when
        ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
         end) = 'NRASTREAVEL'
       and         
         (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
         end)= 'DECLARACAO')
      then 2
when
        ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
         end) = 'RASTREAVEL'
       and         
         (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
       end) = 'SDECLARACAO')
      then 3
when
        ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
         end) = 'NRASTREAVEL'
       and         
         (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
        end) = 'SDECLARACAO')
      then 4
 else
   5
END
,0) AS DRAST_ID,
  nvl(DIM_SITUACAO_ALUNO.ID,0) AS DSIAL_ID,
  nvl(DIM_TURMAS.ID,0) AS DTURM_ID,
  nvl(DIM_TEMPO.ID,0) AS DT_ID,
  decode(INLINE_VIEW.UO, null, 0, INLINE_VIEW.COLIGADA || substr(INLINE_VIEW.UO,7,20)) AS DUORG_ID,
  0 AS PREVISTO_AH,
  0 AS PREVISTO_MATRICULA,
  0 AS REALIZADO_AH,
  CASE WHEN (INLINE_VIEW.CONTADOR IS NOT NULL  
           AND INLINE_VIEW.CONTADOR >= 1  
           AND INLINE_VIEW.CODCOLIGADA = 2  
           )  
      THEN  0   
      WHEN  INLINE_VIEW.CODCOLIGADA = 4 
      THEN 0 
      ELSE 1 
END AS REALIZADO_MATRICULA,
  0 AS ENTR_DISC_SAIDA,
  0 AS VALOR_CURSO,
  0 AS VALOR_TOTAL,
  0 AS VALOR_DESCONTO,
  0 AS VALOR_EFETIVO,
  nvl(INLINE_VIEW.RECMODIFIEDON_2,to_date('01/01/1900','dd/mm/yyyy HH:MI:SS')) AS DATA_SISTEMA,
  nvl(INLINE_VIEW.DTMATRICULA,to_date('01/01/1900','dd/mm/yyyy')) AS DATA_INGRESSO,
  Nvl(Trunc(Months_Between(Sysdate, DIM_ALUNOS.DATA_NASCIMENTO) / 12),
                 0) AS IDADE,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_INI_SIT_ALUN,
  nvl(INLINE_VIEW.DESCRICAO_6,'-') AS MOTIVO_CANCELAMENTO,
  '-' AS CLIENTELA_SESI,
  '-' AS ISENTO,
  INLINE_VIEW.GRATUIDADE AS GRATUIDADE,
  nvl(case when INLINE_VIEW.BAIXARENDA = 1 then 'S' else 'N' END,0) AS BAIXA_RENDA,
  '-' AS DECLARACAO,
  0 AS PREVISTO_AH_MES_ANT,
  0 AS REALIZADO_AH_MES_ANT,
  0 AS PREVISTO_AH_ANO_MES_ANT,
  0 AS REALIZADO_AH_ANO_MES_ANT,
  0 AS PREVISTO_MT_MES_ANT,
  0 AS REALIZADO_MT_MES_ANT,
  0 AS PREVISTO_MT_ANO_MES_ANT,
  0 AS REALIZADO_MT_ANO_MES_ANT,
  0 AS VALOR_CURSO_MES_ANT,
  0 AS VALOR_CURSO_ANO_MES_ANT,
  0 AS VALOR_TOTAL_MES_ANT,
  0 AS VALOR_TOTAL_ANO_MES_ANT,
  0 AS VALOR_DESCONTO_MES_ANT,
  0 AS VALOR_DESCONTO_ANO_MES_ANT,
  0 AS VALOR_EFETIVO_MES_ANT,
  0 AS VALOR_EFETIVO_ANO_MES_ANT,
  case when INLINE_VIEW.EBEP = 1  then 3
     when INLINE_VIEW.CODFINANC IN (2,3) then 1  
     when INLINE_VIEW.CODFINANC IN (1) then 2
else 0
end AS DTPMA_ID,
  0 AS DTPCL_ID,
  '-' AS CR_LOT,
  nvl(MAP_BUSCA_IND_PROD_A.IND,'Não') AS IND_PROD,
  0 AS PREVISTO_HH,
  0 AS PREVISTO_ATENDIMENTO,
  0 AS REALIZADO_HH,
  0 AS REALIZADO_ATENDIMENTO,
  0 AS PREVISTO_HH_MES_ANT,
  0 AS REALIZADO_HH_MES_ANT,
  0 AS PREVISTO_HH_ANO_MES_ANT,
  0 AS REALIZADO_HH_ANO_MES_ANT,
  0 AS PREVISTO_AT_MES_ANT,
  0 AS REALIZADO_AT_MES_ANT,
  0 AS PREVISTO_AT_ANO_MES_ANT,
  0 AS REALIZADO_AT_ANO_MES_ANT,
  0 AS DST_ID,
  NVL(NVL(MAP_BUSCA_IND_ATEND_A.DGCS_ID,NVL(MAP_BUSCA_IND_DN_A.DGCS_ID,MAP_BUSCA_IND_PROD_A.DGCS_ID)),0) AS DCGS_ID,
  NVL(MAP_BUSCA_IND_DN_A.IND,'Não') AS IND_DN,
  NVL(MAP_BUSCA_IND_ATEND_A.IND,'Não') AS IND_ATEND,
  0 AS DPLA_ID,
  nvl(DIM_ALUNOS.ID||DIM_TURMAS.ID||DIM_TEMPO.ID,'-') AS CHAVE,
  '-' AS CHAVE_BSC,
  0 AS EM_ANDAMENTO,
  0 AS DCTA_ID,
  0 AS ENTRADA_NOVA,
  0 AS ENTRADA_RESIDUAL,
  0 AS ENTRADA_TRANSFERENCIA,
  0 AS ENTRADA_TRANCAMENTO,
  0 AS SAIDA_CONCLUIDO,
  0 AS SAIDA_EVADIDO,
  0 AS SAIDA_ELIMINADO,
  0 AS SAIDA_TRANCADO,
  0 AS SAIDA_TRANSFERIDO,
  0 AS SAIDA_RESIDUAL,
  nvl(DECODE(
    case when INLINE_VIEW.CODCLIENTE_1 = 0 then '9'
         when INLINE_VIEW.CODCLIENTE_1 between 423 and 452 then '4'
         else INLINE_VIEW.CODCLIENTE_1
    end, '9', 'Não Gratuita',4,'PRONATEC',INLINE_VIEW.DESCRICAO),0) AS TIPO_GRATUIDADE,
  0 AS DDISC_ID,
  0 AS DPRO_ID_INSTRUTOR,
  0 AS DCLIPF_ID,
  0 AS DCLIPJ_ID,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_BI,
  0 AS ENSAIOS,
  0 AS RELATORIOS,
  0 AS PROJETOS,
  0 AS PREVISTO_LAUDOS,
  0 AS PREVISTO_ENSAIOS,
  0 AS REALIZADO_HORAS_EFETIVAS_EST,
  0 AS REALIZADO_HORAS_PRATICA_APR,
  0 AS REALIZADO_HORAS_TOTAL,
  nvl(INLINE_VIEW.COLIGADA||INLINE_VIEW.CR,0) AS DCR_TURM_ID,
  0 AS PNE_ID,
  0 AS CONTA_PNE,
  '-' AS FLAG_PNE,
  nvl(DIM_TURNOS.ID_TURNO,0) AS DTURN_ID,
  'SGE' AS SISTEMA_ORIGEM,
  0 AS IDC_SGE_HIST,
  NVL(INLINE_VIEW.CODFINANC,'-') AS TIPO_FINANCIAMENTO,
  DIM_FILIAIS_SGE.ID_FILIAL AS DFILSGE_ID,
  (case when (case when trunc(INLINE_VIEW.DTMATRICULA) <= INLINE_VIEW.DTINICIAL 
                                           then INLINE_VIEW.DTINICIAL
                                           else trunc(INLINE_VIEW.DTMATRICULA) 
                                      end ) not between INLINE_VIEW.DTINICIAL and  INLINE_VIEW.DTFINAL 
      then 1 
        else 0 end ) AS REALIZADO_FORA_PRAZO_DIA,
  nvl(
  CASE WHEN (INLINE_VIEW.CONTADOR >= 1) 
      THEN  1  
       ELSE 0
  end,0) AS REALIZADO_EJA,
  sysdate AS DT_CARGA,
  nvl((case when (case when to_char(INLINE_VIEW.DTMATRICULA,'YYYYMM') <= to_char(INLINE_VIEW.DTINICIAL,'YYYYMM')
                                           then to_char(INLINE_VIEW.DTINICIAL,'YYYYMM')
                                           else to_char(INLINE_VIEW.DTMATRICULA,'YYYYMM')
                                      end ) not between to_char(INLINE_VIEW.DTINICIAL,'YYYYMM') and  to_char(INLINE_VIEW.DTFINAL,'YYYYMM') 
      then 1 
        else 0 end ),0) AS REALIZADO_FORA_PRAZO_MES,
  CASE WHEN (INLINE_VIEW.CODCOLIGADA = 4) 
      THEN  1  
      ELSE 0
end AS REALIZADO_MATRICULA_SENAI,
  0 AS NUM_CALC_EJA,
  case when INLINE_VIEW.CODCCUSTO is null  
     then 'S' 
     else 'P' 
end AS POLO_SEDE,
  case when (INLINE_VIEW.CODCCUSTOL is not null or INLINE_VIEW.CODCCUSTO <> INLINE_VIEW.CODCCUSTO_1) 
     then 'S' 
     else 'N' 
end AS FLAG_MOBILIDADE,
  case when INLINE_VIEW.CODCCUSTOL is null 
     then 0
     else to_number(INLINE_VIEW.CODCOLIGADA_STUCPL || substr(INLINE_VIEW.CODCCUSTOL,7,20))
end AS POLO_MOBILIDADE,
  '-' AS FLAG_MATRICULA_ISOLADA,
  0 AS REALIZADO_MATRICULA_ISOLADA,
  'I' IND_UPDATE
from  ((((((((((((((((((
SELECT 
  JOIN_A.CODCOLIGADA AS CODCOLIGADA ,
  JOIN_A.CODCCUSTO AS CODCCUSTO ,
  JOIN_A.DTINICIAL AS DTINICIAL ,
  JOIN_A.DTFINAL AS DTFINAL ,
  JOIN_A.CODGRADE AS CODGRADE ,
  JOIN_A.CODCOLIGADA_2 AS CODCOLIGADA_2 ,
  JOIN_A.IDPERLET_1 AS IDPERLET_1 ,
  JOIN_A.RA AS RA ,
  JOIN_A.CODFILIAL_1 AS CODFILIAL_1 ,
  JOIN_A.CODTURMA_1 AS CODTURMA_1 ,
  JOIN_A.DTMATRICULA AS DTMATRICULA ,
  JOIN_A.RECMODIFIEDON_2 AS RECMODIFIEDON_2 ,
  JOIN_A.CODCOLIGADA_3 AS CODCOLIGADA_3 ,
  JOIN_A.BAIXARENDA AS BAIXARENDA ,
  JOIN_A.CATEGORIA AS CATEGORIA ,
  JOIN_A.EBEP AS EBEP ,
  JOIN_A.GRATUIDADE AS GRATUIDADE ,
  JOIN_A.CODFINANC AS CODFINANC ,
  JOIN_A.TIPOGRAT AS TIPOGRAT ,
  JOIN_A.CNPJEMPRESA AS CNPJEMPRESA ,
  JOIN_A.CODCOLIGADA_4 AS CODCOLIGADA_4 ,
  JOIN_A.RA_2 AS RA_2 ,
  JOIN_A.CODPESSOA AS CODPESSOA ,
  JOIN_A.NOME_1 AS NOME_1 ,
  JOIN_A.DTNASCIMENTO AS DTNASCIMENTO ,
  JOIN_A.NACIONALIDADE AS NACIONALIDADE ,
  JOIN_A.RUA AS RUA ,
  JOIN_A.NUMERO AS NUMERO ,
  JOIN_A.BAIRRO AS BAIRRO ,
  JOIN_A.ESTADO AS ESTADO ,
  JOIN_A.CIDADE AS CIDADE ,
  JOIN_A.CEP AS CEP ,
  JOIN_A.PAIS AS PAIS ,
  JOIN_A.TELEFONE1 AS TELEFONE1 ,
  JOIN_A.TELEFONE2 AS TELEFONE2 ,
  JOIN_A.NATURALIDADE AS NATURALIDADE ,
  JOIN_A.TELEFONE3 AS TELEFONE3 ,
  JOIN_A.CODCCUSTO_1 AS CODCCUSTO_1 ,
  JOIN_A.CODCOLIGADA_8 AS CODCOLIGADA_8 ,
  JOIN_A.CODSTATUS_2 AS CODSTATUS_2 ,
  JOIN_A.CODCURSO_3 AS CODCURSO_3 ,
  JOIN_A.CODTURNO_1 AS CODTURNO_1 ,
  JOIN_A.CODFILIAL_5 AS CODFILIAL_5 ,
  JOIN_A.DESCRICAO_6 AS DESCRICAO_6 ,
  JOIN_A.DATA_CARGA AS DATA_CARGA ,
  JOIN_A.CODCCUSTOL AS CODCCUSTOL ,
  JOIN_A.CODCOLIGADA_STUCPL AS CODCOLIGADA_STUCPL ,
  JOIN_A.CR AS CR ,
  JOIN_A.UO AS UO ,
  JOIN_A.COLIGADA AS COLIGADA ,
  MAP_BUSCA_GRATUIDADE_REGIM_A.CODCOLIGADA AS CODCOLIGADA_1 ,
  MAP_BUSCA_GRATUIDADE_REGIM_A.CODCLIENTE AS CODCLIENTE ,
  MAP_BUSCA_GRATUIDADE_REGIM_A.CODINTERNO AS CODINTERNO ,
  MAP_BUSCA_TIPOGRAT_A.CODCOLIGADA AS CODCOLIGADA_5 ,
  MAP_BUSCA_TIPOGRAT_A.CODCLIENTE AS CODCLIENTE_1 ,
  MAP_BUSCA_TIPOGRAT_A.DESCRICAO AS DESCRICAO ,
  MAP_CONTA_EJA_A.CONTADOR AS CONTADOR ,
  MAP_CONTA_EJA_A.CODCOLIGADA_3 AS CODCOLIGADA_6 ,
  MAP_CONTA_EJA_A.IDPERLET AS IDPERLET ,
  MAP_CONTA_EJA_A.RA_1 AS RA_1 ,
  MAP_BUSCA_NOME_MAE_A.CODIGO AS CODIGO ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE1 AS TELEFONE1_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE2 AS TELEFONE2_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE3 AS TELEFONE3_1 ,
  MAP_BUSCA_NOME_MAE_A.CODPESSOAMAE AS CODPESSOAMAE ,
  MAP_BUSCA_NOME_MAE_A.CODCOLIGADA AS CODCOLIGADA_7 ,
  MAP_BUSCA_NOME_MAE_A.RA AS RA_3   
FROM 
  (((ODI_DDABI_EXEC.C$_6JOIN JOIN_A  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_3MAP_BUSCA_GRATUIDADE_REGIM MAP_BUSCA_GRATUIDADE_REGIM_A  
    ON  MAP_BUSCA_GRATUIDADE_REGIM_A.CODCOLIGADA        = JOIN_A.CODCOLIGADA_3 
AND MAP_BUSCA_GRATUIDADE_REGIM_A.CODCLIENTE        = JOIN_A.CODFINANC
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_4MAP_BUSCA_TIPOGRAT MAP_BUSCA_TIPOGRAT_A  
    ON  MAP_BUSCA_TIPOGRAT_A.CODCOLIGADA        = JOIN_A.CODCOLIGADA_3 
AND MAP_BUSCA_TIPOGRAT_A.CODCLIENTE       = JOIN_A.TIPOGRAT
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_5MAP_CONTA_EJA MAP_CONTA_EJA_A  
    ON  MAP_CONTA_EJA_A.CODCOLIGADA_3             =  JOIN_A.CODCOLIGADA_2 
   AND MAP_CONTA_EJA_A.IDPERLET            = JOIN_A.IDPERLET_1 
   AND TRIM(MAP_CONTA_EJA_A.RA_1     )      = TRIM(JOIN_A.RA)
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_1MAP_BUSCA_NOME_MAE MAP_BUSCA_NOME_MAE_A  
    ON  MAP_BUSCA_NOME_MAE_A.CODIGO              = JOIN_A.CODPESSOA 
   and MAP_BUSCA_NOME_MAE_A.CODCOLIGADA       = JOIN_A.CODCOLIGADA_4 
   and MAP_BUSCA_NOME_MAE_A.RA             = JOIN_A.RA_2
  ) INLINE_VIEW  LEFT OUTER JOIN  (
SELECT 
  MAP_BUSCA_NOME_PAI_A.CODIGO AS CODIGO ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE1 AS TELEFONE1 ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE2 AS TELEFONE2 ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE3 AS TELEFONE3 ,
  MAP_BUSCA_NOME_PAI_A.CODPESSOAPAI AS CODPESSOAPAI ,
  MAP_BUSCA_NOME_PAI_A.CODCOLIGADA AS CODCOLIGADA ,
  MAP_BUSCA_NOME_PAI_A.RA AS RA   
FROM 
  ODI_DDABI_EXEC.C$_0MAP_BUSCA_NOME_PAI MAP_BUSCA_NOME_PAI_A  
  ) MAP_BUSCA_NOME_PAI_A_1  
    ON  MAP_BUSCA_NOME_PAI_A_1.CODIGO               = INLINE_VIEW.CODPESSOA 
    and MAP_BUSCA_NOME_PAI_A_1.CODCOLIGADA      = INLINE_VIEW.CODCOLIGADA_4 
    and MAP_BUSCA_NOME_PAI_A_1.RA                = INLINE_VIEW.RA_2
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_2MAP_BUSCA_RESP_ACADEMICO MAP_BUSCA_RESP_ACADEMICO_A  
    ON  trim(MAP_BUSCA_RESP_ACADEMICO_A.RA)             = trim(INLINE_VIEW.RA) 
    and MAP_BUSCA_RESP_ACADEMICO_A.CODCOLIGADA  = INLINE_VIEW.CODCOLIGADA_2
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_7MAP_BUSCA_DADOS_EMPRESA_PA MAP_BUSCA_DADOS_EMPRESA_PA_A  
    ON  MAP_BUSCA_DADOS_EMPRESA_PA_A.CODIGO               = MAP_BUSCA_NOME_PAI_A_1.CODPESSOAPAI 
    AND MAP_BUSCA_DADOS_EMPRESA_PA_A.CODCOLIGADA   = INLINE_VIEW.CODCOLIGADA_2 
    AND MAP_BUSCA_DADOS_EMPRESA_PA_A.RA         = INLINE_VIEW.RA
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_8MAP_BUSCA_DADOS_EMPRESA_MA MAP_BUSCA_DADOS_EMPRESA_MA_A  
    ON  MAP_BUSCA_DADOS_EMPRESA_MA_A.CODIGO               = INLINE_VIEW.CODPESSOAMAE 
    AND MAP_BUSCA_DADOS_EMPRESA_MA_A.CODCOLIGADA   = INLINE_VIEW.CODCOLIGADA_2 
    AND MAP_BUSCA_DADOS_EMPRESA_MA_A.RA          = INLINE_VIEW.RA
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TEMPO DIM_TEMPO  
    ON  DIM_TEMPO.ID  =   INLINE_VIEW.DATA_CARGA 
--TO_CHAR(MAP_TABELAS_SGE_Rest.DTMATRICULA, 'RRRRMM')
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_9MAP_BUSCA_IND_PROD MAP_BUSCA_IND_PROD_A  
    ON  MAP_BUSCA_IND_PROD_A.DCR_ID       = INLINE_VIEW.COLIGADA||INLINE_VIEW.CR 
 and MAP_BUSCA_IND_PROD_A.ID   = DIM_TEMPO.ID  
 and MAP_BUSCA_IND_PROD_A.DTPMA_ID   =  case when (INLINE_VIEW.EBEP = 1 ) then 3 
                                               when (INLINE_VIEW.CODFINANC IN (2,3)) then 1   
                                               when (INLINE_VIEW.CODFINANC IN (1)) then 2 
                                               else 0 
                                          end
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_AMAP_BUSCA_IND_DN MAP_BUSCA_IND_DN_A  
    ON  MAP_BUSCA_IND_DN_A.DCR_ID        = INLINE_VIEW.COLIGADA||INLINE_VIEW.CR 
and MAP_BUSCA_IND_DN_A.ID       = DIM_TEMPO.ID  
and MAP_BUSCA_IND_DN_A.DTPMA_ID   =  case when (INLINE_VIEW.EBEP = 1 ) then 3 
                                               when (INLINE_VIEW.CODFINANC IN (2,3)) then 1   
                                               when (INLINE_VIEW.CODFINANC IN (1)) then 2 
                                               else 0 
                                          end
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_BMAP_BUSCA_IND_ATEND MAP_BUSCA_IND_ATEND_A  
    ON  MAP_BUSCA_IND_ATEND_A.DCR_ID                = INLINE_VIEW.COLIGADA||INLINE_VIEW.CR
   and MAP_BUSCA_IND_ATEND_A.ID                 = DIM_TEMPO.ID 
   --REVISAR A REGRA ABAIXO
   and MAP_BUSCA_IND_ATEND_A.DTPMA_ID           =  case when (INLINE_VIEW.EBEP = 1 ) then 3
                                                           when (INLINE_VIEW.CODFINANC IN (2,3)) then 1  
                                                           when (INLINE_VIEW.CODFINANC IN (1)) then 2
                                                           else 0
                                                      end
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_ALUNOS DIM_ALUNOS  
    ON  DIM_ALUNOS.RA                            = TRIM(INLINE_VIEW.RA) 
   AND DIM_ALUNOS.UNID_GPS_CODIGO_ORIGEM    = INLINE_VIEW.CODCOLIGADA_2 
   AND DIM_ALUNOS.FLAG_ATUAL                = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_SITUACAO_ALUNO DIM_SITUACAO_ALUNO  
    ON  DIM_SITUACAO_ALUNO.CODCOLIGADA           = INLINE_VIEW.CODCOLIGADA_8 
   AND DIM_SITUACAO_ALUNO.COD_ORIGEM_SGE  = INLINE_VIEW.CODSTATUS_2  
   and DIM_SITUACAO_ALUNO.FLAG_ATUAL   = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TIPOS_CLIENTES DIM_TIPOS_CLIENTES  
    ON  DIM_TIPOS_CLIENTES.COD_ORIGEM_SGE        =  INLINE_VIEW.CATEGORIA 
   AND DIM_TIPOS_CLIENTES.FLAG_ATUAL    = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TURMAS DIM_TURMAS  
    ON  TRIM(DIM_TURMAS.SIGLA_TURMA  )        = TRIM(INLINE_VIEW.CODTURMA_1) 
    AND DIM_TURMAS.COD_FILIAL_SGE        = INLINE_VIEW.CODFILIAL_1 
    AND DIM_TURMAS.ID_PERLET_SGE       = INLINE_VIEW.IDPERLET_1 
    AND DIM_TURMAS.FLAG_ATUAL          = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TURNOS DIM_TURNOS  
    ON  DIM_TURNOS.COD_ORIGEM_SGE      = INLINE_VIEW.CODTURNO_1  
   and DIM_TURNOS.COD_FILIAL      = INLINE_VIEW.CODFILIAL_5 
   and DIM_TURNOS.FLAG_ATUAL     = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_CURSOS_MODULOS DIM_CURSOS_MODULOS  
    ON  DIM_CURSOS_MODULOS.CURS_ID_SGE      = INLINE_VIEW.CODCURSO_3  
   and DIM_CURSOS_MODULOS.COD_GRADE      = INLINE_VIEW.CODGRADE 
   and DIM_CURSOS_MODULOS.FLAG_ATUAL      = 1
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_CBI_SA1_TMP BI_SA1_TMP_A  
    ON  TRIM(BI_SA1_TMP_A.A1_CGC)                    = replace(translate(INLINE_VIEW.CNPJEMPRESA,'./-','  '),' ','')   
   and TRIM(BI_SA1_TMP_A.A1_CGC) is not null
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_CLIENTES DIM_CLIENTES  
    ON  BI_SA1_TMP_A.PES_ID                             = DIM_CLIENTES.ID
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_FILIAIS_SGE DIM_FILIAIS_SGE  
    ON  DIM_FILIAIS_SGE.COD_ORIGEM_SGE          = INLINE_VIEW.CODFILIAL_1 
   AND DIM_FILIAIS_SGE.COD_COLIGADA              = INLINE_VIEW.CODCOLIGADA_2 
   and DIM_FILIAIS_SGE.FLAG_ATUAL              = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TIPOS_FINANCIAMENTO DIM_TIPOS_FINANCIAMENTO  
    ON  INLINE_VIEW.CODINTERNO = DIM_TIPOS_FINANCIAMENTO.CODINTERNO
and DIM_TIPOS_FINANCIAMENTO.FLAG_ATUAL = 1
where (1=1)
) S
) where demp_id = 4 and dt_id between 201804 and 201808
group by dt_id

-- depois I$ dda_bidw

select dt_id,sum(realizado_matricula), sum(realizado_eja), sum(realizado_matricula_senai) from (
select 
DALU_ID,
  DCLI_ID,
  DCR_ID,
  DCURM_ID,
  DEMP_ID,
  DRAST_ID,
  DSIAL_ID,
  DTURM_ID,
  DT_ID,
  DUORG_ID,
  PREVISTO_AH,
  PREVISTO_MATRICULA,
  REALIZADO_AH,
  REALIZADO_MATRICULA,
  ENTR_DISC_SAIDA,
  VALOR_CURSO,
  VALOR_TOTAL,
  VALOR_DESCONTO,
  VALOR_EFETIVO,
  DATA_SISTEMA,
  DATA_INGRESSO,
  IDADE,
  DATA_INI_SIT_ALUN,
  MOTIVO_CANCELAMENTO,
  CLIENTELA_SESI,
  ISENTO,
  GRATUIDADE,
  BAIXA_RENDA,
  DECLARACAO,
  PREVISTO_AH_MES_ANT,
  REALIZADO_AH_MES_ANT,
  PREVISTO_AH_ANO_MES_ANT,
  REALIZADO_AH_ANO_MES_ANT,
  PREVISTO_MT_MES_ANT,
  REALIZADO_MT_MES_ANT,
  PREVISTO_MT_ANO_MES_ANT,
  REALIZADO_MT_ANO_MES_ANT,
  VALOR_CURSO_MES_ANT,
  VALOR_CURSO_ANO_MES_ANT,
  VALOR_TOTAL_MES_ANT,
  VALOR_TOTAL_ANO_MES_ANT,
  VALOR_DESCONTO_MES_ANT,
  VALOR_DESCONTO_ANO_MES_ANT,
  VALOR_EFETIVO_MES_ANT,
  VALOR_EFETIVO_ANO_MES_ANT,
  DTPMA_ID,
  DTPCL_ID,
  CR_LOT,
  IND_PROD,
  PREVISTO_HH,
  PREVISTO_ATENDIMENTO,
  REALIZADO_HH,
  REALIZADO_ATENDIMENTO,
  PREVISTO_HH_MES_ANT,
  REALIZADO_HH_MES_ANT,
  PREVISTO_HH_ANO_MES_ANT,
  REALIZADO_HH_ANO_MES_ANT,
  PREVISTO_AT_MES_ANT,
  REALIZADO_AT_MES_ANT,
  PREVISTO_AT_ANO_MES_ANT,
  REALIZADO_AT_ANO_MES_ANT,
  DST_ID,
  DCGS_ID,
  IND_DN,
  IND_ATEND,
  DPLA_ID,
  CHAVE,
  CHAVE_BSC,
  EM_ANDAMENTO,
  DCTA_ID,
  ENTRADA_NOVA,
  ENTRADA_RESIDUAL,
  ENTRADA_TRANSFERENCIA,
  ENTRADA_TRANCAMENTO,
  SAIDA_CONCLUIDO,
  SAIDA_EVADIDO,
  SAIDA_ELIMINADO,
  SAIDA_TRANCADO,
  SAIDA_TRANSFERIDO,
  SAIDA_RESIDUAL,
  TIPO_GRATUIDADE,
  DDISC_ID,
  DPRO_ID_INSTRUTOR,
  DCLIPF_ID,
  DCLIPJ_ID,
  DATA_BI,
  ENSAIOS,
  RELATORIOS,
  PROJETOS,
  PREVISTO_LAUDOS,
  PREVISTO_ENSAIOS,
  REALIZADO_HORAS_EFETIVAS_EST,
  REALIZADO_HORAS_PRATICA_APR,
  REALIZADO_HORAS_TOTAL,
  DCR_TURM_ID,
  PNE_ID,
  CONTA_PNE,
  FLAG_PNE,
  DTURN_ID,
  SISTEMA_ORIGEM,
  IDC_SGE_HIST,
  TIPO_FINANCIAMENTO,
  DFILSGE_ID,
  REALIZADO_FORA_PRAZO_DIA,
  REALIZADO_EJA,
  DT_CARGA,
  REALIZADO_FORA_PRAZO_MES,
  REALIZADO_MATRICULA_SENAI,
  FLAG_MATRICULA_ISOLADA,
  NUM_CALC_EJA,
  FLAG_SEDE_POLO,
  FLAG_MOBILIDADE,
  POLO_MOBILIDADE,
  REALIZADO_MATRICULA_ISOLADA,
  SEDE_ID,
  POLO_ID,
  IND_UPDATE
 from (
select   
  nvl(DIM_ALUNOS.ID,0) AS DALU_ID,
  nvl(DIM_CLIENTES.ID,0) AS DCLI_ID,
  nvl(INLINE_VIEW.COLIGADA||INLINE_VIEW.CR,0) AS DCR_ID,
  nvl(DIM_CURSOS_MODULOS.ID,0) AS DCURM_ID,
  nvl(INLINE_VIEW.CODCOLIGADA_2,0) AS DEMP_ID,
  nvl(case when  
       ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
       end) = 'RASTREAVEL'
     and 
       (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
      end) = 'DECLARACAO')
     then 1
when
        ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
         end) = 'NRASTREAVEL'
       and         
         (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
         end)= 'DECLARACAO')
      then 2
when
        ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
         end) = 'RASTREAVEL'
       and         
         (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
       end) = 'SDECLARACAO')
      then 3
when
        ((case when (INLINE_VIEW.NATURALIDADE is not null
                     And INLINE_VIEW.NOME_1 is not null  
                     And INLINE_VIEW.DTNASCIMENTO is not null 
                     And INLINE_VIEW.NACIONALIDADE is not null
                     And INLINE_VIEW.CEP is not null 
                     And INLINE_VIEW.RUA is not null 
                     And INLINE_VIEW.NUMERO is not null
                     And INLINE_VIEW.BAIRRO is not null 
                     And INLINE_VIEW.ESTADO is not null 
                     And INLINE_VIEW.CIDADE is not null
                     And INLINE_VIEW.PAIS is not null  
                     And(INLINE_VIEW.TELEFONE1 is not null OR INLINE_VIEW.TELEFONE2 is not null OR
                     INLINE_VIEW.TELEFONE3 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE1 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE2 is not null OR
                     MAP_BUSCA_RESP_ACADEMICO_A.TELEFONE3 is not null OR
                     INLINE_VIEW.TELEFONE1_1 is not null OR
                     INLINE_VIEW.TELEFONE2_1 is not null OR
                     INLINE_VIEW.TELEFONE3_1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE1 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE2 is not null OR
                     MAP_BUSCA_NOME_PAI_A_1.TELEFONE3 is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_PA_A.EMPRESATELEFONE is not null OR
                     MAP_BUSCA_DADOS_EMPRESA_MA_A.EMPRESATELEFONE is not null))
             then 'RASTREAVEL' 
             else 'NRASTREAVEL'
         end) = 'NRASTREAVEL'
       and         
         (Case 
             when (INLINE_VIEW.BAIXARENDA = 1) 
             then 'DECLARACAO' 
             else 'SDECLARACAO'
        end) = 'SDECLARACAO')
      then 4
 else
   5
END
,0) AS DRAST_ID,
  nvl(DIM_SITUACAO_ALUNO.ID,0) AS DSIAL_ID,
  nvl(DIM_TURMAS.ID,0) AS DTURM_ID,
  nvl(DIM_TEMPO.ID,0) AS DT_ID,
  decode(INLINE_VIEW.UO, null, 0, INLINE_VIEW.COLIGADA || substr(INLINE_VIEW.UO,7,20)) AS DUORG_ID,
  0 AS PREVISTO_AH,
  0 AS PREVISTO_MATRICULA,
  0 AS REALIZADO_AH,
  CASE WHEN (INLINE_VIEW.CONTADOR IS NOT NULL  
           AND INLINE_VIEW.CONTADOR >= 1  
           AND INLINE_VIEW.CODCOLIGADA_6 = 2  
           )  
      THEN  0   
      WHEN  INLINE_VIEW.CODCOLIGADA_6 = 4 
      THEN 0 
      ELSE 1 
END AS REALIZADO_MATRICULA,
  0 AS ENTR_DISC_SAIDA,
  0 AS VALOR_CURSO,
  0 AS VALOR_TOTAL,
  0 AS VALOR_DESCONTO,
  0 AS VALOR_EFETIVO,
  nvl(INLINE_VIEW.RECMODIFIEDON_2,to_date('01/01/1900','dd/mm/yyyy HH:MI:SS')) AS DATA_SISTEMA,
  nvl(INLINE_VIEW.DTMATRICULA,to_date('01/01/1900','dd/mm/yyyy')) AS DATA_INGRESSO,
  Nvl(Trunc(Months_Between(Sysdate, DIM_ALUNOS.DATA_NASCIMENTO) / 12),
                 0) AS IDADE,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_INI_SIT_ALUN,
  nvl(INLINE_VIEW.DESCRICAO_6,'-') AS MOTIVO_CANCELAMENTO,
  '-' AS CLIENTELA_SESI,
  '-' AS ISENTO,
  INLINE_VIEW.GRATUIDADE AS GRATUIDADE,
  nvl(case when INLINE_VIEW.BAIXARENDA = 1 then 'S' else 'N' END,0) AS BAIXA_RENDA,
  '-' AS DECLARACAO,
  0 AS PREVISTO_AH_MES_ANT,
  0 AS REALIZADO_AH_MES_ANT,
  0 AS PREVISTO_AH_ANO_MES_ANT,
  0 AS REALIZADO_AH_ANO_MES_ANT,
  0 AS PREVISTO_MT_MES_ANT,
  0 AS REALIZADO_MT_MES_ANT,
  0 AS PREVISTO_MT_ANO_MES_ANT,
  0 AS REALIZADO_MT_ANO_MES_ANT,
  0 AS VALOR_CURSO_MES_ANT,
  0 AS VALOR_CURSO_ANO_MES_ANT,
  0 AS VALOR_TOTAL_MES_ANT,
  0 AS VALOR_TOTAL_ANO_MES_ANT,
  0 AS VALOR_DESCONTO_MES_ANT,
  0 AS VALOR_DESCONTO_ANO_MES_ANT,
  0 AS VALOR_EFETIVO_MES_ANT,
  0 AS VALOR_EFETIVO_ANO_MES_ANT,
  case when INLINE_VIEW.EBEP = 1  then 3
     when INLINE_VIEW.CODFINANC IN (2,3) then 1  
     when INLINE_VIEW.CODFINANC IN (1) then 2
else 0
end AS DTPMA_ID,
  0 AS DTPCL_ID,
  '-' AS CR_LOT,
  nvl(MAP_BUSCA_IND_PROD_A.IND,'Não') AS IND_PROD,
  0 AS PREVISTO_HH,
  0 AS PREVISTO_ATENDIMENTO,
  0 AS REALIZADO_HH,
  0 AS REALIZADO_ATENDIMENTO,
  0 AS PREVISTO_HH_MES_ANT,
  0 AS REALIZADO_HH_MES_ANT,
  0 AS PREVISTO_HH_ANO_MES_ANT,
  0 AS REALIZADO_HH_ANO_MES_ANT,
  0 AS PREVISTO_AT_MES_ANT,
  0 AS REALIZADO_AT_MES_ANT,
  0 AS PREVISTO_AT_ANO_MES_ANT,
  0 AS REALIZADO_AT_ANO_MES_ANT,
  0 AS DST_ID,
  NVL(NVL(MAP_BUSCA_IND_ATEND_A.DGCS_ID,NVL(MAP_BUSCA_IND_DN_A.DGCS_ID,MAP_BUSCA_IND_PROD_A.DGCS_ID)),0) AS DCGS_ID,
  NVL(MAP_BUSCA_IND_DN_A.IND,'Não') AS IND_DN,
  NVL(MAP_BUSCA_IND_ATEND_A.IND,'Não') AS IND_ATEND,
  0 AS DPLA_ID,
  nvl(DIM_ALUNOS.ID||DIM_TURMAS.ID||DIM_TEMPO.ID,'-') AS CHAVE,
  '-' AS CHAVE_BSC,
  0 AS EM_ANDAMENTO,
  0 AS DCTA_ID,
  0 AS ENTRADA_NOVA,
  0 AS ENTRADA_RESIDUAL,
  0 AS ENTRADA_TRANSFERENCIA,
  0 AS ENTRADA_TRANCAMENTO,
  0 AS SAIDA_CONCLUIDO,
  0 AS SAIDA_EVADIDO,
  0 AS SAIDA_ELIMINADO,
  0 AS SAIDA_TRANCADO,
  0 AS SAIDA_TRANSFERIDO,
  0 AS SAIDA_RESIDUAL,
  nvl(DECODE(
    case when INLINE_VIEW.CODCLIENTE_1 = 0 then '9'
         when INLINE_VIEW.CODCLIENTE_1 between 423 and 452 then '4'
         else INLINE_VIEW.CODCLIENTE_1
    end, '9', 'Não Gratuita',4,'PRONATEC',INLINE_VIEW.DESCRICAO),0) AS TIPO_GRATUIDADE,
  0 AS DDISC_ID,
  0 AS DPRO_ID_INSTRUTOR,
  0 AS DCLIPF_ID,
  0 AS DCLIPJ_ID,
  to_date('01/01/1900','dd/mm/yyyy') AS DATA_BI,
  0 AS ENSAIOS,
  0 AS RELATORIOS,
  0 AS PROJETOS,
  0 AS PREVISTO_LAUDOS,
  0 AS PREVISTO_ENSAIOS,
  0 AS REALIZADO_HORAS_EFETIVAS_EST,
  0 AS REALIZADO_HORAS_PRATICA_APR,
  0 AS REALIZADO_HORAS_TOTAL,
  nvl(INLINE_VIEW.COLIGADA||INLINE_VIEW.CR,0) AS DCR_TURM_ID,
  0 AS PNE_ID,
  0 AS CONTA_PNE,
  '-' AS FLAG_PNE,
  nvl(DIM_TURNOS.ID_TURNO,0) AS DTURN_ID,
  'SGE' AS SISTEMA_ORIGEM,
  0 AS IDC_SGE_HIST,
  NVL(INLINE_VIEW.CODFINANC,'-') AS TIPO_FINANCIAMENTO,
  DIM_FILIAIS_SGE.ID_FILIAL AS DFILSGE_ID,
  (case when (case when trunc(INLINE_VIEW.DTMATRICULA) <= INLINE_VIEW.DTINICIAL 
                                           then INLINE_VIEW.DTINICIAL
                                           else trunc(INLINE_VIEW.DTMATRICULA) 
                                      end ) not between INLINE_VIEW.DTINICIAL and  INLINE_VIEW.DTFINAL 
      then 1 
        else 0 end ) AS REALIZADO_FORA_PRAZO_DIA,
  nvl(
  CASE WHEN (INLINE_VIEW.CONTADOR >= 1) 
      THEN  1  
       ELSE 0
  end,0) AS REALIZADO_EJA,
  sysdate AS DT_CARGA,
  nvl((case when (case when to_char(INLINE_VIEW.DTMATRICULA,'YYYYMM') <= to_char(INLINE_VIEW.DTINICIAL,'YYYYMM')
                                           then to_char(INLINE_VIEW.DTINICIAL,'YYYYMM')
                                           else to_char(INLINE_VIEW.DTMATRICULA,'YYYYMM')
                                      end ) not between to_char(INLINE_VIEW.DTINICIAL,'YYYYMM') and  to_char(INLINE_VIEW.DTFINAL,'YYYYMM') 
      then 1 
        else 0 end ),0) AS REALIZADO_FORA_PRAZO_MES,
  CASE WHEN (INLINE_VIEW.CODCOLIGADA_6 = 4)  
      THEN  1   
      ELSE 0 
end AS REALIZADO_MATRICULA_SENAI,
  '-' AS FLAG_MATRICULA_ISOLADA,
  0 AS NUM_CALC_EJA,
  case when INLINE_VIEW.CODCCUSTO is null 
     then 'S'
     else 'P'
end AS FLAG_SEDE_POLO,
  case when (INLINE_VIEW.CODCCUSTOL is not null or INLINE_VIEW.CODCCUSTO <> INLINE_VIEW.CODCCUSTO_1) 
     then 'S' 
     else 'N' 
end AS FLAG_MOBILIDADE,
  case when INLINE_VIEW.CODCCUSTOL is null 
     then 0
     else to_number(INLINE_VIEW.CODCOLIGADA_STUCPL || substr(INLINE_VIEW.CODCCUSTOL,7,20))
end AS POLO_MOBILIDADE,
  0 AS REALIZADO_MATRICULA_ISOLADA,
  INLINE_VIEW.CODCOLIGADA||substr(INLINE_VIEW.CODCCUSTO_1,-14,14) AS SEDE_ID,
  INLINE_VIEW.CODCOLIGADA||coalesce(substr(INLINE_VIEW.CODCCUSTO,-14,14),substr(INLINE_VIEW.CODCCUSTO_STDISC,-14,14), substr(INLINE_VIEW.CODCCUSTO_1,-14,14),'-') AS POLO_ID,
  'I' IND_UPDATE
from  ((((((((((((((((((
SELECT 
  JOIN_A.CODCOLIGADA AS CODCOLIGADA ,
  JOIN_A.CODCCUSTO AS CODCCUSTO ,
  JOIN_A.DTINICIAL AS DTINICIAL ,
  JOIN_A.DTFINAL AS DTFINAL ,
  JOIN_A.CODGRADE AS CODGRADE ,
  JOIN_A.CODCOLIGADA_2 AS CODCOLIGADA_2 ,
  JOIN_A.IDPERLET_1 AS IDPERLET_1 ,
  JOIN_A.RA AS RA ,
  JOIN_A.CODFILIAL_1 AS CODFILIAL_1 ,
  JOIN_A.CODTURMA_1 AS CODTURMA_1 ,
  JOIN_A.DTMATRICULA AS DTMATRICULA ,
  JOIN_A.RECMODIFIEDON_2 AS RECMODIFIEDON_2 ,
  JOIN_A.CODCOLIGADA_3 AS CODCOLIGADA_3 ,
  JOIN_A.BAIXARENDA AS BAIXARENDA ,
  JOIN_A.CATEGORIA AS CATEGORIA ,
  JOIN_A.EBEP AS EBEP ,
  JOIN_A.GRATUIDADE AS GRATUIDADE ,
  JOIN_A.CODFINANC AS CODFINANC ,
  JOIN_A.TIPOGRAT AS TIPOGRAT ,
  JOIN_A.CNPJEMPRESA AS CNPJEMPRESA ,
  JOIN_A.CODCOLIGADA_4 AS CODCOLIGADA_4 ,
  JOIN_A.RA_2 AS RA_2 ,
  JOIN_A.CODPESSOA AS CODPESSOA ,
  JOIN_A.NOME_1 AS NOME_1 ,
  JOIN_A.DTNASCIMENTO AS DTNASCIMENTO ,
  JOIN_A.NACIONALIDADE AS NACIONALIDADE ,
  JOIN_A.RUA AS RUA ,
  JOIN_A.NUMERO AS NUMERO ,
  JOIN_A.BAIRRO AS BAIRRO ,
  JOIN_A.ESTADO AS ESTADO ,
  JOIN_A.CIDADE AS CIDADE ,
  JOIN_A.CEP AS CEP ,
  JOIN_A.PAIS AS PAIS ,
  JOIN_A.TELEFONE1 AS TELEFONE1 ,
  JOIN_A.TELEFONE2 AS TELEFONE2 ,
  JOIN_A.NATURALIDADE AS NATURALIDADE ,
  JOIN_A.TELEFONE3 AS TELEFONE3 ,
  JOIN_A.CODCOLIGADA_6 AS CODCOLIGADA_6 ,
  JOIN_A.CODCCUSTO_1 AS CODCCUSTO_1 ,
  JOIN_A.CODCOLIGADA_8 AS CODCOLIGADA_8 ,
  JOIN_A.CODSTATUS_2 AS CODSTATUS_2 ,
  JOIN_A.CODCURSO_3 AS CODCURSO_3 ,
  JOIN_A.CODTURNO_1 AS CODTURNO_1 ,
  JOIN_A.CODFILIAL_5 AS CODFILIAL_5 ,
  JOIN_A.DESCRICAO_6 AS DESCRICAO_6 ,
  JOIN_A.DATA_CARGA AS DATA_CARGA ,
  JOIN_A.CODCCUSTOL AS CODCCUSTOL ,
  JOIN_A.CODCOLIGADA_STUCPL AS CODCOLIGADA_STUCPL ,
  JOIN_A.CODCCUSTO_STDISC AS CODCCUSTO_STDISC ,
  JOIN_A.CR AS CR ,
  JOIN_A.UO AS UO ,
  JOIN_A.COLIGADA AS COLIGADA ,
  MAP_BUSCA_GRATUIDADE_REGIM_A.CODCOLIGADA AS CODCOLIGADA_1 ,
  MAP_BUSCA_GRATUIDADE_REGIM_A.CODCLIENTE AS CODCLIENTE ,
  MAP_BUSCA_GRATUIDADE_REGIM_A.CODINTERNO AS CODINTERNO ,
  MAP_BUSCA_TIPOGRAT_A.CODCOLIGADA AS CODCOLIGADA_5 ,
  MAP_BUSCA_TIPOGRAT_A.CODCLIENTE AS CODCLIENTE_1 ,
  MAP_BUSCA_TIPOGRAT_A.DESCRICAO AS DESCRICAO ,
  MAP_CONTA_EJA_A.CONTADOR AS CONTADOR ,
  MAP_CONTA_EJA_A.CODCOLIGADA_3 AS CODCOLIGADA_7 ,
  MAP_CONTA_EJA_A.IDPERLET AS IDPERLET ,
  MAP_CONTA_EJA_A.RA_1 AS RA_1 ,
  MAP_BUSCA_NOME_MAE_A.CODIGO AS CODIGO ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE1 AS TELEFONE1_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE2 AS TELEFONE2_1 ,
  MAP_BUSCA_NOME_MAE_A.TELEFONE3 AS TELEFONE3_1 ,
  MAP_BUSCA_NOME_MAE_A.CODPESSOAMAE AS CODPESSOAMAE ,
  MAP_BUSCA_NOME_MAE_A.CODCOLIGADA AS CODCOLIGADA_9 ,
  MAP_BUSCA_NOME_MAE_A.RA AS RA_3   
FROM 
  (((ODI_DDABI_EXEC.C$_6JOIN JOIN_A  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_3MAP_BUSCA_GRATUIDADE_REGIM MAP_BUSCA_GRATUIDADE_REGIM_A  
    ON  MAP_BUSCA_GRATUIDADE_REGIM_A.CODCOLIGADA        = JOIN_A.CODCOLIGADA_3 
AND MAP_BUSCA_GRATUIDADE_REGIM_A.CODCLIENTE        = JOIN_A.CODFINANC
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_4MAP_BUSCA_TIPOGRAT MAP_BUSCA_TIPOGRAT_A  
    ON  MAP_BUSCA_TIPOGRAT_A.CODCOLIGADA        = JOIN_A.CODCOLIGADA_3 
AND MAP_BUSCA_TIPOGRAT_A.CODCLIENTE       = JOIN_A.TIPOGRAT
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_5MAP_CONTA_EJA MAP_CONTA_EJA_A  
    ON  MAP_CONTA_EJA_A.CODCOLIGADA_3             =  JOIN_A.CODCOLIGADA_2 
   AND MAP_CONTA_EJA_A.IDPERLET            = JOIN_A.IDPERLET_1 
   AND TRIM(MAP_CONTA_EJA_A.RA_1     )      = TRIM(JOIN_A.RA)
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_1MAP_BUSCA_NOME_MAE MAP_BUSCA_NOME_MAE_A  
    ON  MAP_BUSCA_NOME_MAE_A.CODIGO              = JOIN_A.CODPESSOA 
   and MAP_BUSCA_NOME_MAE_A.CODCOLIGADA       = JOIN_A.CODCOLIGADA_4 
   and MAP_BUSCA_NOME_MAE_A.RA             = JOIN_A.RA_2
  ) INLINE_VIEW  LEFT OUTER JOIN  (
SELECT 
  MAP_BUSCA_NOME_PAI_A.CODIGO AS CODIGO ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE1 AS TELEFONE1 ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE2 AS TELEFONE2 ,
  MAP_BUSCA_NOME_PAI_A.TELEFONE3 AS TELEFONE3 ,
  MAP_BUSCA_NOME_PAI_A.CODPESSOAPAI AS CODPESSOAPAI ,
  MAP_BUSCA_NOME_PAI_A.CODCOLIGADA AS CODCOLIGADA ,
  MAP_BUSCA_NOME_PAI_A.RA AS RA   
FROM 
  ODI_DDABI_EXEC.C$_0MAP_BUSCA_NOME_PAI MAP_BUSCA_NOME_PAI_A  
  ) MAP_BUSCA_NOME_PAI_A_1  
    ON  MAP_BUSCA_NOME_PAI_A_1.CODIGO               = INLINE_VIEW.CODPESSOA 
    and MAP_BUSCA_NOME_PAI_A_1.CODCOLIGADA      = INLINE_VIEW.CODCOLIGADA_4 
    and MAP_BUSCA_NOME_PAI_A_1.RA                = INLINE_VIEW.RA_2
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_2MAP_BUSCA_RESP_ACADEMICO MAP_BUSCA_RESP_ACADEMICO_A  
    ON  trim(MAP_BUSCA_RESP_ACADEMICO_A.RA)             = trim(INLINE_VIEW.RA) 
    and MAP_BUSCA_RESP_ACADEMICO_A.CODCOLIGADA  = INLINE_VIEW.CODCOLIGADA_2
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_7MAP_BUSCA_DADOS_EMPRESA_PA MAP_BUSCA_DADOS_EMPRESA_PA_A  
    ON  MAP_BUSCA_DADOS_EMPRESA_PA_A.CODIGO               = MAP_BUSCA_NOME_PAI_A_1.CODPESSOAPAI 
    AND MAP_BUSCA_DADOS_EMPRESA_PA_A.CODCOLIGADA   = INLINE_VIEW.CODCOLIGADA_2 
    AND MAP_BUSCA_DADOS_EMPRESA_PA_A.RA         = INLINE_VIEW.RA
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_8MAP_BUSCA_DADOS_EMPRESA_MA MAP_BUSCA_DADOS_EMPRESA_MA_A  
    ON  MAP_BUSCA_DADOS_EMPRESA_MA_A.CODIGO               = INLINE_VIEW.CODPESSOAMAE 
    AND MAP_BUSCA_DADOS_EMPRESA_MA_A.CODCOLIGADA   = INLINE_VIEW.CODCOLIGADA_2 
    AND MAP_BUSCA_DADOS_EMPRESA_MA_A.RA          = INLINE_VIEW.RA
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TEMPO DIM_TEMPO  
    ON  DIM_TEMPO.ID  =   INLINE_VIEW.DATA_CARGA 
--TO_CHAR(MAP_TABELAS_SGE_Rest.DTMATRICULA, 'RRRRMM')
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_9MAP_BUSCA_IND_PROD MAP_BUSCA_IND_PROD_A  
    ON  MAP_BUSCA_IND_PROD_A.DCR_ID       = INLINE_VIEW.COLIGADA||INLINE_VIEW.CR 
 and MAP_BUSCA_IND_PROD_A.ID   = DIM_TEMPO.ID  
 and MAP_BUSCA_IND_PROD_A.DTPMA_ID   =  case when (INLINE_VIEW.EBEP = 1 ) then 3 
                                               when (INLINE_VIEW.CODFINANC IN (2,3)) then 1   
                                               when (INLINE_VIEW.CODFINANC IN (1)) then 2 
                                               else 0 
                                          end
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_AMAP_BUSCA_IND_DN MAP_BUSCA_IND_DN_A  
    ON  MAP_BUSCA_IND_DN_A.DCR_ID        = INLINE_VIEW.COLIGADA||INLINE_VIEW.CR 
and MAP_BUSCA_IND_DN_A.ID       = DIM_TEMPO.ID  
and MAP_BUSCA_IND_DN_A.DTPMA_ID   =  case when (INLINE_VIEW.EBEP = 1 ) then 3 
                                               when (INLINE_VIEW.CODFINANC IN (2,3)) then 1   
                                               when (INLINE_VIEW.CODFINANC IN (1)) then 2 
                                               else 0 
                                          end
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_BMAP_BUSCA_IND_ATEND MAP_BUSCA_IND_ATEND_A  
    ON  MAP_BUSCA_IND_ATEND_A.DCR_ID                = INLINE_VIEW.COLIGADA||INLINE_VIEW.CR
   and MAP_BUSCA_IND_ATEND_A.ID                 = DIM_TEMPO.ID 
   --REVISAR A REGRA ABAIXO
   and MAP_BUSCA_IND_ATEND_A.DTPMA_ID           =  case when (INLINE_VIEW.EBEP = 1 ) then 3
                                                           when (INLINE_VIEW.CODFINANC IN (2,3)) then 1  
                                                           when (INLINE_VIEW.CODFINANC IN (1)) then 2
                                                           else 0
                                                      end
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_ALUNOS DIM_ALUNOS  
    ON  DIM_ALUNOS.RA                            = TRIM(INLINE_VIEW.RA) 
   AND DIM_ALUNOS.UNID_GPS_CODIGO_ORIGEM    = INLINE_VIEW.CODCOLIGADA_2 
   AND DIM_ALUNOS.FLAG_ATUAL                = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_SITUACAO_ALUNO DIM_SITUACAO_ALUNO  
    ON  DIM_SITUACAO_ALUNO.CODCOLIGADA           = INLINE_VIEW.CODCOLIGADA_8 
   AND DIM_SITUACAO_ALUNO.COD_ORIGEM_SGE  = INLINE_VIEW.CODSTATUS_2  
   and DIM_SITUACAO_ALUNO.FLAG_ATUAL   = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TIPOS_CLIENTES DIM_TIPOS_CLIENTES  
    ON  DIM_TIPOS_CLIENTES.COD_ORIGEM_SGE        =  INLINE_VIEW.CATEGORIA 
   AND DIM_TIPOS_CLIENTES.FLAG_ATUAL    = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TURMAS DIM_TURMAS  
    ON  TRIM(DIM_TURMAS.SIGLA_TURMA  )        = TRIM(INLINE_VIEW.CODTURMA_1) 
    AND DIM_TURMAS.COD_FILIAL_SGE        = INLINE_VIEW.CODFILIAL_1 
    AND DIM_TURMAS.ID_PERLET_SGE       = INLINE_VIEW.IDPERLET_1 
    AND DIM_TURMAS.FLAG_ATUAL          = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TURNOS DIM_TURNOS  
    ON  DIM_TURNOS.COD_ORIGEM_SGE      = INLINE_VIEW.CODTURNO_1  
   and DIM_TURNOS.COD_FILIAL      = INLINE_VIEW.CODFILIAL_5 
   and DIM_TURNOS.FLAG_ATUAL     = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_CURSOS_MODULOS DIM_CURSOS_MODULOS  
    ON  DIM_CURSOS_MODULOS.CURS_ID_SGE      = INLINE_VIEW.CODCURSO_3  
   and DIM_CURSOS_MODULOS.COD_GRADE      = INLINE_VIEW.CODGRADE 
   and DIM_CURSOS_MODULOS.FLAG_ATUAL      = 1
     )  LEFT OUTER JOIN  ODI_DDABI_EXEC.C$_CBI_SA1_TMP BI_SA1_TMP_A  
    ON  TRIM(BI_SA1_TMP_A.A1_CGC)                    = replace(translate(INLINE_VIEW.CNPJEMPRESA,'./-','  '),' ','')   
   and TRIM(BI_SA1_TMP_A.A1_CGC) is not null
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_CLIENTES DIM_CLIENTES  
    ON  BI_SA1_TMP_A.PES_ID                             = DIM_CLIENTES.ID
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_FILIAIS_SGE DIM_FILIAIS_SGE  
    ON  DIM_FILIAIS_SGE.COD_ORIGEM_SGE          = INLINE_VIEW.CODFILIAL_1 
   AND DIM_FILIAIS_SGE.COD_COLIGADA              = INLINE_VIEW.CODCOLIGADA_2 
   and DIM_FILIAIS_SGE.FLAG_ATUAL              = 1
     )  LEFT OUTER JOIN  DDA_BIDW.DIM_TIPOS_FINANCIAMENTO DIM_TIPOS_FINANCIAMENTO  
    ON  INLINE_VIEW.CODINTERNO = DIM_TIPOS_FINANCIAMENTO.CODINTERNO
and DIM_TIPOS_FINANCIAMENTO.FLAG_ATUAL = 1
where (1=1)
) S

) where demp_id = 2 and dt_id between 201804 and 201808 --and realizado_matricula_senai = 1
group by dt_id


select dt_id,sum(realizado_matricula), sum(realizado_eja), sum(realizado_matricula_senai)
from fat_educacao where demp_id = 4 and dt_id between 201804 and 201808 --and realizado_matricula_senai = 1
group by dt_id

--------------------------------------------------
-- Create table fato particionada
create table DDA_BIDW.FAT_EDUCACAO
(

  declaracao                   VARCHAR2(9),
  previsto_ah_mes_ant          NUMBER,
 -- ... outros campos
)
partition by range (DT_ID)
(
  partition BI_2008 values less than (200899)
    tablespace TS_BI_2008
    pctfree 5
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 64K
      minextents 1
      maxextents unlimited
    ),
  partition BI_2009 values less than (200999)
    tablespace TS_BI_2009
    pctfree 5
    initrans 1
    maxtrans 255
    storage
    (
      initial 64K
      next 64K
      minextents 1
      maxextents unlimited
    ),
  --- outras partições
);
-- Add comments to the columns 
comment on column DDA_BIDW.FAT_EDUCACAO.dalu_id
  is 'Retorna os ID dos alunos - origem: DDA_BIDW.DIM_ALUNOS.ID';

-- Create/Recreate indexes 
create bitmap index DDA_BIDW.EDUC_IND_ATEND_I on DDA_BIDW.FAT_EDUCACAO (IND_ATEND)
  nologging  local;

-- Grant/Revoke object privileges 
grant select on DDA_BIDW.FAT_EDUCACAO to BI_ADM;
grant select on DDA_BIDW.FAT_EDUCACAO to BI_CORPORATIVO;
------------------------------------------------------

-- criacao XML a partir de select no banco ------------------------------------


select
xmlelement("dr"
          ,xmlelement("uf",regexp_replace(gcoligada.estado,'[[:cntrl:]]',''))
                    ,(select xmlagg(xmlelement("curso"
                                              ,xmlelement("codCurso",regexp_replace(zcurso.codCurso,'[[:cntrl:]]',''))
                                              ,xmlelement("codServico",regexp_replace(zcurso.codservico,'[[:cntrl:]]',''))
                                              ,xmlelement("codTipoPortfolio",regexp_replace(zcurso.codtipoportfolio,'[[:cntrl:]]',''))
                                              ,xmlelement("codPortfolio",regexp_replace(zcurso.codportfolio,'[[:cntrl:]]',''))
                                              ,xmlelement("nomCurso",regexp_replace(zcurso.nomcurso,'[[:cntrl:]]',''))
                                              ,xmlelement("desCurso",regexp_replace(zcurso.desCurso,'[[:cntrl:]]',''))
                                              ,xmlelement("numCargaHorariaHora",regexp_replace(zcurso.numcargahorariahora,'[[:cntrl:]]',''))
                                              ,xmlelement("numCargaHorariaMinuto",regexp_replace(zcurso.numcargahorariaminuto,'[[:cntrl:]]',''))
                                              ,xmlelement("desCentroResp",regexp_replace(zcurso.descentroresp,'[[:cntrl:]]',''))
                                              ,xmlelement("indAtivo",regexp_replace(zcurso.indativo,'[[:cntrl:]]',''))
                                              ,(select xmlagg(xmlelement  ("unidade"
                                                                          ,xmlelement("codUnidade",regexp_replace(zunidade.codUnidade,'[[:cntrl:]]',''))
                                                                          ,(select xmlagg(xmlelement  ("turma"
                                                                                                      ,xmlelement("codTurma",regexp_replace(zturma.codTurma,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("codModalidade",regexp_replace(zturma.codModalidade,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("nomTurma",regexp_replace(zturma.nomTurma,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("datInicio",regexp_replace(zturma.datInicio,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("datTermino",regexp_replace(zturma.datTermino,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("numVagas",regexp_replace(zturma.numVagas,'[[:cntrl:]]',''))
                                                                                                      ,xmlelement("numCnpjInstituicaoParceira",regexp_replace(zturma.numCnpjInstituicaoParceira,'[[:cntrl:]]',''))
                                                                                                      ,(select xmlagg(xmlelement  ("matricula"
                                                                                                                                  ,xmlelement("codMatricula",regexp_replace(zmatricula.codMatricula,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indEbep",regexp_replace(zmatricula.indEbep,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indTempoIntegral",regexp_replace(zmatricula.indTempoIntegral,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indViravida",regexp_replace(zmatricula.indViravida,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codFinanciamento",regexp_replace(zmatricula.codFinanciamento,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codEscolaridade",regexp_replace(zmatricula.codEscolaridade,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codSituacao",regexp_replace(zmatricula.codSituacao,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("codVinculo",regexp_replace(zmatricula.codVinculo,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("datEfetivacaoMatricula",regexp_replace(zmatricula.datEfetivacaoMatricula,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("datEfetivacaoReconhecimento",regexp_replace(zmatricula.datEfetivacaoReconhecimento,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("datMovimentacao",regexp_replace(zmatricula.datMovimentacao,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("indExclusao",regexp_replace(zmatricula.indExclusao,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("numCnpjVinculo",regexp_replace(zmatricula.numCnpjVinculo,'[[:cntrl:]]',''))
                                                                                                                                  ,xmlelement("nomRazaoSocialIndustria",regexp_replace(zmatricula.nomRazaoSocialIndustria,'[[:cntrl:]]',''))
                                                                                                                                            ,(select xmlagg(xmlelement  ("estudante"
                                                                                                                                                                        ,xmlelement("codEstudante",regexp_replace(zestudante.codestudante,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomEstudante",regexp_replace(zestudante.nomestudante,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("datNascimento",regexp_replace(zestudante.datnascimento,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("sexo",regexp_replace(zestudante.sexo,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("desEmail",regexp_replace(zestudante.desemail,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numRegistroGeral",regexp_replace(zestudante.numregistrogeral,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("sigOrgaoExpedidor",regexp_replace(zestudante.sigorgaoexpedidor,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomPaiResp",regexp_replace(zestudante.nompairesp,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numTelefone",regexp_replace(zestudante.numtelefone,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numCelular",regexp_replace(zestudante.numcelular,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numCep",regexp_replace(zestudante.numcep,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("endLogradouro",regexp_replace(zestudante.endlogradouro,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("endComplemento",regexp_replace(zestudante.endcomplemento,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("endNumero",regexp_replace(zestudante.endnumero,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomBairro",regexp_replace(zestudante.nombairro,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("codEstadoCivil",regexp_replace(zestudante.codestadocivil,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("codMunicipio",regexp_replace(zestudante.codmunicipio,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomMae",regexp_replace(zestudante.nommae,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numCpf",regexp_replace(zestudante.numcpf,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("numNit",regexp_replace(zestudante.numnit,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("indBrasileiro",regexp_replace(zestudante.indbrasileiro,'[[:cntrl:]]',''))
                                                                                                                                                                        ,xmlelement("nomeResponsavelLegal",regexp_replace(zestudante.nomeresponsavellegal,'[[:cntrl:]]',''))
                                                                                                                                                                        )
                                                                                                                                                            )
                                                                                                                                              from (  select      codestudante,
                                                                                                                                                                  nomestudante,
                                                                                                                                                                  datnascimento,
                                                                                                                                                                  sexo,
                                                                                                                                                                  desemail,
                                                                                                                                                                  numregistrogeral,
                                                                                                                                                                  sigorgaoexpedidor,
                                                                                                                                                                  nompairesp,
                                                                                                                                                                  numtelefone,
                                                                                                                                                                  numcelular,
                                                                                                                                                                  numcep,
                                                                                                                                                                  endlogradouro,
                                                                                                                                                                  endcomplemento,
                                                                                                                                                                  endnumero,
                                                                                                                                                                  nombairro,
                                                                                                                                                                  codestadocivil,
                                                                                                                                                                  min(codmunicipio) codmunicipio,
                                                                                                                                                                  nommae,
                                                                                                                                                                  numcpf,
                                                                                                                                                                  numnit,
                                                                                                                                                                  indbrasileiro,
                                                                                                                                                                  nomeresponsavellegal,
                                                                                                                                                                  codturma,
                                                                                                                                                                  ra

                                                                                                                                                      from        rm.zfn_scae

                                                                                                                                                      group by    codestudante,
                                                                                                                                                                  nomestudante,
                                                                                                                                                                  datnascimento,
                                                                                                                                                                  sexo,
                                                                                                                                                                  desemail,
                                                                                                                                                                  numregistrogeral,
                                                                                                                                                                  sigorgaoexpedidor,
                                                                                                                                                                  nompairesp,
                                                                                                                                                                  numtelefone,
                                                                                                                                                                  numcelular,
                                                                                                                                                                  numcep,
                                                                                                                                                                  endlogradouro,
                                                                                                                                                                  endcomplemento,
                                                                                                                                                                  endnumero,
                                                                                                                                                                  nombairro,
                                                                                                                                                                  codestadocivil,
                                                                                                                                                                  nommae,
                                                                                                                                                                  numcpf,
                                                                                                                                                                  numnit,
                                                                                                                                                                  indbrasileiro,
                                                                                                                                                                  nomeresponsavellegal,
                                                                                                                                                                  codturma,
                                                                                                                                                                  ra
                                                                                                                                                    ) zestudante
                                                                                                                                              where zmatricula.codturma = zestudante.codturma
                                                                                                                                              and zmatricula.ra = zestudante.ra
                                                                                                                                              )
                                                                                                                                              ,(select xmlagg(xmlelement  ("disciplina"
                                                                                                                                                                          ,xmlelement("codDisciplina",regexp_replace(zfn_scae_disciplinas.coddisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,xmlelement("datEfetivacaoMatriculaDisciplina",regexp_replace(zfn_scae_disciplinas.datefetivacaomatdisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,xmlelement("datMovimentacaoDisciplina",regexp_replace(zfn_scae_disciplinas.datmovimentacaodisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,xmlelement("codSituacaoDisciplina",regexp_replace(zfn_scae_disciplinas.codsituacaodisciplina,'[[:cntrl:]]',''))
                                                                                                                                                                          ,(select xmlagg(xmlelement  ("tipoavaliacao"
                                                                                                                                                                                                      ,xmlelement("codTipoAvaliacao",regexp_replace(zsd.codtipoavaliacao,'[[:cntrl:]]',''))
                                                                                                                                                                                                      )
                                                                                                                                                                                          )
                                                                                                                                                                            from (  select      zfn_scae_disciplinas.tipoavaliacao codtipoavaliacao,
                                                                                                                                                                                                zfn_scae_disciplinas.ra,
                                                                                                                                                                                                zfn_scae_disciplinas.idturmadisc

                                                                                                                                                                                    from        rm.zfn_scae_disciplinas

                                                                                                                                                                                    group by    zfn_scae_disciplinas.tipoavaliacao,
                                                                                                                                                                                                zfn_scae_disciplinas.ra,
                                                                                                                                                                                                zfn_scae_disciplinas.idturmadisc
                                                                                                                                                                                  ) zsd
                                                                                                                                                                            where nvl(zsd.idturmadisc,1) = nvl(zfn_scae_disciplinas.idturmadisc,1)
                                                                                                                                                                            and zsd.ra = zfn_scae_disciplinas.ra
                                                                                                                                                                            )
                                                                                                                                                                          )
                                                                                                                                                              )
                                                                                                                                                from (  select      zfn_scae_disciplinas.coddisc coddisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade_matriculado datefetivacaomatdisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade datmovimentacaodisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.codstatus_mobilidade codsituacaodisciplina,
                                                                                                                                                                    zfn_scae_disciplinas.ra,
                                                                                                                                                                    zfn_scae_disciplinas.codturma,
                                                                                                                                                                    zfn_scae_disciplinas.idturmadisc

                                                                                                                                                        from        rm.zfn_scae_disciplinas

                                                                                                                                                        group by    zfn_scae_disciplinas.coddisc,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade_matriculado,
                                                                                                                                                                    zfn_scae_disciplinas.dtmobilidade,
                                                                                                                                                                    zfn_scae_disciplinas.codstatus_mobilidade,
                                                                                                                                                                    zfn_scae_disciplinas.ra,
                                                                                                                                                                    zfn_scae_disciplinas.codturma,
                                                                                                                                                                    zfn_scae_disciplinas.idturmadisc
                                                                                                                                                      ) zfn_scae_disciplinas
                                                                                                                                                where zmatricula.codturma = zfn_scae_disciplinas.codturma
                                                                                                                                                and zmatricula.ra = zfn_scae_disciplinas.ra
                                                                                                                                                )
                                                                                                                                  )
                                                                                                                      )
                                                                                                        from (  select      codMatricula,
                                                                                                                            indEbep,
                                                                                                                            indTempoIntegral,
                                                                                                                            indViravida,
                                                                                                                            codFinanciamento,
                                                                                                                            codEscolaridade,
                                                                                                                            codSituacao,
                                                                                                                            codVinculo,
                                                                                                                            datEfetivacaoMatricula,
                                                                                                                            datEfetivacaoReconhecimento,
                                                                                                                            datMovimentacao,
                                                                                                                            indExclusao,
                                                                                                                            numCnpjVinculo,
                                                                                                                            nomRazaoSocialIndustria,
                                                                                                                            idhabilitacaofilial,
                                                                                                                            idperlet,
                                                                                                                            codturma,
                                                                                                                            ra

                                                                                                                from        rm.zfn_scae

                                                                                                                group by    codMatricula,
                                                                                                                            indEbep,
                                                                                                                            indTempoIntegral,
                                                                                                                            indViravida,
                                                                                                                            codFinanciamento,
                                                                                                                            codEscolaridade,
                                                                                                                            codSituacao,
                                                                                                                            codVinculo,
                                                                                                                            datEfetivacaoMatricula,
                                                                                                                            datEfetivacaoReconhecimento,
                                                                                                                            datMovimentacao,
                                                                                                                            indExclusao,
                                                                                                                            numCnpjVinculo,
                                                                                                                            nomRazaoSocialIndustria,
                                                                                                                            idhabilitacaofilial,
                                                                                                                            idperlet,
                                                                                                                            codturma,
                                                                                                                            ra
                                                                                                              ) zmatricula
                                                                                                        where zmatricula.codturma = zturma.codturma
                                                                                                        and zmatricula.idhabilitacaofilial = zturma.idhabilitacaofilial
                                                                                                        and zmatricula.idperlet = zturma.idperlet
                                                                                                        )
                                                                                                      )
                                                                                          )
                                                                            from (  select    codturma,
                                                                                              codmodalidade,
                                                                                              nomturma,
                                                                                              nvl(datinicio,' ') datinicio,
                                                                                              nvl(dattermino,' ') dattermino,
                                                                                              numvagas,
                                                                                              numcnpjinstituicaoparceira,
                                                                                              idhabilitacaofilial,
                                                                                              idperlet

                                                                                    from      rm.zfn_scae

                                                                                    group by  codturma,
                                                                                              codmodalidade,
                                                                                              nomturma,
                                                                                              datinicio,
                                                                                              dattermino,
                                                                                              numvagas,
                                                                                              numcnpjinstituicaoparceira,
                                                                                              idhabilitacaofilial,
                                                                                              idperlet
                                                                                  ) zturma
                                                                            where zturma.idhabilitacaofilial = zunidade.idhabilitacaofilial
                                                                            and zturma.idperlet = zunidade.idperlet
                                                                            )
                                                                          )
                                                              )
                                                from (  select    codUnidade,
                                                                  idhabilitacaofilial,
                                                                  idperlet

                                                        from      rm.zfn_scae

                                                        group by  codunidade,
                                                                  idhabilitacaofilial,
                                                                  idperlet
                                                      ) zunidade
                                                where zunidade.idhabilitacaofilial = zcurso.idhabilitacaofilial
                                                and zunidade.idperlet = zcurso.idperlet
                                                )
                                            )
                                  )
                      from  ( select    codCurso,
                                        codServico,
                                        codTipoPortfolio,
                                        codPortfolio,
                                        nomCurso,
                                        desCurso,
                                        numCargaHorariaHora,
                                        numCargaHorariaMinuto,
                                        desCentroResp,
                                        indAtivo,
                                        idhabilitacaofilial,
                                        idperlet

                              from      rm.zfn_scae

                              group by  codCurso,
                                        codServico,
                                        codTipoPortfolio,
                                        codPortfolio,
                                        nomCurso,
                                        desCurso,
                                        numCargaHorariaHora,
                                        numCargaHorariaMinuto,
                                        desCentroResp,
                                        indAtivo,
                                        idhabilitacaofilial,
                                        idperlet
                            ) zcurso
                      )
).getclobval() dr
from rm.gcoligada
where gcoligada.codcoligada = 2
;
-------------------------------------------------------------------


--------- alteração UO na odi_tmp_uo_cr para Mantovani ------------

insert into dda_bi.ODS_TMP_UO_CR select 
                                     distinct nvl(t2.cr, t1.cr) cr, 
                                     nvl(t2.uo, t1.uo) uo, 
                                     t1.habilitacao, 
                                     t2.habilitacao_turma, 
                                     t2.codturma , 
                                     t1.coligada, 
                                     0 item_sit, 
                                     0 item_zip, 
                                     0 item_turma, 
                                     0 item_sit_turma 
                             from (select '1' tipo_1, shf.codcoligada         coligada, 
                                             shf.idhabilitacaofilial habilitacao, 
                                             sit.itemcontabil        cr, 
                                             shf.codccusto           uo, 
                                             sit.iditemcontabil   item_sit,   
                                             zmaf.iditemcontabil item_zip , 
                                             shf.codfilial 
                                        from dda_bi.ods_shabilitacaofilial        shf, 
                                             dda_bi.ods_zipmatrizdadosfinanceiros zmaf, 
                                             dda_bi.ods_sitemcontabilprotheus     sit 
                                       where shf.codcoligada = zmaf.CODCOLIGADA 
                                         and shf.idhabilitacaofilial = zmaf.IDHABILITACAOFILIAL 
                                         and SIT.CODCOLIGADA = zmaf.CODCOLIGADA 
                                         and SIT.IDITEMCONTABIL = zmaf.IDITEMCONTABIL 
                                         and shf.flag_atual = 1 
                                         and zmaf.flag_atual = 1 
                                         and sit.flag_atual = 1 
                                      ) t1, 
                                     (select distinct '2' tipo_2 , stur.codcoligada         coligada, 
                                                      stur.idhabilitacaofilial habilitacao_turma, 
                                                      case when stur.codcoligada = 2 then nvl(stup.codccustol,stur.codccusto)
                                                           else stur.codccusto  end         UO, 
                                                      stur.codccusto, 
                                                      stup.codccustol,
                                                      SIt.Itemcontabil         CR, 
                                                      stur.codturma, 
                                                      ztu.iditemcontabil item_turma, 
                                                      sit.itemcontabil    item_sit_turma 
                                        from dda_bi.ods_sitemcontabilprotheus    sit, 
                                             dda_bi.ods_zipturmadadosfinanceiros ztu, 
                                             dda_bi.ods_sturma                   stur, 
                                             dda_bi.ods_sturmacompl              stup
                                       where Ztu.CODCOLIGADA = SIT.CODCOLIGADA(+) 
                                         and Ztu.IDITEMCONTABIL = SIT.IDITEMCONTABIL(+) 
                                         and stur.CODCOLIGADA = ztu.CODCOLIGADA(+) 
                                         and stur.CODFILIAL = ztu.CODFILIAL(+) 
                                         and stur.CODTURMA = ztu.CODTURMA(+) 
                                         and stur.IDPERLET = ztu.IDPERLET(+)
                                         and stup.codcoligada(+) = stur.codcoligada
                                         and stup.codfilial(+) = stur.codfilial
                                         and stup.idperlet(+) = stur.idperlet
                                         and stup.codturma(+) = stur.codturma 
                                         and sit.flag_atual(+) = 1
                                         and ztu.flag_atual(+) = 1                                         
                                         and stur.flag_atual = 1  
                                         and stup.flag_atual(+) = 1  ) t2 
                               where t1.coligada = t2.coligada(+) 
                                 and t1.habilitacao = t2.habilitacao_turma(+)

-------------------------------------------------------------------
-- validação dos dados

-- tabela nova carregada
select * from dda_bidw.fat_educacao fat, dda_bidw.dim_unidades_org uo, dda_bidw.dim_turmas tur, dda_bidw.dim_centros_resp cr
where fat.duorg_id = uo.id
and   fat.dturm_id = tur.id
and   fat.dcr_id   = cr.id
and   fat.dt_id  >= 201801
and tur.sigla_turma in ('ECO-NR-2018-00761','ECO-NR-2018-00869','ECO-NR-2018-00883','ECO-NR-2018-00893')

-- tabela antiga bkp hml

select * from dda_bidw.fat_educacao_20181025 fat, dda_bidw.dim_unidades_org uo, dda_bidw.dim_turmas tur, dda_bidw.dim_centros_resp cr
where fat.duorg_id = uo.id
and   fat.dturm_id = tur.id
and   fat.dcr_id   = cr.id
and   fat.dt_id  >= 201801
and tur.sigla_turma in ('ECO-NR-2018-00761','ECO-NR-2018-00869','ECO-NR-2018-00883','ECO-NR-2018-00893')


----- analyse all tables statistics ----

select distinct 'analyze table ' || a.TABLE_NAME || ' compute statistics;'
  from all_tab_columns a
 where a.OWNER = 'DDA_BI'
--   and a.DATA_TYPE = 'VARCHAR2'
--   and a.DATA_LENGTH < 3995
   and a.TABLE_NAME like ('ODS_%') 


-- tabelas e seus relacionamentos

select 
a.table_name||' ('|| 
rtrim(max(decode(c.position,1,c.column_name))||','|| 
max(decode(c.position,2,c.column_name))||','|| 
max(decode(c.position,3,c.column_name))||','|| 
max(decode(c.position,4,c.column_name)),',')||') referencia '|| 
b.table_name||' ('|| rtrim(max(decode(d.position,1,d.column_name))||','|| 
max(decode(d.position,2,d.column_name))||','|| 
max(decode(d.position,3,d.column_name))||','|| 
max(decode(d.position,4,d.column_name)),',')||')' relacionamentos 
from 
user_constraints a, 
user_constraints b, 
user_cons_columns c, 
user_cons_columns d 
where 
a.r_constraint_name=b.constraint_name and 
a.constraint_name=c.constraint_name and 
b.constraint_name=d.constraint_name and 
a.constraint_type='R' and 
b.constraint_type in ('P', 'U') 
group by a.table_name, b.table_name 
order by 1;


-- fatos que fazem referencia a dimensao

select 
r.owner, 
r.table_name, 
r.constraint_name 
from 
user_constraints r, 
user_constraints o 
where 
r.r_owner = o.owner and 
r.r_constraint_name = o.constraint_name and 
o.constraint_type in ('P','U') and 
r.constraint_type = 'R' and 
o.table_name = 'NOME_DIMENSAO';


--- bi_merge_pck body 06/11/2018

/*CREATE OR REPLACE PACKAGE BODY "BI_MERGE_PCK" Is
  --
v_sql     varchar2(5000);
v_banco   varchar2(30) := '@BISTG';

  Procedure Fat_Dre_Bpd_Prc ( P_ANO IN NUMBER
                            , P_MES IN Number ) Is
  \***************************************************
    * Nome         : fat_dre_bpd_prc
    * Analista     : Luciano Machado
    * Desenvolvedor: Fernando Frizzo - Meta
    * Data criação : 30/06/2009
    * Objetivo     : Procedimento para geração das informações unificadas do boletim e dre.
    ****************************************************
    * Usuário alteração:           Data Alteração:
    * Motivo alteração:
    ***************************************************\
    Cursor cur_fat_dre( v_ano In Number
                      , v_mes In Number ) Is
      Select 0                           datv_id
           , 0                           dcli_id
           , dre.dcr_id                  dcr_id
           , dre.dcta_id                 dcta_id
           , dre.demp_id                 demp_id
           , 0                           dipr_id
           , 0                           dpro_id
           , dre.dt_id                   dt_id
           , dre.duorg_id                duorg_id
           , dre.pre_credito             pre_credito
           , dre.pre_debito              pre_debito
           , dre.rea_credito             rea_credito
           , dre.rea_debito              rea_debito
           , dre.pre_mes_ant_credito     pre_mes_ant_credito
           , dre.pre_mes_ant_debito      pre_mes_ant_debito
           , dre.rea_mes_ant_credito     rea_mes_ant_credito
           , dre.rea_mes_ant_debito      rea_mes_ant_debito
           , dre.pre_mes_ano_ant_credito pre_mes_ano_ant_credito
           , dre.pre_mes_ano_ant_debito  pre_mes_ano_ant_debito
           , dre.rea_mes_ano_ant_credito rea_mes_ano_ant_credito
           , dre.rea_mes_ano_ant_debito  rea_mes_ano_ant_debito
           , dre.natureza                natureza
           , dre.dcta_id                 dict_id
           , 'DRE'                       origem
           , dre.cr_lot                  cr_lot
           , dre.ind_prod                ind_prod
           , dre.dcgs_id                 dcgs_id
           , dre.ind_atend               ind_atend
           , dre.ind_dn                  ind_dn
           , dre.dpla_id                 dpla_id
           , dre.duorg_id || dre.dcr_id || dre.demp_id || dre.dt_id  Chave
           , 0 || 0 || dre.dcr_id || dre.dcta_id || dre.demp_id || 0 || 0
             || dre.dt_id || dre.duorg_id || dre.dcta_id || dre.dcgs_id || dre.dpla_id  Chave_Bsc
           , 0 dcli_pf
           , 0 dcli_pj
           , 0 idc_sge_hist
        From Fat_Dre    dre
           , Dim_Tempo  dt
       Where dt.id   = dre.dt_id
         And dt.ano  = nvl(v_ano, dt.ano)
         And dt.mes >= nvl(v_mes, dt.mes);
      --
      Type      c_fat_dre_type Is Table Of cur_fat_dre%Rowtype Index By Pls_Integer;
      c_fat_dre c_fat_dre_type;
      --
      Cursor cur_fat_bpd( v_ano In Number
                        , v_mes In Number ) Is
        Select bpd.datv_id               datv_id
             , bpd.dcli_id               dcli_id
             , bpd.dcr_id                dcr_id
             , 0                         dcta_id
             , bpd.demp_id               demp_id
             , bpd.dipr_id               dipr_id
             , bpd.dpro_id               dpro_id
             , bpd.dt_id                 dt_id
             , bpd.duorg_id              duorg_id
             , bpd.previsto              pre_credito
             , 0                         pre_debito
             , bpd.realizado             rea_credito
             , 0                         rea_debito
             , bpd.previsto_mes_ant      pre_mes_ant_credito
             , 0                         pre_mes_ant_debito
             , bpd.realizado_mes_ant     rea_mes_ant_credito
             , 0                         rea_mes_ant_debito
             , bpd.previsto_ano_mes_ant  pre_mes_ano_ant_credito
             , 0                         pre_mes_ano_ant_debito
             , bpd.realizado_ano_mes_ant rea_mes_ano_ant_credito
             , 0                         rea_mes_ano_ant_debito
             , 1                  natureza
             , bpd.dipr_id        dict_id
             , 'Produção Física'  origem
             , bpd.cr_lot         cr_lot
             , bpd.ind_prod       Ind_prod
             , bpd.dcgs_id        dcgs_Id
             , bpd.ind_atend      Ind_atend
             , bpd.ind_dn         Ind_dn
             , bpd.dpla_id        dpla_Id
             , bpd.duorg_Id || bpd.dcr_Id || bpd.demp_id || bpd.dt_id  Chave
             , bpd.datv_id || bpd.dcli_id || bpd.dcr_Id || 0 || bpd.demp_id
               || bpd.Dipr_Id || bpd.Dpro_Id || bpd.dt_Id || bpd.duorg_id
               || bpd.Dipr_Id || bpd.Dcgs_Id || bpd.dpla_Id    Chave_bsc
             , bpd.dclipf_id
             , bpd.dclipj_id
             , 0 idc_sge_hist
          From fat_boletim_producao bpd,
               dim_tempo            dt
         Where dt.id   = bpd.dt_id
           And dt.ano  = nvl(v_ano, dt.ano)
           And dt.mes >= nvl(v_mes, dt.mes)
           And bpd.origem not in ('SGE','GES')
           ;
    --
    Type       c_Fat_Bpd_Type Is Table Of cur_fat_bpd%Rowtype Index By Pls_Integer;
    c_Fat_Bpd  c_Fat_Bpd_Type;
    --
    v_limite   Number := 20000;
    --
  Begin
    --
    popula_bi_dbger_pck.DESABILITA_INDICES_PRC('FAT_DRE_BPD');
    Bi_Util_Pck.exclusao_dados_prc('FAT_DRE_BPD', nvl(p_mes, 1), p_ano);
    --
    Open cur_fat_dre(p_ano, p_mes);
    Loop
      Fetch cur_fat_dre Bulk Collect Into c_fat_dre Limit v_limite;
      Forall indx In 1 .. c_fat_dre.Count
        Insert Into fat_dre_bpd
             Values c_fat_dre (indx);
      Commit;
      Exit When cur_fat_dre%Notfound;
    End Loop;
    Close cur_fat_dre;
    Commit;
    --
    Open cur_fat_bpd(p_ano, p_mes);
    Loop
      Fetch cur_fat_bpd Bulk Collect Into c_fat_bpd Limit v_limite;
      Forall ind In 1 .. c_fat_bpd.Count
        Insert Into fat_dre_bpd
             Values c_fat_bpd (ind);
      Commit;
      Exit When cur_fat_bpd%Notfound;
    End Loop;
    Close cur_fat_bpd;
    Commit;
    --
  Exception 
    when others then
      v_sql := 'begin  dda_bi.pla_gera_log_bi_prc'
                          ||v_banco
                          ||'(P_ERRO_SQL => sqlerrm, P_MSG => '
                          ||' ''Erro inesperado'', '
                          ||' P_TAB =>'
                          ||' ''FAT_DRE_BPD'' ,'
                          ||' P_CTB_PRE_ID => 0 ,
                              P_TIPO =>''INSERIR'' );
                end;';
      execute immediate v_sql;
      commit;
  End Fat_Dre_Bpd_Prc;
  --
  --
 Procedure Fat_Dre_Educ_Senai_Prc ( p_Ano In Number
                                   , p_Mes In Number ) Is
    \***************************************************
     * Nome         : FAT_DRE_EDUC_SENAI_PRC
     * Analista     : Carine dos Reis
     * Desenvolvedor: Carine dos Reis
     * Data criação : 30/11/2011
     * Objetivo     : Procedimento para geração das informações unificadas da educação e dre.
     ****************************************************
     * Usuário alteração:           Data Alteração:
     * Motivo alteração:
     ***************************************************\
    --
    v_Data_Inicio  Varchar2(4); --sis_aux_consolidado_scop.ano%Type;
    --
    Cursor cur_fat_dre( v_ano In Number
                      , v_mes In Number ) Is
      Select 0                                   dtpma_id
           , 0                                   dalu_id
           , 0                                   datv_id
           , 0                                   dcli_id
           , dre.dcr_id                          dcr_id
           , dre.dcta_id                         dcta_id
           , 0                                   dcurm_id
           , dre.demp_id                         demp_id
           , 0                                   dict_id
           , 0                                   dipr_id
           , 0                                   dpro_id
           , 0                                   drast_id
           , 0                                   dsial_id
           , 0                                   dturm_id
           , dre.dt_id                           dt_id
           , dre.duorg_id                        duorg_id
           , 'DRE'                               origem
           , dre.natureza                        natureza
           , to_date('01/01/1500','dd/mm/yyyy')  data_sistema
           , to_date('01/01/1500','dd/mm/yyyy')  data_ingresso
           , '-'                                  clientela_sesi
           , '-'                                  isento
           , '-'                                  gratuidade
           , '-'                                  baixa_renda
           , '-'                                  declaracao
           , dre.previsto                         previsto
           , dre.realizado                        realizado
           , dre.pre_credito                      pre_credito
           , dre.pre_debito                       pre_debito
           , dre.rea_credito                      rea_credito
           , dre.rea_debito                       rea_debito
           , dre.pre_mes_ant_credito              pre_mes_ant_credito
           , dre.pre_mes_ant_debito               pre_mes_ant_debito
           , dre.rea_mes_ant_credito              rea_mes_ant_credito
           , dre.rea_mes_ant_debito               rea_mes_ant_debito
           , dre.pre_mes_ano_ant_credito          pre_mes_ano_ant_credito
           , dre.pre_mes_ano_ant_debito           pre_mes_ano_ant_debito
           , dre.rea_mes_ano_ant_credito          rea_mes_ano_ant_credito
           , dre.rea_mes_ano_ant_debito           rea_mes_ano_ant_debito
           , dre.idc_ah                           idc_ah
           , dre.cr_lot                           cr_lot
           , dre.ind_prod                         ind_prod
           , 0                                    dst_id
           , dre.dcgs_id                          dcgs_id
           , dre.ind_atend                        ind_atend
           , dre.ind_dn                           ind_dn
           , dre.dpla_id                          dpla_id
           , dre.duorg_id || dre.dcr_id || dre.demp_id || dre.dt_id  Chave
           , 0 || 0 || 0 || 0 || dre.dcr_id || dre.dcta_id || 0 || dre.demp_id
             || 0 || 0 || 0 || 0 || 0 || 0 || dre.dt_id || dre.duorg_id
              || 0 || dre.dcgs_Id || dre.Dpla_Id   Chave_Bsc
            , 0
            , 0                                 entrada_nova
            , 0                                 entrada_residual
            , 0                                 entrada_transferencia
            , 0                                 entrada_trancamento
            , 0                                 saida_concluido
            , 0                                 saida_evadido
            , 0                                 saida_eliminado
            , 0                                 saida_trancado
            , 0                                 saida_transferido
            , 0                                 saida_residual
            , '-'                               TIPO_GRATUIDADE
            , 0                                 DDISC_ID
            , 0                                 DPRO_ID_INSTRUTOR
            , 0 dclipf_id
            , 0 dclipj_id
            , 0 dcr_turm_id
            ,0 idc_sge_hist
            ,'-' tipo_financiamento  
            ,0 realizado_fora_prazo_dia
            ,0 realizado_eja
            ,to_date('01/01/1900','dd/mm/yyyy') dt_carga 
            ,0 realizado_fora_prazo_mes  
            ,0 dfilsge_id 
            ,0 polo_mobilidade
            ,0 polo_id          
            ,'-'flag_polo_sede 
            ,'-'flag_mobilidade          
            ,0 sede_id           
            ,0 realizado_matricula_senai     
         From fat_dre    dre
            , dim_tempo  dt
        Where dt.id       = dre.dt_id
          And dre.demp_id = 4  -- TFS 22/02/2012
          And dt.ano      = nvl(v_ano, dt.ano)
          And dt.mes     >= nvl(v_mes, dt.mes);
      --
      Type      c_fat_dre_type Is Table Of cur_fat_dre%Rowtype Index By Pls_Integer;
      c_fat_dre c_fat_dre_type;
      --
      Cursor cur_fat_educ ( v_ano In Number
                          , v_mes In Number ) Is
        Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999998                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.previsto_ah                        previsto
             , educ.realizado_ah                       realizado
             , educ.previsto_ah                        pre_credito
             , 0                                       pre_debito
             , educ.realizado_ah                       rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999998 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                     DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
              ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai 
      
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4  -- TFS 22/02/2012
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
           And educ.previsto_ah + educ.realizado_ah != 0
Union All
        Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999999                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.Previsto_Matricula                 previsto
             , educ.Realizado_Matricula                realizado
             , educ.Previsto_Matricula                 pre_credito
             , 0                                       pre_debito
             , educ.Realizado_Matricula                rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999999 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id ||      educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id        Chave_Bsc
              , educ.em_andamento                     em_andamento
              , educ.entrada_nova                     entrada_nova
              , educ.entrada_residual                 entrada_residual
              , educ.entrada_transferencia            entrada_transferencia
              , educ.entrada_trancamento              entrada_trancamento
              , educ.saida_concluido                  saida_concluido
              , educ.saida_evadido                    saida_evadido
              , educ.saida_eliminado                  saida_eliminado
              , educ.saida_trancado                   saida_trancado
              , educ.saida_transferido                saida_transferido
              , educ.saida_residual                   saida_residual
              , educ.TIPO_GRATUIDADE                  TIPO_GRATUIDADE
              , educ.DDISC_ID                         DDISC_ID
              , educ.DPRO_ID_INSTRUTOR               DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
             ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai 
         From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4    -- TFS 22/02/2012
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
\*           And educ.entrada_nova + educ.entrada_residual + educ.entrada_transferencia + educ.entrada_trancamento +
               educ.saida_concluido + educ.saida_evadido + educ.saida_eliminado + educ.saida_trancado + educ.saida_transferido + educ.saida_residual +
               educ.previsto_matricula + educ.realizado_matricula != 0*\
 Union All
        Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999996                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.previsto_hh                        previsto
             , educ.realizado_hh                       realizado
             , educ.previsto_hh                        pre_credito
             , 0                                       pre_debito
             , educ.realizado_hh                       rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999996 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                    DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
             ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai 
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4    -- TFS 22/02/2012
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
           And educ.previsto_hh + educ.realizado_hh != 0
       Union All
       Select educ.dtpma_id                           dtpma_id

             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999997                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.previsto_atendimento               previsto
             , educ.realizado_atendimento              realizado
             , educ.previsto_atendimento               pre_credito
             , 0                                       pre_debito
             , educ.realizado_atendimento              rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999997 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                    DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
             ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai 
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4    -- TFS 22/02/2012
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
           And educ.previsto_atendimento + educ.realizado_atendimento + educ.em_andamento != 0
     uNION aLL
        Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999994                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.previsto_ensaios                   previsto
             , educ.ensaios                            realizado
             , educ.previsto_ensaios                   pre_credito
             , 0                                       pre_debito
             , educ.ensaios                            rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999994 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                    DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
             ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai   
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4    -- TFS 22/02/2012
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
           And educ.Ensaios + previsto_ensaios != 0
        union all
              Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999993                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.previsto_laudos                    previsto
             , educ.Relatorios                         realizado
             , educ.previsto_laudos                    pre_credito
             , 0                                       pre_debito
             , educ.Relatorios                         rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999993 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                    DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
              ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai  
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4    -- TFS 22/02/2012
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
           And educ.Relatorios + educ.previsto_laudos != 0
        union all
              Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 99999992                                dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , 0                                       previsto
             , educ.projetos                           realizado
             , 0                                       pre_credito
             , 0                                       pre_debito
             , educ.projetos                           rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 99999992 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                    DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
              ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai 
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id        = educ.dt_id
           And educ.demp_id = 4
           And dt.ano       = nvl(v_ano, dt.ano)
           And dt.mes      >= nvl(v_mes, dt.mes)
           And educ.Projetos  != 0

  -- disciplinas e instrutores
  Union All

        Select educ.dtpma_id                           dtpma_id
             , educ.dalu_id                            dalu_id
             , 0                                       datv_id
             , educ.dcli_id                            dcli_id
             , educ.dcr_id                             dcr_id
             , 0                                     dcta_id
             , educ.dcurm_id                           dcurm_id
             , educ.demp_id                            demp_id
             , 0                                       dict_id
             , 0                                       dipr_id
             , 0                                       dpro_id
             , educ.drast_id                           drast_id
             , educ.dsial_id                           dsial_id
             , educ.dturm_id                           dturm_id
             , educ.dt_id                              dt_id
             , educ.duorg_id                           duorg_id
             , 'PRODUÇÃO FISÍCA'                       origem
             -- ,'C'                                     natureza
             , 1                                       natureza
             , educ.data_sistema                       data_sistema
             , educ.data_ingresso                      data_ingresso
             , educ.clientela_sesi                     clientela_sesi
             , educ.isento                             isento
             , educ.gratuidade                         gratuidade
             , educ.baixa_renda                        baixa_renda
             , educ.declaracao                         declaracao
             , educ.previsto_hh                        previsto
             , educ.realizado_hh                       realizado
             , educ.previsto_hh                        pre_credito
             , 0                                       pre_debito
             , educ.realizado_hh                       rea_credito
             , 0                                       rea_debito
             , 0                                       pre_mes_ant_credito
             , 0                                       pre_mes_ant_debito
             , 0                                       rea_mes_ant_credito
             , 0                                       rea_mes_ant_debito
             , 0                                       pre_mes_ano_ant_credito
             , 0                                       pre_mes_ano_ant_debito
             , 0                                       rea_mes_ano_ant_credito
             , 0                                       rea_mes_ano_ant_debito
             , 'N'                                     idc_ah
             , educ.Cr_Lot                             cr_lot
             , educ.Ind_Prod                           ind_prod
             , educ.dst_Id                             dst_id
             , educ.dcgs_Id                            dcgs_id
             , educ.ind_Atend                          ind_atend
             , educ.ind_Dn                             ind_dn
             , educ.dpla_Id                            dpla_id
             , educ.Duorg_Id || educ.dcr_id || educ.demp_id || educ.dt_id  Chave
             , educ.dtpma_id || educ.dalu_id || 0 || educ.dcli_id || educ.dcr_id
               || 0 || educ.dcurm_id || educ.demp_id || 0 || 0
               || 0 || educ.drast_id || educ.dsial_id || educ.dturm_id
               || educ.dt_id || educ.duorg_id || educ.dst_Id
               || educ.dcgs_Id || educ.dpla_Id    Chave_Bsc
              , educ.em_andamento                 em_andamento
              , 0                                 entrada_nova
              , 0                                 entrada_residual
              , 0                                 entrada_transferencia
              , 0                                 entrada_trancamento
              , 0                                 saida_concluido
              , 0                                 saida_evadido
              , 0                                 saida_eliminado
              , 0                                 saida_trancado
              , 0                                 saida_transferido
              , 0                                 saida_residual
              , educ.TIPO_GRATUIDADE              TIPO_GRATUIDADE
              , educ.DDISC_ID                    DDISC_ID
              , educ.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
              , educ.dclipf_id
              , educ.dclipj_id
              , educ.DCR_TURM_ID
             ,educ.idc_sge_hist
              ,educ.tipo_financiamento  
              ,educ.realizado_fora_prazo_dia
              ,educ.realizado_eja 
              ,educ.dt_carga 
              ,educ.realizado_fora_prazo_mes   
              ,educ.dfilsge_id 
              ,educ.polo_mobilidade
              ,educ.polo_id               
              ,educ.flag_polo_sede           
              ,educ.flag_mobilidade
              ,educ.sede_id
              ,educ.realizado_matricula_senai 
                 
          From fat_educacao  educ
             , dim_tempo     dt
         Where dt.id          = educ.dt_id
           And educ.demp_id   = 4
           and 1 = 2
           And dt.ano         = nvl(v_ano, dt.ano)
           And dt.mes         >= nvl(v_mes, dt.mes)
           And educ.DDISC_ID  != 0

       ;
      --
      Type c_fat_educ_type Is Table Of cur_fat_educ%Rowtype Index By Pls_Integer;
      c_fat_educ c_fat_educ_type;
      --
      --
      v_limite Number := 20000;
      --
      Cursor c_ano Is
        Select Distinct dt.ano
          From dim_tempo  dt
         Where dt.ano >= v_data_inicio
         Order By dt.ano Asc;
      --
      v_Ano c_Ano%Rowtype;
      --
  Begin
    --
    Bi_Util_Pck.exclusao_dados_prc('FAT_DRE_EDUC', p_mes, p_ano, 4);
    --
    Open cur_fat_dre(p_ano, p_mes);
    Loop
      Fetch cur_fat_dre Bulk Collect
        Into c_fat_dre Limit v_limite;
      Forall indx In 1 .. c_fat_dre.Count
        Insert Into fat_dre_educ
             Values c_fat_dre (indx);
      Commit;
      Exit When cur_fat_dre%Notfound;
      --
    End Loop;
    Close cur_fat_dre;
    Commit;
    --
    Open cur_fat_educ (p_ano, p_mes);
    Loop
      Fetch cur_fat_educ Bulk Collect
        Into c_fat_educ Limit v_limite;
      Forall ind In 1 .. c_fat_educ.Count
        Insert Into fat_dre_educ
             Values c_fat_educ (ind);
      Commit;
      Exit When cur_fat_educ%Notfound;
      --
    End Loop;
    Close cur_fat_educ;
    Commit;
    --
  Exception 
    when others then
      v_sql := 'begin  dda_bi.pla_gera_log_bi_prc'
                          ||v_banco
                          ||'(P_ERRO_SQL => sqlerrm, P_MSG => '
                          ||' ''Erro inesperado'', '
                          ||' P_TAB =>'
                          ||' ''FAT_DRE_EDUC'' ,'
                          ||' P_CTB_PRE_ID => 0 ,
                              P_TIPO =>''INSERIR'' );
                end;';
      execute immediate v_sql;
      commit;

    --
  End Fat_Dre_Educ_Senai_Prc;
  --
  --
  --
  --
  Procedure Fat_Dre_Educ_Sesi_Prc ( p_Ano In Number
                                  , p_Mes In Number ) Is
    \***************************************************
      * Nome         : FAT_DRE_EDUC_SESI_PRC
      * Analista     : Tarso Ferraz da Silva
      * Desenvolvedor: Tarso Ferraz da Silva
      * Data criação : 15/02/2012
      * Objetivo     : Procedimento para geração das informações unificadas da educação SESI e dre.
      ****************************************************
      * Usuário alteração: tarso.silva         Data Alteração: 14/09/2012
      * Motivo alteração:  CAP: 10537          Num.: 001
      ***************************************************\
    Cursor Cur_Fat_Dre ( v_Ano In Number
                       , v_Mes In Number ) Is
      Select 0                    dtpma_id
           , 0                    dalu_id
           , dre_bpd.datv_id      datv_id
           , dre_bpd.dcli_id      dcli_id
           , dre_bpd.dcr_id       dcr_id
           , dre_bpd.dcta_id      dcta_Id
           , 0                    dcurm_Id
           , dre_bpd.demp_id      demp_Id
           , dre_bpd.dict_id      dict_Id
           , dre_bpd.dipr_id      dipr_Id
           , dre_bpd.dpro_id      dpro_Id
           , 0                    drast_Id
           , 0                    dsial_Id
           , 0                    dturm_id
           , dre_bpd.dt_id        dt_Id
           , dre_bpd.duorg_id     duorg_Id
--              ,'DRE_BPD'                            origem
           , dre_bpd.origem       origem
           , dre_bpd.natureza     natureza
           , to_date('01/01/1500', 'dd/mm/yyyy')  data_sistema
           , to_date('01/01/1500', 'dd/mm/yyyy')  data_ingresso
           , '-'                                  clientela_sesi
           , '-'                                  isento
           , '-'                                  gratuidade
           , '-'                                  baixa_renda
           , '-'                                  declaracao
           , dre_bpd.pre_credito                  previsto
--              ,dre_bpd.rea_credito                  realizado
           , case
               when dre_bpd.dipr_id = dtpma.pla_idp_id
                 and dre_bpd.origem = 'Produção Física'
                 then 0
               else dre_bpd.rea_credito
             End as realizado
           , dre_bpd.pre_credito     pre_credito
           , dre_bpd.pre_debito      pre_debito
--              ,dre_bpd.rea_credito                  rea_credito
           , Case
               When dre_bpd.dipr_id = dtpma.pla_idp_id
                 And dre_bpd.origem = 'Produção Física'
                 Then 0
               Else
                 dre_bpd.rea_credito
             End as rea_credito
--              ,dre_bpd.rea_debito                   rea_debito
           , Case
               When dre_bpd.dipr_id = dtpma.pla_idp_id
                 And dre_bpd.origem = 'Produção Física'
                 Then 0
               Else
                 dre_bpd.rea_debito
             End as rea_debito
           , dre_bpd.pre_mes_ant_credito       pre_mes_ant_credito
           , dre_bpd.pre_mes_ant_debito        pre_mes_ant_debito
           , dre_bpd.rea_mes_ant_credito       rea_mes_ant_credito
           , dre_bpd.rea_mes_ant_debito        rea_mes_ant_debito
           , dre_bpd.pre_mes_ano_ant_credito   pre_mes_ano_ant_credito
           , dre_bpd.pre_mes_ano_ant_debito    pre_mes_ano_ant_debito
           , dre_bpd.rea_mes_ano_ant_credito   rea_mes_ano_ant_credito
           , dre_bpd.rea_mes_ano_ant_debito    rea_mes_ano_ant_debito
           , 'N'                      idc_ah
           , dre_bpd.cr_lot           cr_lot
           , dre_bpd.ind_prod         ind_prod
           , 0                        dst_id
           , dre_bpd.dcgs_id          dcgs_id
           , dre_bpd.ind_atend        ind_atend
           , dre_bpd.ind_dn           ind_dn
           , dre_bpd.dpla_id          dpla_id
           , dre_bpd.duorg_id || dre_bpd.dcr_id || dre_bpd.demp_id || dre_bpd.dt_id  Chave
           , 0 || 0 || dre_bpd.datv_id || dre_bpd.dcli_id || dre_bpd.dcr_id || dre_bpd.dcta_id
             || 0 || dre_bpd.demp_id || dre_bpd.dict_id || dre_bpd.dipr_id || dre_bpd.dpro_id
             || 0 || 0 || 0 || dre_bpd.dt_id || dre_bpd.duorg_id || 0 || dre_bpd.dcgs_id
             || dre_bpd.dpla_id    Chave_Bsc
             , 0
             , 0                                 entrada_nova
             , 0                                 entrada_residual
             , 0                                 entrada_transferencia
             , 0                                 entrada_trancamento
             , 0                                 saida_concluido
             , 0                                 saida_evadido
             , 0                                 saida_eliminado
             , 0                                 saida_trancado
             , 0                                 saida_transferido
             , 0                                 saida_residual
             , '-'                               TIPO_GRATUIDADE
             , 0                                 DDISC_ID
             , 0                                 DPRO_ID_INSTRUTOR
             , dre_bpd.dclipf_id
             , dre_bpd.dclipj_id
             , 0 dcr_turm_id
              ,0 idc_sge_hist
            ,'-' tipo_financiamento  
            ,0 realizado_fora_prazo_dia
            ,0 realizado_eja
            ,to_date('01/01/1900','dd/mm/yyyy') dt_carga 
            ,0 realizado_fora_prazo_mes  
            ,0 dfilsge_id 
            ,0 polo_mobilidade
            ,0 polo_id          
            ,'-'flag_polo_sede 
            ,'-'flag_mobilidade          
            ,0 sede_id           
            ,0 realizado_matricula_senai 
        From fat_dre_bpd           dre_bpd
           , dim_tipos_matriculas  dtpma
           , dim_tempo             dt
       Where dre_bpd.dipr_id = dtpma.pla_idp_id(+)
         And dt.id           = dre_bpd.dt_id
         And dre_bpd.demp_id = 2
         And dt.ano          = nvl(v_Ano, dt.Ano)
         And dt.mes         >= nvl(v_Mes, dt.Mes);
      --
      Type      c_fat_dre_type Is Table Of cur_fat_dre%Rowtype Index By Pls_Integer;
      c_fat_dre c_fat_dre_type;
      --
      Cursor cur_fat_educ( v_ano In Number
                         , v_mes In Number ) Is
        Select fedu.dtpma_id              dtpma_id
             , fedu.dalu_id               dalu_id
             , 0                          datv_id
             , fedu.dcli_id               dcli_id
             , fedu.dcr_id                dcr_id
--              ,99999995                             dcta_id
             , 0                          dcta_id
             , fedu.Dcurm_Id              dcurm_id
             , fedu.Demp_Id               demp_id
             , nvl(dtpma.Pla_Idp_Id, 0)   dict_id
             , nvl(dtpma.Pla_Idp_Id, 0)   dipr_id
             , 0                         dpro_id
             , fedu.drast_Id             drast_id
             , fedu.dsial_Id             dsial_id
             , fedu.dturm_Id             dturm_id
             , fedu.dt_id                dt_id
             , fedu.duorg_Id             duorg_id
             , nvl(fedu.sistema_origem,'GES')  origem
--              ,'C'                                  natureza
             , 1                         natureza
             , fedu.data_sistema         data_sistema
             , fedu.data_ingresso        data_ingresso
             , fedu.clientela_sesi       clientela_sesi
             , fedu.isento               isento
             , fedu.gratuidade           gratuidade
             , fedu.baixa_renda          baixa_renda
             , fedu.declaracao           declaracao
             , 0                         previsto
             , Nvl(fedu.realizado_matricula, 0) + nvl(fedu.entr_disc_saida,0)  realizado
             , 0                       pre_credito
             , 0                       pre_debito
             , Nvl(fedu.realizado_matricula, 0) + nvl(fedu.entr_disc_saida,0)  rea_credito
             , 0                          rea_debito
             , 0                          pre_mes_ant_credito
             , 0                          pre_mes_ant_debito
             , 0                          rea_mes_ant_credito
             , 0                          rea_mes_ant_debito
             , 0                          pre_mes_ano_ant_credito
             , 0                          pre_mes_ano_ant_debito
             , 0                          rea_mes_ano_ant_credito
             , 0                          rea_mes_ano_ant_debito
             , 'N'                        idc_ah
             , fedu.cr_lot                cr_lot
             , fedu.ind_prod              ind_prod
             , fedu.dst_id                dst_id
             , fedu.dcgs_id               dcgs_id
             , fedu.ind_atend             ind_atend
             , fedu.ind_dn                ind_dn
             , fedu.dpla_id               dpla_id
             , fedu.duorg_id || fedu.dcr_id || fedu.demp_id || fedu.Dt_Id   Chave
             , fedu.dtpma_id || fedu.dalu_id || 0 || fedu.dcli_id || fedu.dcr_id
               || Nvl(dtpma.pla_idp_id, 0) || fedu.dcurm_id || fedu.demp_id
               || nvl(dtpma.pla_idp_id, 0) || nvl(dtpma.pla_idp_id, 0) || 0
               || fedu.drast_id || fedu.dsial_id || fedu.dturm_id || fedu.dt_id
               || fedu.duorg_id || fedu.dst_id || fedu.dcgs_id || fedu.dpla_id    Chave_Bsc ,
                0
             , 0                                 entrada_nova
             , 0                                 entrada_residual
             , 0                                 entrada_transferencia
             , 0                                 entrada_trancamento
             , 0                                 saida_concluido
             , 0                                 saida_evadido
             , 0                                 saida_eliminado
             , 0                                 saida_trancado
             , 0                                 saida_transferido
             , 0                                 saida_residual
             , fedu.TIPO_GRATUIDADE              TIPO_GRATUIDADE
             , fedu.DDISC_ID                     DDISC_ID
             , fedu.DPRO_ID_INSTRUTOR           DPRO_ID_INSTRUTOR
             , fedu.dclipf_id
             , fedu.dclipj_id
             , fedu.DCR_TURM_ID
            ,fedu.idc_sge_hist
              ,fedu.tipo_financiamento  
              ,fedu.realizado_fora_prazo_dia
              ,fedu.realizado_eja 
              ,fedu.dt_carga 
              ,fedu.realizado_fora_prazo_mes   
              ,fedu.dfilsge_id 
              ,fedu.polo_mobilidade
              ,fedu.polo_id               
              ,fedu.flag_polo_sede           
              ,fedu.flag_mobilidade
              ,fedu.sede_id
              ,fedu.realizado_matricula_senai 
         From fat_educacao          fedu,
               dim_tipos_matriculas  dtpma,
               dim_tempo             dt
         Where fedu.dtpma_id = dtpma.id(+)
           And dt.id         = fedu.dt_id
           And fedu.demp_id  = 2
           And dt.ano        = nvl(v_ano, dt.ano)
           And dt.mes       >= nvl(v_mes, dt.mes);
      --
      Type       c_fat_educ_type Is Table Of cur_fat_educ%Rowtype Index By Pls_Integer;
      c_fat_educ c_fat_educ_type;
      --
      v_limite Number := 20000;
      --
  Begin
    --
    Bi_Util_Pck.exclusao_dados_prc('FAT_DRE_EDUC', p_mes, p_ano, 2);
    --
    Open cur_fat_dre(p_ano, p_mes);
    Loop
      Fetch cur_fat_dre Bulk Collect Into c_fat_dre Limit v_limite;
      Forall indx In 1 .. c_fat_dre.Count
        Insert Into fat_dre_educ
             Values c_fat_dre (indx);
      Commit;
      Exit When cur_fat_dre%Notfound;
    End Loop;
    Close cur_fat_dre;
    --
    Commit;
    --
    Open Cur_Fat_Educ( p_ano, p_mes );
    Loop
      Fetch Cur_Fat_Educ Bulk Collect Into c_Fat_Educ Limit v_limite;
      Forall ind In 1 .. c_Fat_Educ.Count
        Insert Into Fat_Dre_Educ

             Values c_Fat_Educ (ind);
      Commit;
      Exit When cur_fat_educ%Notfound;
    End Loop;
    Close cur_fat_educ;
    --
    Commit;
    --
  Exception  
    when others then
      v_sql := 'begin  dda_bi.pla_gera_log_bi_prc'
                          ||v_banco
                          ||'(P_ERRO_SQL => sqlerrm, P_MSG => '
                          ||' ''Erro inesperado'', '
                          ||' P_TAB =>'
                          ||' ''FAT_DRE_EDUC'' ,'
                          ||' P_CTB_PRE_ID => 0 ,
                              P_TIPO =>''INSERIR'' );
                end;';
      execute immediate v_sql;
      commit;
    --
  End Fat_Dre_Educ_Sesi_Prc;
  --
  --
  Procedure Fat_Dre_Educacao_Prc( p_Ano   In Number
                                , p_Mes   In Number  ) Is
  Begin

    --
    popula_bi_dbger_pck.DESABILITA_INDICES_PRC('FAT_DRE_EDUC');
    -- Carga de dados DRE x SENAI
    Fat_Dre_Educ_Senai_Prc( p_Ano, p_Mes );
    -- Carga de dados DRE x SESI
    Fat_Dre_Educ_Sesi_Prc( p_Ano, p_Mes );
    --
    popula_bi_dbger_pck.REBUILD_INDICES_PRC('FAT_DRE_EDUC');
    --
  End Fat_Dre_Educacao_Prc;
  --
  Procedure Fat_Vendas_Bpd_Prc ( p_Ano In Number
                               , p_Mes In Number ) Is  
    \***************************************************
     * Nome         : fat_vendas_bpd
     * Analista     : Luciano Machado
     * Desenvolvedor: Fernando Frizzo - Meta
     * Data criação : 03/07/2009
     * Objetivo     : Procedimento para unificação das informações de vendas de boletim de produção
     ****************************************************
     * Usuário alteração: Luciano Machado           Data Alteração: 05/02/2010
     * Motivo alteração: Solicitação Força de Vendas
     ***************************************************\
    Cursor cur_fat_vendas( v_ano In Number
                         , v_mes In Number ) Is
      Select 0             datv_Id
           , fat.Dcli_Id   dcli_Id
           , fat.Dcr_Id    dcr_Id
           , fat.Dcta_Id   dcta_Id
           , fat.Demp_Id   demp_Id
           , fat.Dcta_Id   dict_Id
           , 0             dipr_Id
           , 0             dpro_Id
           , fat.Dt_Id     dt_id
           , fat.Duorg_Id  duorg_id
           , fat.Compulsorio  compulsorio
           , fat.receita_mercado_final  receita_mercado_final
           , fat.rec_merc_ano_ant       rec_merc_ano_ant
           , fat.rec_merc_mes_ant       rec_merc_mes_ant
           , fat.doc_ref                doc_ref
           , fat.data_lancamento        data_lancamento
           , nvl(fat.descricao_hist, '-')  descricao_hist
           , fat.compulsorio_ano_mes_ant   compulsorio_ano_mes_ant
           , fat.compulsorio_mes_ant       compulsorio_mes_ant
           , fat.idc_ah      idc_ah
           , 0               previsto
           , 0               realizado
           , 0               previsto_mes_ant
           , 0               realizado_mes_ant
           , 0               previsto_mes_ano_ant
           , 0               realizado_mes_ano_ant
           , 'Vendas'        origem
           , fat.empresas_atendidas
           , ddoc.tipo_documento tipo_documento
           , fat.duorg_id || fat.dcr_Id || fat.Demp_Id || fat.Dt_Id   Chave
           , 0 || fat.dcli_Id || fat.dcr_Id || fat.dcta_Id || fat.demp_Id
             || fat.dcta_Id || 0 || 0 || fat.dt_id || fat.duorg_id   Chave_Bsc
             , fat.dclipf_id
             , fat.dclipj_id
             , 0 dcgs_id
        From fat_vendas fat
           , dim_tempo  dt
           , dim_documento ddoc
       Where fat.dt_id = dt.id
         And fat.ddoc_id = ddoc.id
         --and 1 = 2 -- Luciano Machado ** Devido a publicação do ERP
         And dt.ano  = nvl(v_ano, dt.ano)
         And dt.mes >= nvl(v_mes, dt.mes)
       --  And fat.SALDO >= 0
         And fat.MOTVBX <> 'CAN'
         ;
    --
    Type      c_fat_ven_type Is Table Of cur_fat_vendas%Rowtype Index By Pls_Integer;
    c_fat_ven c_fat_ven_type;
    --
    Cursor cur_fat_bpd( v_ano In Number
                      , v_mes In Number ) Is
      Select bpd.datv_id    datv_id
           , bpd.dcli_id    dcli_id
           , bpd.dcr_id     dcr_id
           , 0              dcta_Id
           , bpd.demp_id    demp_Id
           , bpd.dipr_id    dict_Id
           , bpd.dipr_id    dipr_Id
           , bpd.dpro_id    dpro_Id
           , bpd.dt_id      dt_Id
           , bpd.duorg_id   duorg_id
           , 0      compulsorio
           , 0      receita_mercado_final
           , 0      rec_merc_ano_ant
           , 0      rec_merc_mes_ant
           , 'Boletim Produção'  doc_ref
           , Null   data_lancamento
           , 'Boletim Produção'  descricao_hist
           , 0      compulsorio_ano_mes_ant
           , 0      compulsorio_mes_ant
           , bpd.idc_ah       idc_ah
           , bpd.previsto     previsto
           , bpd.realizado    realizado
           , bpd.previsto_mes_ant      previsto_mes_ant
           , bpd.realizado_mes_ant     realizado_mes_ant
           , bpd.previsto_ano_mes_ant  previsto_mes_ano_ant
           , bpd.realizado_ano_mes_ant realizado_mes_ano_ant
           , decode(bpd.origem,'SGE','SGE','GES','GES','Produção Física')    Origem
           , bpd.empresas_atendidas
           , 'Boletim Produção'   tipo_documento
           , bpd.duorg_id || bpd.dcr_id || bpd.demp_id || bpd.dt_id  Chave
           , bpd.datv_id || bpd.dcli_id || bpd.dcr_id || 0 || bpd.demp_id
             || bpd.dipr_id || bpd.dipr_id || bpd.dpro_id || bpd.dt_id
             || bpd.duorg_id    Chave_Bsc
             , bpd.dclipf_id
             , bpd.dclipj_id
             , bpd.dcgs_id
        From fat_boletim_producao bpd,
             dim_tempo            dt
       Where bpd.dt_id = dt.id
         And dt.ano  = nvl(v_ano, dt.ano)
         And dt.mes >= nvl(v_mes, dt.mes);
    --
    Type      c_fat_bpd_type Is Table Of cur_fat_bpd%Rowtype Index By Pls_Integer;
    c_fat_bpd c_fat_bpd_type;
    --
    v_limite Constant Number := 20000;
    --
  Begin
    popula_bi_dbger_pck.desabilita_indices_prc('FAT_VENDAS_BPD');
    Bi_Util_Pck.exclusao_dados_prc('FAT_VENDAS_BPD', nvl(p_mes, 1), p_ano);
    --
    Open cur_fat_vendas(p_ano, p_mes);
    Loop
      Fetch cur_fat_vendas Bulk Collect Into c_fat_ven Limit v_limite;
      Forall indx In 1 .. c_fat_ven.Count
        Insert Into fat_vendas_bpd
             Values c_fat_ven (indx);
      Commit;
      Exit When cur_fat_vendas%Notfound;
    End Loop;
    Close cur_fat_vendas;
    --
    Commit;
    --
    Open cur_fat_bpd(p_ano, p_mes);
    Loop
      Fetch cur_fat_bpd Bulk Collect Into c_fat_bpd Limit v_Limite;
      Forall indx In 1 .. c_fat_bpd.Count
        Insert Into fat_vendas_bpd
             Values c_fat_bpd (indx);
      Commit;
      Exit When cur_fat_bpd%Notfound;
    End Loop;
    Close cur_fat_bpd;
    --
    Commit;
    --
        --INSERE DADOS NA FAT_VENDAS_BPD
    For r_cgs_dre In (Select f.rowid, nvl(pc.cgs_id, 0) cgs_id
                      From fat_vendas_bpd                f,
                           dim_tempo                     t,
                           Bi_Cds_Prm_Controle_Tmp@bistg pc,
                           Cds_Grupo_Serv@bistg          cgs
                      Where f.dt_id = t.id
                        and f.demp_id = 2
                        and f.dcr_id = pc.emp_cres_id
                        and pc.cgs_id = cgs.id
                        and cgs.pla_vis_id = 1
                        and t.ano = p_ano
                        and t.mes >= p_mes
                        and ((lpad(t.ano, 4, '000') ||
                              lpad(t.mes, 2, '0') between
                              lpad(to_char(pc.data_inicial, 'rrrrmm'),
                                           6,
                                           '00000') and
                              lpad(to_char(pc.data_final, 'rrrrmm'),
                                           6,
                                           '00000')) Or
                             (lpad(to_char(pc.data_final, 'rrrrmm'),
                                            6,
                                           '00000') is null and
                              lpad(t.ano, 4, '000') ||
                              lpad(t.mes, 2, '0') >=
                              lpad(to_char(pc.data_inicial, 'rrrrmm'),
                                           6,
                                           '00000')))) Loop
    Update fat_vendas_bpd fat
       Set fat.dcgs_id = r_cgs_dre.cgs_id
     Where fat.rowid = r_cgs_dre.rowid;
        --
    End Loop;
    Commit;    
        
    popula_bi_dbger_pck.REBUILD_INDICES_PRC('FAT_VENDAS_BPD');
  Exception
    When Others Then
      v_sql := 'begin  dda_bi.pla_gera_log_bi_prc'
                          ||v_banco
                          ||'(P_ERRO_SQL => sqlerrm, P_MSG => '
                          ||' ''Erro inesperado'', '
                          ||' P_TAB =>'
                          ||' ''FAT_VENDAS_BPD'' ,'
                          ||' P_CTB_PRE_ID => 0 ,
                              P_TIPO =>''INSERIR'' );
                end;';
      execute immediate v_sql;
      commit;  
  End Fat_Vendas_Bpd_Prc;
  
End Bi_Merge_Pck;

*/

--- validacao financeiro polo x sede

Select 'CRE_DEB',descricao,cod_mascara_descricao_1,(Case
         When Ccc.Natureza >= 1 Then
          Ccc.Rea_Credito - Ccc.Rea_Debito
         Else
          Ccc.Rea_Debito - Ccc.Rea_Credito
       End) As C5

  From (
        
        Select 'CRE_DEB'
               ,uo.descricao
               ,con.cod_mascara_descricao_1
               ,Sum(f.Natureza) Natureza
               ,Sum(Rea_Credito) Rea_Credito
               ,Sum(f.Rea_Debito) Rea_Debito
               ,0
          From Dda_Bidw.Fat_Dre_educ f
          Join Dda_Bidw.Dim_Tempo Dt 
            On f.Dt_Id = Dt.Id
           And Dt.Ano = 2018
           And Dt.Mes Between 1 And 9
          Join Dda_Bidw.Dim_Empresas Demp 
            On f.Demp_Id = Demp.Id
           And Demp.Descricao = 'SENAI'
          Join Dda_Bidw.Dim_Centros_Resp Dcr 
            On f.Dcr_Id = Dcr.Id
          Join dda_bidw.dim_unidades_org uo
            on f.duorg_id = uo.id
          join dda_bidw.dim_contas con
            on f.dcta_id = con.id
           where Dcr.Codigo_6 = '30202030110'
           and   DCR.CODIGO_7 = '30202030110004'
           and  con.codigo_1 in (1,2,7,9,10,98,99)
           group by uo.descricao,con.cod_mascara_descricao_1) Ccc
           
           
-- CONFERENCIA FINAL POLO SEDE
-- AMBIENTE DEV E PROD
-- PEGAR CASOS DE POLO E SEDE E COLOCAR NA PROXIMA CONSULTA QUE É A MAP_TABELAS_SGE

select /*fat.origem,*/ fat.duorg_id,/*fat.sede_id,*/ uo.codigo,uo.descricao, fat.flag_polo_sede,cur.flag_ead,fat.polo_id, fat.sede_id,/*fat.polo_id, polo.descricao,*/ sum(realizado_matricula_senai)
from fat_educacao fat, dim_unidades_org uo,/* dim_unidades_org polo, */dim_contas con, dim_centros_resp cr, dim_cursos_modulos cur--, fat_dre_educ dre, 
where-- fat.sede_id = to_char(uo.id(+))
--and   fat.polo_id = to_char(polo.id(+))
/*and*/   fat.dcta_id = con.id
and   fat.dcr_id  = cr.id
and   fat.duorg_id = uo.id
and   fat.dcurm_id = cur.id
and fat.demp_id = 4
--and   dre.polo_id = to_char(polo.id)
--and   fat.sede_id <> fat.polo_id
--and uo.id = 423030101007001 --223031401001500
--and fat.demp_id = 4 --2
--and fat.origem = 'DRE'
--and   cr.codigo_6 = 30202030110
--and   cr.codigo_7 = 30202030110004
--and   con.cod_mascara_1 = '99'
--and dre.origem = 'DRE'
--and fat.dt_id between '201801' and '201810'
--and uo.codigo = '23030101027001'
--and flag_polo_sede = 'S'
group by /*fat.origem,*/fat.duorg_id,/*fat.sede_id,*/uo.codigo, uo.descricao, fat.flag_polo_sede,cur.flag_ead,fat.polo_id, fat.sede_id/*, fat.polo_id, polo.descricao*/



select /*fat.origem,*//* fat.sede_id,*/fil.descricao, uo.descricao, /*fat.polo_id, polo.descricao,*/ count(*), sum(realizado_matricula_senai), sum(realizado_matricula) 
from dda_bidw.fat_educacao fat, dda_bidw.dim_unidades_org uo, /*dda_bidw.dim_unidades_org polo,*/ dda_bidw.dim_contas con, dda_bidw.dim_centros_resp cr, dda_bidw.dim_filiais_sge fil--, fat_dre_educ dre, 
where --fat.sede_id = to_char(uo.id)
--and   fat.polo_id = to_char(polo.id)
/*and*/   fat.dcta_id = con.id
and   fat.dcr_id  = cr.id
and   fat.duorg_id = uo.id
and   fat.dfilsge_id = fil.id_filial
--and   dre.polo_id = to_char(polo.id)
--and   fat.sede_id <> fat.polo_id
--and uo.id = 423030101007001 --223031401001500
--and fat.demp_id = 4 --2
--and fat.origem = 'DRE'
and   cr.codigo_6 = 30202030110
and   cr.codigo_7 = 30202030110004
--and   con.cod_mascara_1 = '99'
--and fat.origem = 'DRE'
and fat.dt_id between '201801' and '201809'
and fat.sistema_origem <> 'SIS/SGE-DN'
and fat.sistema_origem = 'SGE'
group by /*fat.origem,*//*fat.sede_id,*/ fil.descricao,uo.descricao--, fat.polo_id, polo.descricao

---------- outros do polo sede-------------------------------------------------------

select sum(realizado), sum(realizado_matricula_senai)
from dda_bidw.fat_dre_educ 
where (1=1)
--and dcta_id = 99999999 
and dcr_id = 430202030110004
and dt_id between '201801' and '201809'

select uo.id, uo.descricao,/* polo.id, polo.descricao,*/sum(realizado_matricula) , sum(realizado_matricula_senai)
from dda_bidw.fat_educacao fat, dda_bidw.dim_unidades_org uo--, dda_bidw.dim_unidades_org polo
where (1=1)
--and dcta_id = 99999999 
and fat.duorg_id = uo.id
--and fat.polo_id = polo.id
and dcr_id = 430202030110004
and dt_id between '201801' and '201809'
group by uo.id, uo.descricao--, polo.id, polo.descricao

select uo.id, uo.descricao, polo.id, polo.descricao, sum(realizado_matricula_senai)
from dda_bidw.fat_dre_educ fat, dda_bidw.dim_unidades_org uo, dim_unidades_org polo
where (1=1)
--and dcta_id = 99999999 
and fat.duorg_id = uo.id
and fat.polo_id = polo.id
and dcr_id = 430202030110004
and dt_id between '201801' and '201809'
group by uo.id, uo.descricao, polo.id, polo.descricao


select uo.id, uo.descricao, polo.id, polo.descricao, sum(realizado)
from dda_bidw.fat_dre_educ fat, dda_bidw.dim_unidades_org uo, dda_bidw.dim_centros_resp cr, dda_bidw.dim_unidades_org polo
where (1=1)
--and dcta_id = 99999999 
and fat.duorg_id = uo.id
and fat.dcr_id = cr.id
--and fat.polo_id = polo.id
and cr.codigo_6 = '30202030110'
and cr.codigo_7 = '30202030110004'
and fat.origem = 'DRE'
and dt_id between '201801' and '201809'
group by uo.id, uo.descricao, polo.id, polo.descricao


select duorg_id,sum(realizado) 
from dda_bidw.fat_dre_educ 
where (1=1)
--and origem = 'DRE'
and dt_id between '201801' and '201809'
and demp_id = 4
group by duorg_id


select *
from dda_bidw.fat_dre_educ fat, dda_bidw.dim_unidades_org uo--, dim_unidades_org polo
where (1=1)
--and dcta_id = 99999999 
and fat.duorg_id = uo.id
--and fat.polo_id = polo.id
--and uo.cod_mascara_6 = '30202030110'
and fat.origem = 'DRE'
and dt_id between '201801' and '201809'
--group by uo.id, uo.descricao/*, polo.id, polo.descricao*/


select * from dda_bidw.dim_centros_resp uo where uo.codigo_7 = '30202030110004'


select fat.origem,/* fat.sede_id,*/ uo.descricao, /*fat.polo_id, polo.descricao,*/ sum(realizado), sum(realizado_matricula_senai)
from dda_bidw.fat_dre_educ fat, dda_bidw.dim_unidades_org uo, /*dda_bidw.dim_unidades_org polo,*/ dda_bidw.dim_contas con, dda_bidw.dim_centros_resp cr--, fat_dre_educ dre, 
where --fat.sede_id = to_char(uo.id)
--and   fat.polo_id = to_char(polo.id)
/*and*/   fat.dcta_id = con.id
and   fat.dcr_id  = cr.id
and   fat.duorg_id = uo.id
--and   dre.polo_id = to_char(polo.id)
--and   fat.sede_id <> fat.polo_id
--and uo.id = 423030101007001 --223031401001500
--and fat.demp_id = 4 --2
--and fat.origem = 'DRE'
and   cr.codigo_6 = 30202030110
and   cr.codigo_7 = 30202030110004
--and   con.cod_mascara_1 = '99'
--and fat.origem = 'DRE'
and fat.dt_id between '201804' and '201809'
group by fat.origem,/*fat.sede_id,*/ uo.descricao--, fat.polo_id, polo.descricao




select /*fat.origem,*//* fat.sede_id,*/ uo.descricao, /*fat.polo_id, polo.descricao,*/ sum(realizado_matricula), sum(realizado_matricula_senai)
from dda_bidw.fat_educacao fat, dda_bidw.dim_unidades_org uo, /*dda_bidw.dim_unidades_org polo,*/ dda_bidw.dim_contas con, dda_bidw.dim_centros_resp cr--, fat_dre_educ dre, 
where --fat.sede_id = to_char(uo.id)
--and   fat.polo_id = to_char(polo.id)
/*and*/   fat.dcta_id = con.id
and   fat.dcr_id  = cr.id
and   fat.duorg_id = uo.id
--and   dre.polo_id = to_char(polo.id)
--and   fat.sede_id <> fat.polo_id
--and uo.id = 423030101007001 --223031401001500
--and fat.demp_id = 4 --2
--and fat.origem = 'DRE'
and   cr.codigo_6 = 30202030110
and   cr.codigo_7 = 30202030110004
--and   con.cod_mascara_1 = '99'
--and fat.origem = 'DRE'
and fat.dt_id between '201804' and '201809'
group by /*fat.origem,*//*fat.sede_id,*/ uo.descricao--, fat.polo_id, polo.descricao


select count(*), sum(realizado_matricula_senai), sum(realizado_matricula) from dda_bidw.fat_educacao where dt_id >= 201804 and sistema_origem = 'SGE'

-- consulta Beth

select 'DRE', uo.descricao,sum(decode(f.natureza, -1, f.rea_debito - f.rea_credito, f.rea_credito - f.rea_debito)) realizado
, SUM(f.rea_debito), SUM(f.rea_credito)
, SUM( Case
                    When f.natureza >= 1 Then
                      f.rea_credito - f.rea_debito
                    Else
                     f.rea_debito - f.rea_credito
                  End) As C5
 from dda_bidw.fat_dre f
 JOIN DDA_BIDW.DIM_TEMPO DT
  ON F.DT_ID = DT.ID
 AND DT.ANO = 2018
 AND DT.MES BETWEEN 1 AND 9
 JOIN DDA_BIDW.DIM_EMPRESAS DEMP
   ON F.DEMP_ID = DEMP.ID
  AND DEMP.DESCRICAO = 'SENAI'
 JOIN DDA_BIDW.DIM_CENTROS_RESP DCR
   ON F.DCR_ID = DCR.ID
 join dda_bidw.dim_unidades_org uo
 on f.duorg_id = uo.id
 where DCR.COD_MASCARA_DESCRICAO_6 = '30202030110 HABILITACAO PROFISSIONAL TEC EAD'
 and   DCR.CODIGO_7 = '30202030110004'
  GROUP BY /*f.natureza,*/ uo.descricao
  
  
  
Select 'CRE_DEB',descricao,cod_mascara_descricao_1,(Case
         When Ccc.Natureza >= 1 Then
          Ccc.Rea_Credito - Ccc.Rea_Debito
         Else
          Ccc.Rea_Debito - Ccc.Rea_Credito
       End) As C5

  From (
        
        Select 'CRE_DEB'
               ,uo.descricao
               ,con.cod_mascara_descricao_1
               ,Sum(f.Natureza) Natureza
               ,Sum(Rea_Credito) Rea_Credito
               ,Sum(f.Rea_Debito) Rea_Debito
               ,0
          From Dda_Bidw.Fat_Dre_educ f
          Join Dda_Bidw.Dim_Tempo Dt 
            On f.Dt_Id = Dt.Id
           And Dt.Ano = 2018
           And Dt.Mes Between 1 And 9
          Join Dda_Bidw.Dim_Empresas Demp 
            On f.Demp_Id = Demp.Id
           And Demp.Descricao = 'SENAI'
          Join Dda_Bidw.Dim_Centros_Resp Dcr 
            On f.Dcr_Id = Dcr.Id
          Join dda_bidw.dim_unidades_org uo
            on f.duorg_id = uo.id
          join dda_bidw.dim_contas con
            on f.dcta_id = con.id
           where Dcr.Codigo_6 = '30202030110'
           and   DCR.CODIGO_7 = '30202030110004'
           and  con.codigo_1 in (1,2,7,9,10,98,99)
           group by uo.descricao,con.cod_mascara_descricao_1) Ccc
           
union all

Select 'SOMA_REALIZADO',descricao,realizado As C5

  From (
        
        Select 'SOMA_REALIZADO'
               ,uo.descricao
               ,0--Sum(f.Natureza) Natureza
               ,0--Sum(Rea_Credito) Rea_Credito
               ,0--Sum(f.Rea_Debito) Rea_Debito
               ,sum(realizado)realizado
          From Dda_Bidw.Fat_Dre_educ f
          Join Dda_Bidw.Dim_Tempo Dt 
            On f.Dt_Id = Dt.Id
           And Dt.Ano = 2018
           And Dt.Mes Between 1 And 9
          Join Dda_Bidw.Dim_Empresas Demp 
            On f.Demp_Id = Demp.Id
           And Demp.Descricao = 'SENAI'
          Join Dda_Bidw.Dim_Centros_Resp Dcr 
            On f.Dcr_Id = Dcr.Id
          Join dda_bidw.dim_unidades_org uo
            on f.duorg_id = uo.id
           where Dcr.Codigo_6 = '30202030110'
           and   DCR.CODIGO_7 = '30202030110004'
           and  f.origem = 'DRE'
           group by uo.descricao) Ccc
           
           
           
           
Select 'CRE_DEB',descricao,cod_mascara_descricao_1,(Case
         When Ccc.Natureza >= 1 Then
          Ccc.Rea_Credito - Ccc.Rea_Debito
         Else
          Ccc.Rea_Debito - Ccc.Rea_Credito
       End) As C5

  From (
        
        Select 'CRE_DEB'
               ,uo.descricao
               ,con.cod_mascara_descricao_1
               ,Sum(f.Natureza) Natureza
               ,Sum(Rea_Credito) Rea_Credito
               ,Sum(f.Rea_Debito) Rea_Debito
               ,0
          From Dda_Bidw.Fat_educacao f
          Join Dda_Bidw.Dim_Tempo Dt 
            On f.Dt_Id = Dt.Id
           And Dt.Ano = 2018
           And Dt.Mes Between 3 And 9
          Join Dda_Bidw.Dim_Empresas Demp 
            On f.Demp_Id = Demp.Id
           And Demp.Descricao = 'SENAI'
          Join Dda_Bidw.Dim_Centros_Resp Dcr 
            On f.Dcr_Id = Dcr.Id
          Join dda_bidw.dim_unidades_org uo
            on f.duorg_id = uo.id
          join dda_bidw.dim_contas con
            on f.dcta_id = con.id
           where Dcr.Codigo_6 = '30202030110'
           and   DCR.CODIGO_7 = '30202030110004'
           and  con.codigo_1 in (1,2,7,9,10,98,99)
           group by uo.descricao,con.cod_mascara_descricao_1) Ccc         



  Select sum(realizado_matricula_senai)
          From Dda_Bidw.Fat_dre_educ f
          Join Dda_Bidw.Dim_Tempo Dt 
            On f.Dt_Id = Dt.Id
           And Dt.Ano = 2018
           And Dt.Mes Between 1 And 9
          Join Dda_Bidw.Dim_Empresas Demp 
            On f.Demp_Id = Demp.Id
           And Demp.Descricao = 'SENAI'
          Join Dda_Bidw.Dim_Centros_Resp Dcr 
            On f.Dcr_Id = Dcr.Id
          Join dda_bidw.dim_unidades_org uo
            on f.duorg_id = uo.id
          join dda_bidw.dim_contas con
            on f.dcta_id = con.id
           where Dcr.Codigo_6 = '30202030110'
           and   DCR.CODIGO_7 = '30202030110004'
           and  con.codigo_1 in (1,2,7,9,10,98,99)
           --group by uo.descricao,con.cod_mascara_descricao_1

-------------------------------------------------------------------------------------


-- MAP-TABELAS_SGE PARA VALIDACAO DO POLO E SEDE  DE ACORDO COM AS INFORMACOES DA CONSULTA ANTERIOR
-- USA A MESMA REGRA DA FLAG POLO SEDE DA CARGA DA FATO EDUCACAO

-- 
select codccusto turma, codccusto_1 habi, codccusto_stdisc turmadisc, case when (CODCCUSTO is null and CODCCUSTO_stdisc is null and CODCCUSTO_1 is not null)
                                                                                then 'S'
                                                                                when (CODCCUSTO is not null and CODCCUSTO_stdisc is null and CODCCUSTO_1 is not null and CODCCUSTO = CODCCUSTO_1) 
                                                                                then 'S'
                                                                                when (CODCCUSTO_stdisc is not null and CODCCUSTO_1 is not null and CODCCUSTO_stdisc = CODCCUSTO_1)
                                                                                then 'S'     
                                                                                else 'P'
                                                                                end flag_polo_sede from (
SELECT 
  ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCCUSTO AS CODCCUSTO ,
  ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL AS DTINICIAL ,
  ODS_STURMA_MAP_TABELAS_SGE.DTFINAL AS DTFINAL ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODGRADE AS CODGRADE ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_2 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET AS IDPERLET_1 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.RA AS RA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA AS CODTURMA_1 ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.CODSTATUSRES AS CODSTATUSRES ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA AS DTMATRICULA ,
  ODS_SMATRICPL_MAP_TABELAS_SGE.RECMODIFIEDON AS RECMODIFIEDON_2 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA AS CODCOLIGADA_3 ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.BAIXARENDA AS BAIXARENDA ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CATEGORIA AS CATEGORIA ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.EBEP AS EBEP ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.GRATUIDADE AS GRATUIDADE ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CODFINANC AS CODFINANC ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.TIPOGRAT AS TIPOGRAT ,
  ODS_SMATRICPLCOMPL_MAP_TABELAS.CNPJEMPRESA AS CNPJEMPRESA ,
  ODS_SALUNO_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_4 ,
  ODS_SALUNO_MAP_TABELAS_SGE.RA AS RA_2 ,
  ODS_SALUNO_MAP_TABELAS_SGE.CODPESSOA AS CODPESSOA ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NOME AS NOME_1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.DTNASCIMENTO AS DTNASCIMENTO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NACIONALIDADE AS NACIONALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.RUA AS RUA ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NUMERO AS NUMERO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.BAIRRO AS BAIRRO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.ESTADO AS ESTADO ,
  ODS_PPESSOA_MAP_TABELAS_SGE.CIDADE AS CIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.CEP AS CEP ,
  ODS_PPESSOA_MAP_TABELAS_SGE.PAIS AS PAIS ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE1 AS TELEFONE1 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE2 AS TELEFONE2 ,
  ODS_PPESSOA_MAP_TABELAS_SGE.NATURALIDADE AS NATURALIDADE ,
  ODS_PPESSOA_MAP_TABELAS_SGE.TELEFONE3 AS TELEFONE3 ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA AS CODCOLIGADA_6 ,
  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCCUSTO AS CODCCUSTO_1 ,
  ODS_SSTATUS_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_8 ,
  ODS_SSTATUS_MAP_TABELAS_SGE.CODSTATUS AS CODSTATUS_2 ,
  ODS_SCURSO_MAP_TABELAS_SGE.CODCURSO AS CODCURSO_3 ,
  ODS_STURNO_MAP_TABELAS_SGE.CODTURNO AS CODTURNO_1 ,
  ODS_STURNO_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_5 ,
  OTIVOALTMAT_MAP_TABELAS_SGE.DESCRICAO AS DESCRICAO_6 ,
  (CASE WHEN ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA <= ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL
      THEN TO_CHAR(ODS_STURMA_MAP_TABELAS_SGE.DTINICIAL,'YYYYMM')
      ELSE TO_CHAR(ODS_SMATRICPL_MAP_TABELAS_SGE.DTMATRICULA,'YYYYMM')
END) AS DATA_CARGA ,
  ODS_STURMACOMPL_MAP_TABELAS__1.CODCCUSTOL AS CODCCUSTOL ,
  ODS_STURMACOMPL_MAP_TABELAS__1.CODCOLIGADA AS CODCOLIGADA_STUCPL ,
  ODS_STURMADISC_MAP_TABELAS_S_1.CODCCUSTO_1 AS CODCCUSTO_STDISC ,
  ODS_TMP_UO_CR.CR AS CR ,
  ODS_TMP_UO_CR.UO AS UO ,
  ODS_TMP_UO_CR.COLIGADA AS COLIGADA   
FROM 
  (((((((((((DDA_BI.ODS_STURMA ODS_STURMA_MAP_TABELAS_SGE  INNER JOIN  ((DDA_BI.ODS_SGRADE ODS_SGRADE_MAP_TABELAS_SGE  INNER JOIN  (((((DDA_BI.ODS_SMATRICPL ODS_SMATRICPL_MAP_TABELAS_SGE  INNER JOIN  DDA_BI.ODS_SMATRICPLCOMPL ODS_SMATRICPLCOMPL_MAP_TABELAS  
    ON  ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA                        = ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA
   AND ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET                       = ODS_SMATRICPLCOMPL_MAP_TABELAS.IDPERLET
   AND ODS_SMATRICPL_MAP_TABELAS_SGE.IDHABILITACAOFILIAL            = ODS_SMATRICPLCOMPL_MAP_TABELAS.IDHABILITACAOFILIAL
   AND TRIM(ODS_SMATRICPL_MAP_TABELAS_SGE.RA)                       = TRIM(ODS_SMATRICPLCOMPL_MAP_TABELAS.RA)
   and ODS_SMATRICPL_MAP_TABELAS_SGE.FLAG_ATUAL                     = 1
   and ODS_SMATRICPLCOMPL_MAP_TABELAS.FLAG_ATUAL                = 1
     )  INNER JOIN  DDA_BI.ODS_SALUNO ODS_SALUNO_MAP_TABELAS_SGE  
    ON  ODS_SALUNO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
   AND ODS_SALUNO_MAP_TABELAS_SGE.RA                                = ODS_SMATRICPL_MAP_TABELAS_SGE.RA
   and ODS_SALUNO_MAP_TABELAS_SGE.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_PPESSOA ODS_PPESSOA_MAP_TABELAS_SGE  
    ON  ODS_PPESSOA_MAP_TABELAS_SGE.CODIGO                          = ODS_SALUNO_MAP_TABELAS_SGE.CODPESSOA 
and ODS_PPESSOA_MAP_TABELAS_SGE.FLAG_ATUAL                       = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOALUNO ODS_SHABILITACAOALUNO_MAP_TABE  
    ON  ODS_SHABILITACAOALUNO_MAP_TABE.CODCOLIGADA            = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
AND ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL    = ODS_SMATRICPL_MAP_TABELAS_SGE.IDHABILITACAOFILIAL
AND ODS_SHABILITACAOALUNO_MAP_TABE.RA                     = ODS_SMATRICPL_MAP_TABELAS_SGE.RA
and ODS_SHABILITACAOALUNO_MAP_TABE.FLAG_ATUAL             = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAOFILIAL ODS_SHABILITACAOFILIAL_MAP_TAB  
    ON  ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA           = ODS_SHABILITACAOALUNO_MAP_TABE.CODCOLIGADA 
AND ODS_SHABILITACAOFILIAL_MAP_TAB.IDHABILITACAOFILIAL   = ODS_SHABILITACAOALUNO_MAP_TABE.IDHABILITACAOFILIAL 
AND ODS_SHABILITACAOFILIAL_MAP_TAB.FLAG_ATUAL = 1
     )  
    ON  ODS_SGRADE_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODCURSO                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCURSO 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODHABILITACAO                    = ODS_SHABILITACAOFILIAL_MAP_TAB.CODHABILITACAO 
   AND ODS_SGRADE_MAP_TABELAS_SGE.CODGRADE                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODGRADE 
   and ODS_SGRADE_MAP_TABELAS_SGE.FLAG_ATUAL                        = 1
     )  INNER JOIN  DDA_BI.ODS_SHABILITACAO ODS_SHABILITACAO_MAP_TABELAS_S  
    ON  ODS_SHABILITACAO_MAP_TABELAS_S.CODCOLIGADA                = ODS_SGRADE_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SHABILITACAO_MAP_TABELAS_S.CODHABILITACAO              = ODS_SGRADE_MAP_TABELAS_SGE.CODHABILITACAO 
AND ODS_SHABILITACAO_MAP_TABELAS_S.CODCURSO                    = ODS_SGRADE_MAP_TABELAS_SGE.CODCURSO 
and ODS_SHABILITACAO_MAP_TABELAS_S.FLAG_ATUAL            = 1
     )  
    ON  ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA                    = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
   AND ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL                      = ODS_SMATRICPL_MAP_TABELAS_SGE.CODFILIAL 
   AND ODS_STURMA_MAP_TABELAS_SGE.IDPERLET                       = ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET 
   AND ODS_STURMA_MAP_TABELAS_SGE.CODTURMA                       = ODS_SMATRICPL_MAP_TABELAS_SGE.CODTURMA 
   and ODS_STURMA_MAP_TABELAS_SGE.FLAG_ATUAL                     = 1
     )  INNER JOIN  DDA_BI.ODS_STURMACOMPL ODS_STURMACOMPL_MAP_TABELAS__1  
    ON  ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA = ODS_STURMACOMPL_MAP_TABELAS__1.CODCOLIGADA
and   ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL = ODS_STURMACOMPL_MAP_TABELAS__1.CODFILIAL
and   ODS_STURMA_MAP_TABELAS_SGE.IDPERLET = ODS_STURMACOMPL_MAP_TABELAS__1.IDPERLET
and   ODS_STURMA_MAP_TABELAS_SGE.CODTURMA = ODS_STURMACOMPL_MAP_TABELAS__1.CODTURMA
and   ODS_STURMACOMPL_MAP_TABELAS__1.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SSTATUS ODS_SSTATUS_MAP_TABELAS_SGE  
    ON  ODS_SSTATUS_MAP_TABELAS_SGE.CODCOLIGADA                      = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SSTATUS_MAP_TABELAS_SGE.CODSTATUS                        = ODS_SMATRICPL_MAP_TABELAS_SGE.CODSTATUS 
AND ODS_SSTATUS_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SPLETIVO ODS_SPLETIVO_MAP_TABELAS_SGE  
    ON  ODS_SPLETIVO_MAP_TABELAS_SGE.CODCOLIGADA                     = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SPLETIVO_MAP_TABELAS_SGE.IDPERLET                        = ODS_SMATRICPL_MAP_TABELAS_SGE.IDPERLET 
and ODS_SPLETIVO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SFILIAL ODS_SFILIAL_MAP_TABELAS_SGE  
    ON  ODS_SFILIAL_MAP_TABELAS_SGE.CODCOLIGADA                      = ODS_SPLETIVO_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_SFILIAL_MAP_TABELAS_SGE.CODFILIAL                        = ODS_SPLETIVO_MAP_TABELAS_SGE.CODFILIAL 
and ODS_SFILIAL_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_SCURSO ODS_SCURSO_MAP_TABELAS_SGE  
    ON  ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAO_MAP_TABELAS_S.CODCOLIGADA 
AND ODS_SCURSO_MAP_TABELAS_SGE.CODCURSO                          = ODS_SHABILITACAO_MAP_TABELAS_S.CODCURSO 
AND ODS_SCURSO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  INNER JOIN  DDA_BI.ODS_STIPOCURSO ODS_STIPOCURSO_MAP_TABELAS_SGE  
    ON  ODS_STIPOCURSO_MAP_TABELAS_SGE.CODCOLIGADA                   = ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA 
AND ODS_STIPOCURSO_MAP_TABELAS_SGE.CODTIPOCURSO                  = ODS_SCURSO_MAP_TABELAS_SGE.CODTIPOCURSO 
and ODS_STIPOCURSO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_GCONSIST ODS_GCONSIST_MAP_TABELAS_SGE  
    ON  ODS_GCONSIST_MAP_TABELAS_SGE.CODCOLIGADA               = ODS_SMATRICPLCOMPL_MAP_TABELAS.CODCOLIGADA 
AND ODS_GCONSIST_MAP_TABELAS_SGE.CODCLIENTE                 = ODS_SMATRICPLCOMPL_MAP_TABELAS.CATEGORIA 
AND ODS_GCONSIST_MAP_TABELAS_SGE.CODTABELA                  = 'SCATEGORIA' 
and ODS_GCONSIST_MAP_TABELAS_SGE.FLAG_ATUAL                 = 1
     )  INNER JOIN  DDA_BI.ODS_STURNO ODS_STURNO_MAP_TABELAS_SGE  
    ON  ODS_STURNO_MAP_TABELAS_SGE.CODCOLIGADA                       = ODS_SHABILITACAOFILIAL_MAP_TAB.CODCOLIGADA 
AND ODS_STURNO_MAP_TABELAS_SGE.CODTURNO                          = ODS_SHABILITACAOFILIAL_MAP_TAB.CODTURNO 
AND ODS_STURNO_MAP_TABELAS_SGE.FLAG_ATUAL = 1
     )  LEFT OUTER JOIN  DDA_BI.ODS_SMOTIVOALTMAT OTIVOALTMAT_MAP_TABELAS_SGE  
    ON  OTIVOALTMAT_MAP_TABELAS_SGE.CODCOLIGADA         = ODS_SMATRICPL_MAP_TABELAS_SGE.CODCOLIGADA
   AND OTIVOALTMAT_MAP_TABELAS_SGE.CODMOTIVO            = ODS_SMATRICPL_MAP_TABELAS_SGE.CODMOTIVOTRANSFERENCIA
   and OTIVOALTMAT_MAP_TABELAS_SGE.FLAG_ATUAL            = 1
     )  LEFT OUTER JOIN  (
SELECT 
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA ,
  max(ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC) AS IDTURMADISC ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA AS CODTURMA ,
  ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET AS IDPERLET ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO AS CODCCUSTO ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA AS CODCOLIGADA_1 ,
  (max(ODS_STURMADISC_MAP_TABELAS_SGE.IDTURMADISC)) AS IDTURMADISC_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL AS CODFILIAL_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA AS CODTURMA_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET AS IDPERLET_1 ,
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO AS CODCCUSTO_1   
FROM 
  DDA_BI.ODS_STURMADISC ODS_STURMADISC_MAP_TABELAS_SGE  
WHERE
  (ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO is not null
and ODS_STURMADISC_MAP_TABELAS_SGE.FLAG_ATUAL = 1
) 
GROUP BY
  ODS_STURMADISC_MAP_TABELAS_SGE.CODCOLIGADA,ODS_STURMADISC_MAP_TABELAS_SGE.CODFILIAL,ODS_STURMADISC_MAP_TABELAS_SGE.CODTURMA,ODS_STURMADISC_MAP_TABELAS_SGE.IDPERLET,ODS_STURMADISC_MAP_TABELAS_SGE.CODCCUSTO 
  ) ODS_STURMADISC_MAP_TABELAS_S_1  
    ON  ODS_STURMADISC_MAP_TABELAS_S_1.CODCOLIGADA_1 = ODS_STURMA_MAP_TABELAS_SGE.CODCOLIGADA
and ODS_STURMADISC_MAP_TABELAS_S_1.CODFILIAL_1 = ODS_STURMA_MAP_TABELAS_SGE.CODFILIAL
and ODS_STURMADISC_MAP_TABELAS_S_1.IDPERLET_1 = ODS_STURMA_MAP_TABELAS_SGE.IDPERLET
and ODS_STURMADISC_MAP_TABELAS_S_1.CODTURMA_1 = ODS_STURMA_MAP_TABELAS_SGE.CODTURMA
     )  LEFT OUTER JOIN  DDA_BI.ODS_TMP_UO_CR ODS_TMP_UO_CR  
    ON  ODS_SCURSO_MAP_TABELAS_SGE.CODCOLIGADA                = ODS_TMP_UO_CR.COLIGADA
  and ODS_STURMA_MAP_TABELAS_SGE.IDHABILITACAOFILIAL  = ODS_TMP_UO_CR.HABILITACAO             
  and ODS_STURMACOMPL_MAP_TABELAS__1.CODTURMA             = nvl(ODS_TMP_UO_CR.CODTURMA,ODS_STURMACOMPL_MAP_TABELAS__1.CODTURMA)
     )  where /*codccusto = codccusto_1 and */codccusto_1 = 23030101013001


-- query validada final isoladas

-- ULTIMA VERSAO PARA COLOCAR NO ODI
SELECT CODCOLIGADA,
                       IDHABILITACAOFILIAL,
                       CODTURMA,
                       codFinanciamento,
                       CODCOLIGADA_MATRICPL,
                       TIPOGRAT,
                       IDPERLET,
                       RA,
                       CODPESSOA,
                       EBEP,
                       CODSTATUS1,
                       CODSTATUSRES,
                       CATEGORIA,
                       CODTURNO,
                       CODFILIAL,
                       CODCURSO,
                       CODGRADE,
                       CNPJEMPRESA,
                       CR,
                       NATURALIDADE,
                       nome,
                       DTNASCIMENTO,
                       NACIONALIDADE,
                       cep,
                       RUA,                                       
                       NUMERO,
                       BAIRRO,
                       ESTADO,
                       CIDADE,
                       PAIS,
                       TELEFONE1,
                       TELEFONE2,
                       TELEFONE3,
                       BAIXARENDA,
                       GRATUIDADE,
                       RECMODIFIEDON_SMATRICPL,
                       DTMATRICULA,
                       Descricao,
                       datInicio,
                       datTermino,
                       CODCCUSTO_TURMA,
                       DTTURMAMODIF,
                       CODCCUSTO_HABIL,
                       CODCCUSTOL,
                       CODCOLIGADA_STUCPL,
                       datEfetivacaoMatricula,
                       codSituacao,
                       DTALTMOB,
                       DTMATRICPLMODIF,
                       DTMOBDISCEJA
FROM (SELECT
                       CODCOLIGADA,
                       IDHABILITACAOFILIAL,
                       CODTURMA,
                       codFinanciamento,
                       CODCOLIGADA_MATRICPL,
                       TIPOGRAT,
                       IDPERLET,
                       RA,
                       CODPESSOA,
                       EBEP,
                       CODSTATUS1,
                       CODSTATUSRES,
                       CATEGORIA,
                       CODTURNO,
                       CODFILIAL,
                       CODCURSO,
                       CODGRADE,
                       CNPJEMPRESA,
                       CR,
                       NATURALIDADE,
                       nome,
                       DTNASCIMENTO,
                       NACIONALIDADE,
                       cep,
                       RUA,                                       
                       NUMERO,
                       BAIRRO,
                       ESTADO,
                       CIDADE,
                       PAIS,
                       TELEFONE1,
                       TELEFONE2,
                       TELEFONE3,
                       BAIXARENDA,
                       GRATUIDADE,
                       RECMODIFIEDON_SMATRICPL,
                       DTMATRICULA,
                       Descricao,
                       datInicio,
                       datTermino,
                       CODCCUSTO_TURMA,
                       DTTURMAMODIF,
                       CODCCUSTO_HABIL,
                       CODCCUSTOL,
                       CODCOLIGADA_STUCPL,
                       datEfetivacaoMatricula,
                       codSituacao,
                       DTALTMOB,
                       DTMATRICPLMODIF,
                       DTMOBDISCEJA ,
                        NVL(
                       CASE WHEN codSituacao IN ('1','17','24') THEN datEfetivacaoMatricula
                       WHEN codSituacao IN ('11','12','13') THEN datTermino
                       ELSE COALESCE(CMOBEST,DTALTMOB)
                       END,'') datMovimentacao
    FROM
        (
       

        /***********MATRICULA ISOLADA***********/

                SELECT STURMA.CODCOLIGADA,
                       SHABILITACAOFILIAL.IDHABILITACAOFILIAL,
                       STURMA.CODTURMA,
                       NVL(SMATRICPLCOMPL.CODFINANC,'') codFinanciamento,
                       SMATRICPL.CODCOLIGADA CODCOLIGADA_MATRICPL,
                       SMATRICPLCOMPL.TIPOGRAT,
                       SPLETIVO.IDPERLET, 
                       SMATRICPL.RA,
                       SALUNO.CODPESSOA,
                       NVL(SMATRICPLCOMPL.EBEP,'-') EBEP,
                       SMATRICPL.CODSTATUS,
                       MOBILIDADE_ISOLADA.CODSTATUS codstatus1,
                       SMATRICPL.CODSTATUSRES,
                       NVL(SMATRICPLCOMPL.CATEGORIA,'') CATEGORIA,
                       SHABILITACAOFILIAL.CODTURNO,
                       STURNO.CODFILIAL,
                       SCURSO.CODCURSO,
                       SGRADE.CODGRADE,
                       SMATRICPLCOMPL.CNPJEMPRESA,
                       SMATRICPL.CR CR,
                       PPESSOA.NATURALIDADE,
                       PPESSOA.NOME nome,
                       PPESSOA.DTNASCIMENTO DTNASCIMENTO,
                       PPESSOA.NACIONALIDADE NACIONALIDADE,
                       NVL(PPESSOA.CEP,'') cep,
                       NVL(PPESSOA.RUA,'') RUA,                                       
                       NVL(PPESSOA.NUMERO,'') NUMERO,
                       NVL(PPESSOA.BAIRRO,'') BAIRRO,
                       nvl(PPESSOA.ESTADO,'') ESTADO,
                       NVL(PPESSOA.CIDADE,'') CIDADE,
                       NVL(PPESSOA.PAIS,'') PAIS,
                       NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE1,' ', ''),'(',''),')',''),'-',''),'.',''),'') TELEFONE1,
                       NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,' ', ''),'(',''),')',''),'-',''),'.',''),'') TELEFONE2,
                       NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,' ', ''),'(',''),')',''),'-',''),'.',''),'') TELEFONE3,
                       SMATRICPLCOMPL.BAIXARENDA,
                       SMATRICPLCOMPL.GRATUIDADE,
                       Smatricpl.RECMODIFIEDON RECMODIFIEDON_SMATRICPL,
                       SMATRICPL.DTMATRICULA,
                       SMOTIVOALTMAT.Descricao,
                       to_char(STURMA.DTINICIAL,'yyyy-mm-dd') datInicio,
                       to_char(STURMA.DTFINAL,'yyyy-mm-dd') datTermino,
                       STURMA.CODCCUSTO CODCCUSTO_TURMA,
                       STURMA.RECMODIFIEDON DTTURMAMODIF,
                       SHABILITACAOFILIAL.CODCCUSTO CODCCUSTO_HABIL,
                       STURMACOMPL.CODCCUSTOL,
                       STURMACOMPL.CODCOLIGADA CODCOLIGADA_STUCPL,
                       NVL(TO_CHAR((CASE WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICULA.DTMATRICULA END),'YYYY-MM-DD'),'') datEfetivacaoMatricula,
                      COALESCE(
                      CASE WHEN (SELECT ESTADO FROM DDA_BI.ODS_GCOLIGADA WHERE CODCOLIGADA = 2) = 'PR' THEN
                                 CASE MOBILIDADE_ISOLADA.CODSTATUS   WHEN 30 THEN '22'
                                 WHEN 32 THEN '19'
                                 END
                       END,
           CASE MOBILIDADE_ISOLADA.CODSTATUS
                              WHEN 2  THEN '1'
                            WHEN 17 THEN '1'
                            WHEN 39 THEN '1'
                            WHEN 5  THEN '5'
                            WHEN 19 THEN '5'
                            WHEN 7  THEN '9'
                            WHEN 21 THEN '9'
                            WHEN 67 THEN '9'
                            WHEN 9  THEN '11'
                            WHEN 23 THEN '11'
                            WHEN 75 THEN '11'
                            WHEN 10 THEN '13'
                            WHEN 11 THEN '13'
                            WHEN 24 THEN '13'
                            WHEN 25 THEN '13'
                            WHEN 43 THEN '13'
                            WHEN 3  THEN '18'
                            WHEN 33 THEN '18'
                            WHEN 68 THEN '18'
                            WHEN 30 THEN '19'
                            WHEN 69 THEN '19'
                            WHEN 31 THEN '20'
                            WHEN 46 THEN '20'
                            WHEN 6  THEN '21'
                            WHEN 20 THEN '21'
                            WHEN 41 THEN '21'
                            WHEN 45 THEN '22'
                            WHEN 73 THEN '22'
                            WHEN 32 THEN '23'
                            WHEN 70 THEN '24'
                            WHEN 42 THEN '12'
                            WHEN 66 THEN '17'
                            WHEN 4 THEN  '1'
                            WHEN 18 THEN '1'
                            WHEN 40 THEN '1'
                            WHEN 63 THEN '12'
              END,'')  codSituacao,
                       TO_CHAR(CASE
                                   WHEN MOBILIDADE_ISOLADA.CODSTATUS IN ( 2, 17, 39, 66 )
                                   THEN (CASE WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN STURMA.DTINICIAL ELSE SMATRICULA.DTMATRICULA END)
                                   ELSE MOBILIDADE_ISOLADA.DTALTERACAO
                                END,'YYYY-MM-DD') DTALTMOB,

                        CASE WHEN SMATRICPLCOMPL.RECMODIFIEDON > SMATRICPL.RECMODIFIEDON THEN SMATRICPLCOMPL.RECMODIFIEDON
                        ELSE  SMATRICPL.RECMODIFIEDON END DTMATRICPLMODIF,
                          
                        MOBILIDADEDISCEJA.DTALTERACAO AS DTMOBDISCEJA  ,
                        TO_CHAR(SMATRICPLCOMPL.CMOBEST,'YYYY-MM-DD') CMOBEST
                      
        FROM ODS_SMATRICPL SMATRICPL
          INNER JOIN ODS_SMATRICULA SMATRICULA
              ON SMATRICULA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SMATRICULA.IDPERLET = SMATRICPL.IDPERLET
              AND SMATRICULA.RA = SMATRICPL.RA
              and smatricpl.flag_atual = 1
              and smatricula.flag_atual = 1
          INNER JOIN ODS_STURMADISC STURMADISC
              ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
              AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
              and sturmadisc.flag_atual = 1
          INNER JOIN ods_GCOLIGADA GCOLIGADA
              ON GCOLIGADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              and gcoligada.flag_atual = 1
          INNER JOIN ODS_SHABILITACAOFILIAL SHABILITACAOFILIAL
              ON SHABILITACAOFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              and SHABILITACAOFILIAL.FLAG_ATUAL = 1
          INNER JOIN ODS_SHABILITACAO SHABILITACAO
              ON SHABILITACAO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SHABILITACAO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SHABILITACAO.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              and SHABILITACAO.FLAG_ATUAL = 1
          LEFT JOIN ODS_SHABILITACAOCOMPL SHABILITACAOCOMPL
              ON SHABILITACAOCOMPL.CODCOLIGADA = SHABILITACAO.CODCOLIGADA
              AND SHABILITACAOCOMPL.CODCURSO = SHABILITACAO.CODCURSO
              AND SHABILITACAOCOMPL.CODHABILITACAO = SHABILITACAO.CODHABILITACAO
              and SHABILITACAOCOMPL.FLAG_ATUAL = 1
          INNER JOIN ODS_GFILIAL GFILIAL
              ON GFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND GFILIAL.CODFILIAL = SMATRICPL.CODFILIAL
              and GFILIAL.Flag_Atual = 1
          INNER JOIN ODS_SCURSO SCURSO
              ON SCURSO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SCURSO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              and SCURSO.Flag_Atual = 1
          INNER JOIN ODS_SCURSOCOMPL SCURSOCOMPL
            ON SCURSO.CODCOLIGADA = SCURSOCOMPL.CODCOLIGADA
            AND SCURSO.CODCURSO = SCURSOCOMPL.CODCURSO
            and SCURSOCOMPL.Flag_Atual = 1
          INNER JOIN ODS_STURMA STURMA
              ON STURMA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND STURMA.CODFILIAL = SMATRICPL.CODFILIAL
              AND STURMA.CODTURMA = STURMADISC.CODTURMA
              AND STURMA.IDPERLET = SMATRICPL.IDPERLET
              and STURMA.Flag_Atual = 1
          LEFT JOIN ODS_STURMACOMPL STURMACOMPL
              ON STURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
              AND STURMA.CODFILIAL = STURMACOMPL.CODFILIAL
              AND STURMA.CODTURMA = STURMACOMPL.CODTURMA
              AND STURMA.IDPERLET = STURMACOMPL.IDPERLET
              and STURMACOMPL.Flag_Atual = 1
           
                     -------------------------------------------------
           inner join dda_bi.ods_sfilial sfilial
              on sfilial.codcoligada = sturma.codcoligada
              and sfilial.codfilial  = sturma.codfilial
              and sfilial.flag_atual = 1
              
           inner join dda_bi.ods_stipocurso stipocurso
              on stipocurso.codcoligada = scurso.codcoligada
              and stipocurso.codtipocurso = scurso.codtipocurso
              and stipocurso.flag_atual = 1
              
           inner join dda_bi.ods_sturno sturno
              on sturno.codcoligada = shabilitacaofilial.codcoligada
              and sturno.codturno  = SHABILITACAOFILIAL.CODTURNO
              and sturno.flag_atual = 1
              
           inner join dda_bi.ods_sstatus sstatus
              on sstatus.codcoligada = smatricula.codcoligada
              and sstatus.codstatus = smatricula.codstatus
              and sstatus.flag_atual = 1
           
           left outer join dda_bi.ods_smotivoaltmat SMOTIVOALTMAT
             on smotivoaltmat.CODCOLIGADA         = SMATRICPL.CODCOLIGADA
   AND          smotivoaltmat.CODMOTIVO           = SMATRICPL.CODMOTIVOTRANSFERENCIA
   and          smotivoaltmat.FLAG_ATUAL          = 1
              
            
         ----------------------------------------------------------------------      
              
            
          INNER JOIN ODS_SPLETIVO SPLETIVO
              ON SPLETIVO.CODCOLIGADA = STURMA.CODCOLIGADA
              AND SPLETIVO.IDPERLET = STURMA.IDPERLET
              and SPLETIVO.Flag_Atual = 1
          LEFT JOIN ODS_GCCUSTO GCCUSTO
              ON GCCUSTO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND GCCUSTO.CODCCUSTO = SHABILITACAOFILIAL.CODCCUSTO
              and GCCUSTO.Flag_Atual = 1
          INNER JOIN ODS_SGRADE SGRADE
              ON SGRADE.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
              AND SGRADE.CODCURSO = SHABILITACAOFILIAL.CODCURSO
              AND SGRADE.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
              AND SGRADE.CODGRADE = SHABILITACAOFILIAL.CODGRADE
              and SGRADE.Flag_Atual = 1
          INNER JOIN ODS_SMATRICPLCOMPL SMATRICPLCOMPL
              ON SMATRICPL.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND SMATRICPL.IDPERLET = SMATRICPLCOMPL.IDPERLET
              AND SMATRICPL.RA = SMATRICPLCOMPL.RA
              AND SMATRICPL.IDHABILITACAOFILIAL = SMATRICPLCOMPL.IDHABILITACAOFILIAL
              and SMATRICPLCOMPL.Flag_Atual = 1
          LEFT JOIN ODS_GCONSIST EMPRESA
              ON EMPRESA.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
              AND EMPRESA.CODTABELA = 'SEMPRESA'
              AND EMPRESA.CODCLIENTE = SMATRICPLCOMPL.EMPRESA
              and EMPRESA.FLAG_ATUAL = 1
          INNER JOIN ODS_SALUNO SALUNO
              ON SALUNO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              and saluno.flag_atual = 1
              AND SALUNO.RA = SMATRICPL.RA
          INNER JOIN ODS_SALUNOCOMPL SALUNOCOMPL
              ON SALUNO.CODCOLIGADA = SALUNOCOMPL.CODCOLIGADA
              AND SALUNO.RA = SALUNOCOMPL.RA
              and SALUNOCOMPL.Flag_Atual = 1
          INNER JOIN ODS_SPESSOA SPESSOA
              ON SPESSOA.CODIGO = SALUNO.CODPESSOA
              and SPESSOA.Flag_Atual = 1
          INNER JOIN ODS_PPESSOA PPESSOA
              ON PPESSOA.CODIGO = SALUNO.CODPESSOA
              and PPESSOA.Flag_Atual =1
          LEFT JOIN ODS_PPESSOA MAE
              ON MAE.CODIGO = SPESSOA.CODPESSOAMAE
              and MAE.Flag_Atual = 1
          LEFT JOIN ODS_PPESSOA PAI
              ON PAI.CODIGO = SPESSOA.CODPESSOAPAI
              and PAi.Flag_Atual = 1
          LEFT JOIN ODS_ZSCAEMUNICIPIO ZSCAEMUNICIPIO
              ON UPPER(ZSCAEMUNICIPIO.MUNICIPIO) = UPPER(PPESSOA.CIDADE)
              AND ZSCAEMUNICIPIO.UF = PPESSOA.ESTADO
              and ZSCAEMUNICIPIO.Flag_Atual = 1
          LEFT JOIN ODS_FCFO RESPLEGAL
              ON RESPLEGAL.CODCOLIGADA = SALUNO.CODCOLCFO
              AND RESPLEGAL.CODCFO = SALUNO.CODCFO
              and RESPLEGAL.Flag_Atual = 1
          LEFT JOIN ODS_GCONSIST EMPRESATURMA
            ON  EMPRESATURMA.CODCOLIGADA  = STURMACOMPL.CODCOLIGADA
            AND EMPRESATURMA.CODTABELA    = 'SEMPRESA'
            AND EMPRESATURMA.CODCLIENTE   = STURMACOMPL.EMPRESAP
            and EMPRESATURMA.Flag_Atual = 1
          INNER JOIN ODS_ZSCAEMOBILIDADE_ISOLADA MOBILIDADE_ISOLADA
            ON  MOBILIDADE_ISOLADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
            AND MOBILIDADE_ISOLADA.RA = SMATRICPL.RA
            AND MOBILIDADE_ISOLADA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
            AND MOBILIDADE_ISOLADA.IDPERLET = SMATRICPL.IDPERLET
            and MOBILIDADE_ISOLADA.Flag_Atual = 1
          LEFT JOIN ODS_ZSCAEMOBILIDADE_RECSABERES MOBILIDADE_RECSABERES
              ON  MOBILIDADE_RECSABERES.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADE_RECSABERES.RA = SMATRICPL.RA
              AND MOBILIDADE_RECSABERES.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADE_RECSABERES.IDPERLET = SMATRICPL.IDPERLET
              and MOBILIDADE_RECSABERES.Flag_Atual = 1
          LEFT JOIN (
                SELECT
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET,
                MAX(ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO) AS DTALTERACAO

                FROM ODS_ZSCAEMOBILIDADE_DISCIPLINA ZSCAEMOBILIDADE_DISCIPLINA

                WHERE ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO BETWEEN '01/06/2018'/*vDATA1*/ AND '30/06/2018'/*vDATA2*/
                and ZSCAEMOBILIDADE_DISCIPLINA.Flag_Atual = 1
                
                GROUP BY
                ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                ZSCAEMOBILIDADE_DISCIPLINA.RA,
                ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET

                ) MOBILIDADEDISCEJA
              ON  MOBILIDADEDISCEJA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
              AND MOBILIDADEDISCEJA.RA = SMATRICPL.RA
              AND MOBILIDADEDISCEJA.IDHABILITACAOFILIAL = SMATRICPL.IDHABILITACAOFILIAL
              AND MOBILIDADEDISCEJA.IDPERLET = SMATRICPL.IDPERLET

        WHERE GCOLIGADA.CODCOLIGADA = 2/*vCODCOLIGADA*/
        AND   SMATRICULA.TIPODISCIPLINA = 'E'
        AND   MOBILIDADE_ISOLADA.CODSTATUS NOT IN ( 1, 16, 37, 38, 65, 13, 74 )
        AND   (MOBILIDADE_ISOLADA.CODSTATUS NOT IN ( 4, 18, 40 ) OR (MOBILIDADE_ISOLADA.DTALTERACAO > '01/06/2018'/*vDATA1*/ AND MOBILIDADE_ISOLADA.DTALTERACAO >= ADD_MONTHS(TO_DATE('01-'||TO_CHAR(STURMA.DTINICIAL,'MM')||'-'||(TO_CHAR(STURMA.DTINICIAL,'YYYY')),'DD-MM-YYYY'),1) ))


  ) TAB1

        GROUP BY       CODCOLIGADA,
                       IDHABILITACAOFILIAL,
                       CODTURMA,
                       codFinanciamento,
                       CODCOLIGADA_MATRICPL,
                       TIPOGRAT,
                       IDPERLET, 
                       RA,
                       CODPESSOA,
                       EBEP,
                       CODSTATUS1,
                       CODSTATUSRES,
                       CATEGORIA,
                       CODTURNO,
                       CODFILIAL,
                       CODCURSO,
                       CODGRADE,
                       CNPJEMPRESA,
                       CR,
                       NATURALIDADE,
                       nome,
                       DTNASCIMENTO,
                       NACIONALIDADE,
                       cep,
                       RUA,                                       
                       NUMERO,
                       BAIRRO,
                       ESTADO,
                       CIDADE,
                       PAIS,
                       TELEFONE1,
                       TELEFONE2,
                       TELEFONE3,
                       BAIXARENDA,
                       GRATUIDADE,
                       RECMODIFIEDON_SMATRICPL,
                       DTMATRICULA,
                       Descricao,
                       CODCCUSTO_TURMA,
                       DTTURMAMODIF,
                       CODCCUSTO_HABIL,
                       CODCCUSTOL,
                       CODCOLIGADA_STUCPL,
                       datEfetivacaoMatricula,
                      codSituacao, 
                     DTALTMOB,
                        DTMATRICPLMODIF,
                          
                        DTMOBDISCEJA ,
                     datInicio,
                       datTermino,
                         NVL(
                             CASE WHEN codSituacao IN ('1','17','24') THEN datEfetivacaoMatricula
                             WHEN codSituacao IN ('11','12','13') THEN datTermino
                             ELSE COALESCE(CMOBEST,DTALTMOB)
                             END,'')
    )FN_SCAE
WHERE ( ( ( EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DTALTMOB,'YYYY-MM-DD')) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM  TO_DATE(FN_SCAE.DTALTMOB,'YYYY-MM-DD')) = '2018'/*v_ANO_S*/) AND TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '30/06/2018'/*vDATA2*/ )
  OR  (   ( ( EXTRACT(MONTH FROM FN_SCAE.DTTURMAMODIF) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTTURMAMODIF) = '2018'/*v_ANO_S*/ ) AND ( TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '30/06/2018'/*vDATA2*/ AND TO_DATE(FN_SCAE.DATTERMINO,'YYYY-MM-DD') >= '01/06/2018'/*vDATA1*/ )  )
      OR  ( ( EXTRACT(MONTH FROM FN_SCAE.DTMATRICPLMODIF) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTMATRICPLMODIF) = '2018'/*v_ANO_S*/ ) AND ( TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD') <= '30/06/2018' /*vDATA2*/ AND TO_DATE(FN_SCAE.DATTERMINO,'YYYY-MM-DD') >= '01/06/2018'/*vDATA1*/ ) )
    )
  OR  ( ( EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD')) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM TO_DATE(FN_SCAE.DATINICIO,'YYYY-MM-DD')) = '2018'/*v_ANO_S*/ ) )
  OR  ( ( EXTRACT(MONTH FROM FN_SCAE.DTMOBDISCEJA) = '06'/*v_MES_S*/ AND EXTRACT(YEAR FROM FN_SCAE.DTMOBDISCEJA) = '2018'/*v_ANO_S*/ ) )
  );
  
select 'truncate table '||table_name||';'from user_tables where table_name like 'ODS%'

-- sql dinamico grant

select 'grant select, update, insert, delete on ' ||OBJECT_NAME||' to ODI_DDABI_EXEC with grant option; 'FROM USER_OBJECTS WHERE OBJECT_TYPE = 'TABLE' AND OBJECT_NAME LIKE 'ODS_%';

SELECT  'SELECT DISTINCT '||column_name||' from tabocorrencias order by 1;' 
FROM all_tab_columns WHERE table_name = 'TABOCORRENCIAS';

-- ver tamanho da temp

select sum(bytes)/1024/1024/1024 from v$tempfile

-- validacao isoladas na fat_educacao

select dt_id, sistema_origem, count(*) from dda_bidw.fat_educacao 
where /*sistema_origem = 'SGE' and*/ dt_id between 201804 and 201812
and flag_matricula_isolada = 'S' --and dt_carga is not null
group by dt_id, sistema_origem
order by dt_id

-- validacao isoladas na ods_tmp
select dt_carga, count(*) from ODS_TABELAS_SGE_ISOLADAS_TMP
group by dt_carga

---- proc de banco das isoladas pelo problema patch ODI

create or replace procedure carga_isoladas_prc(p_ENTRADA_MES IN varchar,
                                               p_ENTRADA_ANO IN varchar) is

  v_ENTRADA_MES  varchar2(2);
  v_ENTRADA_ANO  varchar2(4);
  v_DATA_INICIAL varchar2(10);
  v_DATA_FINAL   varchar2(10);
  v_MES_S        varchar2(2);
  v_ANO_S        varchar2(4);
  v_AVALIA_MES   varchar2(2);

BEGIN

  delete from DDA_BI.ODS_TABELAS_SGE_ISOLADAS_TMP;
  commit;

  v_avalia_mes := to_char(trunc(sysdate), 'MM');
  v_ENTRADA_MES := p_ENTRADA_MES;
  v_ENTRADA_ANO := p_ENTRADA_ANO;

  while to_number(v_avalia_mes) >= to_number(v_ENTRADA_MES) LOOP

    v_DATA_INICIAL := '01/' || v_ENTRADA_MES || '/' || v_ENTRADA_ANO;
    v_DATA_FINAL   := to_char(ADD_MONTHS(TO_DATE(v_DATA_INICIAL,
                                                 'DD/MM/YYYY'),
                                         1) - (1 / 24 / 60 / 60),
                              'dd/mm/yyyy');
    v_MES_S        := to_char(to_date(v_DATA_FINAL, 'dd/mm/yyyy'), 'MM');
    v_ANO_S        := to_char(to_date(v_DATA_FINAL, 'dd/mm/yyyy'), 'YYYY');

  BEGIN
    delete from ODS_ZSCAEMOBILIDADE_DISCIPLINA;
    commit;
    insert into DDA_BI.ODS_ZSCAEMOBILIDADE_DISCIPLINA
      SELECT SMATRICULA.CODCOLIGADA,
             SMATRICULA.RA,
             SLOGMATRICULA.CODSTATUS,
             SMATRICULA.IDTURMADISC,
             SMATRICULA.IDPERLET,
             SMATRICULA.IDHABILITACAOFILIAL,
             SLOGMATRICULA.DTALTERACAO,
             0                              ID_ODS_ZSCAEMOB_DISC,
             SYSDATE                        DT_INI_VIG,
             SYSDATE                        DT_FIM_VIG,
             1                              FLAG_ATUAL
        FROM SLOGMATRICULA@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
       INNER JOIN STURMADISC@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
          ON STURMADISC.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
         AND STURMADISC.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
       INNER JOIN SMATRICULA@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
          ON SLOGMATRICULA.CODCOLIGADA = SMATRICULA.CODCOLIGADA
         AND SLOGMATRICULA.IDTURMADISC = SMATRICULA.IDTURMADISC
         AND SLOGMATRICULA.RA = SMATRICULA.RA
       INNER JOIN GCONSIST@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
          ON GCONSIST.CODTABELA = 'DISCEJA'
         AND GCONSIST.APLICACAO = 'S'
         AND GCONSIST.CODCOLIGADA = STURMADISC.CODCOLIGADA
         AND GCONSIST.CODCLIENTE = STURMADISC.CODDISC
       WHERE SLOGMATRICULA.CODCOLIGADA = 2
         AND IDLOGMATRICULA =
             (SELECT MAX(IDLOGMATRICULA)
                FROM SLOGMATRICULA@RM.SRVPROD.SISTEMAFIERGS.ORG.BR SLOGMATRICULA_A
               WHERE SLOGMATRICULA_A.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
                 AND SLOGMATRICULA_A.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
                 AND SLOGMATRICULA_A.RA = SLOGMATRICULA.RA
                 AND to_char(SLOGMATRICULA_A.DTALTERACAO, 'dd/mm/yyyyy') <=
                     v_DATA_FINAL);
    commit;

  Exception
        When Others Then
          Pla_Gera_Log_Bi_Prc( p_erro_sql   => SQLERRM
                             , p_msg        => 'Erro na carga ODS_ZSCAEMOBILIDADE_DISCIPLINA'
                             , p_tab        => 'ODS_ZSCAEMOBILIDADE_DISCIPLINA'
                             , p_ctb_pre_id => 0
                             , p_tipo       => 'INSERIR' );
  END;

  BEGIN
    delete from DDA_BI.ODS_ZSCAEMOBILIDADE_RECSABERES;
    commit;
    insert into DDA_BI.ODS_ZSCAEMOBILIDADE_RECSABERES
      SELECT CODCOLIGADA,
             RA,
             CODSTATUS,
             IDHABILITACAOFILIAL,
             IDPERLET,
             DTALTERACAO,
             0                   ID_ODS_ZSCAEMOB_RECSABERES,
             SYSDATE             DT_INI_VIG,
             SYSDATE             DT_FIM_VIG,
             1                   FLAG_ATUAL
        FROM SLOGPLETIVO@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
       WHERE CODCOLIGADA = 2
         AND SLOGPLETIVO.CODSTATUS = 70
         AND IDLOGPLETIVO =
             (SELECT MIN(IDLOGPLETIVO)
                FROM SLOGPLETIVO@RM.SRVPROD.SISTEMAFIERGS.ORG.BR SLOGPLETIVO_A
               WHERE SLOGPLETIVO_A.CODCOLIGADA = SLOGPLETIVO.CODCOLIGADA
                 AND SLOGPLETIVO_A.IDHABILITACAOFILIAL =
                     SLOGPLETIVO.IDHABILITACAOFILIAL
                 AND SLOGPLETIVO_A.RA = SLOGPLETIVO.RA
                 AND SLOGPLETIVO_A.IDPERLET = SLOGPLETIVO.IDPERLET
                 AND to_char(SLOGPLETIVO_A.DTALTERACAO, 'dd/mm/yyyy') <=
                     v_DATA_FINAL
                 AND SLOGPLETIVO_A.CODSTATUS = 70);
    commit;

   Exception
        When Others Then
          Pla_Gera_Log_Bi_Prc( p_erro_sql   => SQLERRM
                             , p_msg        => 'Erro na carga ODS_ZSCAEMOBILIDADE_RECSABERES'
                             , p_tab        => 'ODS_ZSCAEMOBILIDADE_RECSABERES'
                             , p_ctb_pre_id => 0
                             , p_tipo       => 'INSERIR' );
   END;

   BEGIN

    delete from DDA_BI.ODS_ZSCAEMOBILIDADE_ISOLADA;
    commit;

    insert into DDA_BI.ODS_ZSCAEMOBILIDADE_ISOLADA
      SELECT SLOGMATRICULA.CODCOLIGADA,
             SLOGMATRICULA.RA,
             SLOGMATRICULA.CODSTATUS,
             STURMADISC.IDHABILITACAOFILIAL,
             SMATRICULA.IDPERLET,
             SLOGMATRICULA.DTALTERACAO,
             0                              ID_ODS_ZSCAEMOB_ISOLADA,
             SYSDATE                        DT_INI_VIG,
             SYSDATE                        DT_FIM_VIG,
             1                              FLAG_ATUAL
        FROM SLOGMATRICULA@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
       INNER JOIN SMATRICULA@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
          ON SMATRICULA.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
         AND SMATRICULA.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
         AND SMATRICULA.RA = SLOGMATRICULA.RA
       INNER JOIN STURMADISC@RM.SRVPROD.SISTEMAFIERGS.ORG.BR
          ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
         AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
       WHERE SLOGMATRICULA.CODCOLIGADA = 2
         AND SMATRICULA.TIPODISCIPLINA = 'E'
         AND SLOGMATRICULA.CODSTATUS NOT IN (1, 16, 37, 38, 65, 13, 74)
         AND IDLOGMATRICULA =
             (SELECT MAX(IDLOGMATRICULA)
                FROM SLOGMATRICULA@RM.SRVPROD.SISTEMAFIERGS.ORG.BR SLOGMATRICULA_A
               WHERE SLOGMATRICULA_A.CODCOLIGADA = SLOGMATRICULA.CODCOLIGADA
                 AND SLOGMATRICULA_A.IDTURMADISC = SLOGMATRICULA.IDTURMADISC
                 AND SLOGMATRICULA_A.RA = SLOGMATRICULA.RA
                 AND to_char(SLOGMATRICULA_A.DTALTERACAO, 'DD/MM/YYYY') <=
                     v_DATA_FINAL
                 AND SLOGMATRICULA_A.CODSTATUS NOT IN
                     (1, 16, 37, 38, 65, 13, 74)
                 AND SLOGMATRICULA_A.CODSTATUS IN (2,
                                                   17,
                                                   39,
                                                   5,
                                                   19,
                                                   7,
                                                   21,
                                                   67,
                                                   9,
                                                   23,
                                                   10,
                                                   11,
                                                   24,
                                                   25,
                                                   3,
                                                   33,
                                                   68,
                                                   30,
                                                   69,
                                                   31,
                                                   46,
                                                   6,
                                                   20,
                                                   41,
                                                   45,
                                                   73,
                                                   32,
                                                   70,
                                                   42,
                                                   66,
                                                   4,
                                                   18,
                                                   40,
                                                   63));
    commit;
   Exception
        When Others Then
          Pla_Gera_Log_Bi_Prc( p_erro_sql   => SQLERRM
                             , p_msg        => 'Erro na carga ODS_ZSCAEMOBILIDADE_ISOLADA'
                             , p_tab        => 'ODS_ZSCAEMOBILIDADE_ISOLADA'
                             , p_ctb_pre_id => 0
                             , p_tipo       => 'INSERIR' );
   END;


  BEGIN
    insert into DDA_BI.ODS_TABELAS_SGE_ISOLADAS_TMP
      SELECT CODCOLIGADA,
             IDHABILITACAOFILIAL,
             CODTURMA,
             codFinanciamento,
             CODCOLIGADA_MATRICPL,
             TIPOGRAT,
             IDPERLET,
             RA,
             CODPESSOA,
             EBEP,
             CODSTATUSRES,
             CODSTATUS1,
             CATEGORIA,
             CODTURNO,
             CODFILIAL,
             CODCURSO,
             CODGRADE,
             CNPJEMPRESA,
             CR,
             NATURALIDADE,
             nome,
             DTNASCIMENTO,
             NACIONALIDADE,
             cep,
             RUA,
             NUMERO,
             BAIRRO,
             ESTADO,
             CIDADE,
             PAIS,
             TELEFONE1,
             TELEFONE2,
             TELEFONE3,
             BAIXARENDA,
             GRATUIDADE,
             trunc(RECMODIFIEDON_SMATRICPL) RECMODIFIEDON_SMATRICPL,
             trunc(DTMATRICULA) DTMATRICULA,
             Descricao,
             datInicio,
             datTermino,
             CODCCUSTO_TURMA,
             CODCCUSTO_HABIL,
             CODCCUSTOL CODCUSTOL,
             CODCOLIGADA_STUCPL,
             to_number(v_ANO_S || v_MES_S) DT_CARGA
        FROM (SELECT CODCOLIGADA,
                     IDHABILITACAOFILIAL,
                     CODTURMA,
                     codFinanciamento,
                     CODCOLIGADA_MATRICPL,
                     TIPOGRAT,
                     IDPERLET,
                     RA,
                     CODPESSOA,
                     EBEP,
                     CODSTATUSRES,
                     CODSTATUS1,
                     CATEGORIA,
                     CODTURNO,
                     CODFILIAL,
                     CODCURSO,
                     CODGRADE,
                     CNPJEMPRESA,
                     CR,
                     NATURALIDADE,
                     nome,
                     DTNASCIMENTO,
                     NACIONALIDADE,
                     cep,
                     RUA,
                     NUMERO,
                     BAIRRO,
                     ESTADO,
                     CIDADE,
                     PAIS,
                     TELEFONE1,
                     TELEFONE2,
                     TELEFONE3,
                     BAIXARENDA,
                     GRATUIDADE,
                     RECMODIFIEDON_SMATRICPL,
                     DTMATRICULA,
                     Descricao,
                     datInicio,
                     datTermino,
                     CODCCUSTO_TURMA,
                     DTTURMAMODIF,
                     CODCCUSTO_HABIL,
                     CODCCUSTOL,
                     CODCOLIGADA_STUCPL,
                     datEfetivacaoMatricula,
                     codSituacao,
                     DTALTMOB,
                     DTMATRICPLMODIF,
                     DTMOBDISCEJA,
                     NVL(CASE
                           WHEN codSituacao IN ('1', '17', '24') THEN
                            datEfetivacaoMatricula
                           WHEN codSituacao IN ('11', '12', '13') THEN
                            datTermino
                           ELSE
                            COALESCE(CMOBEST, DTALTMOB)
                         END,
                         '') datMovimentacao
                FROM (SELECT STURMA.CODCOLIGADA,
                             SHABILITACAOFILIAL.IDHABILITACAOFILIAL,
                             STURMA.CODTURMA,
                             NVL(SMATRICPLCOMPL.CODFINANC, '') codFinanciamento,
                             SMATRICPL.CODCOLIGADA CODCOLIGADA_MATRICPL,
                             SMATRICPLCOMPL.TIPOGRAT,
                             SPLETIVO.IDPERLET,
                             SMATRICPL.RA,
                             SALUNO.CODPESSOA,
                             NVL(SMATRICPLCOMPL.EBEP, '-') EBEP,
                             SMATRICPL.CODSTATUS,
                             MOBILIDADE_ISOLADA.CODSTATUS codstatus1,
                             SMATRICPL.CODSTATUSRES,
                             NVL(SMATRICPLCOMPL.CATEGORIA, '') CATEGORIA,
                             SHABILITACAOFILIAL.CODTURNO,
                             STURNO.CODFILIAL,
                             SCURSO.CODCURSO,
                             SGRADE.CODGRADE,
                             SMATRICPLCOMPL.CNPJEMPRESA,
                             SMATRICPL.CR CR,
                             PPESSOA.NATURALIDADE,
                             PPESSOA.NOME nome,
                             PPESSOA.DTNASCIMENTO DTNASCIMENTO,
                             PPESSOA.NACIONALIDADE NACIONALIDADE,
                             NVL(PPESSOA.CEP, '') cep,
                             NVL(PPESSOA.RUA, '') RUA,
                             NVL(PPESSOA.NUMERO, '') NUMERO,
                             NVL(PPESSOA.BAIRRO, '') BAIRRO,
                             nvl(PPESSOA.ESTADO, '') ESTADO,
                             NVL(PPESSOA.CIDADE, '') CIDADE,
                             NVL(PPESSOA.PAIS, '') PAIS,
                             NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE1,
                                                                         ' ',
                                                                         ''),
                                                                 '(',
                                                                 ''),
                                                         ')',
                                                         ''),
                                                 '-',
                                                 ''),
                                         '.',
                                         ''),
                                 '') TELEFONE1,
                             NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,
                                                                         ' ',
                                                                         ''),
                                                                 '(',
                                                                 ''),
                                                         ')',
                                                         ''),
                                                 '-',
                                                 ''),
                                         '.',
                                         ''),
                                 '') TELEFONE2,
                             NVL(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PPESSOA.TELEFONE2,
                                                                         ' ',
                                                                         ''),
                                                                 '(',
                                                                 ''),
                                                         ')',
                                                         ''),
                                                 '-',
                                                 ''),
                                         '.',
                                         ''),
                                 '') TELEFONE3,
                             SMATRICPLCOMPL.BAIXARENDA,
                             SMATRICPLCOMPL.GRATUIDADE,
                             Smatricpl.RECMODIFIEDON RECMODIFIEDON_SMATRICPL,
                             SMATRICPL.DTMATRICULA,
                             SMOTIVOALTMAT.Descricao,
                             to_char(STURMA.DTINICIAL, 'dd/mm/yyyy') datInicio,
                             to_char(STURMA.DTFINAL, 'dd/mm/yyyy') datTermino,
                             STURMA.CODCCUSTO CODCCUSTO_TURMA,
                             STURMA.RECMODIFIEDON DTTURMAMODIF,
                             SHABILITACAOFILIAL.CODCCUSTO CODCCUSTO_HABIL,
                             STURMACOMPL.CODCCUSTOL,
                             STURMACOMPL.CODCOLIGADA CODCOLIGADA_STUCPL,
                             NVL(TO_CHAR((CASE
                                           WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN
                                            STURMA.DTINICIAL
                                           ELSE
                                            SMATRICULA.DTMATRICULA
                                         END),
                                         'dd/mm/yyyy'),
                                 '') datEfetivacaoMatricula,
                             COALESCE(/*CASE
                                        WHEN (SELECT ESTADO
                                                FROM DDA_BI.ODS_GCOLIGADA
                                               WHERE CODCOLIGADA = 2) = 'PR' THEN */--deixado igual a sp_scae_2017, sem uso
                                         CASE MOBILIDADE_ISOLADA.CODSTATUS
                                           WHEN 30 THEN
                                            '22'
                                           WHEN 32 THEN
                                            '19'
                                         --END
                                      END,
                                      CASE MOBILIDADE_ISOLADA.CODSTATUS
                                        WHEN 2 THEN
                                         '1'
                                        WHEN 17 THEN
                                         '1'
                                        WHEN 39 THEN
                                         '1'
                                        WHEN 5 THEN
                                         '5'
                                        WHEN 19 THEN
                                         '5'
                                        WHEN 7 THEN
                                         '9'
                                        WHEN 21 THEN
                                         '9'
                                        WHEN 67 THEN
                                         '9'
                                        WHEN 9 THEN
                                         '11'
                                        WHEN 23 THEN
                                         '11'
                                        WHEN 75 THEN
                                         '11'
                                        WHEN 10 THEN
                                         '13'
                                        WHEN 11 THEN
                                         '13'
                                        WHEN 24 THEN
                                         '13'
                                        WHEN 25 THEN
                                         '13'
                                        WHEN 43 THEN
                                         '13'
                                        WHEN 3 THEN
                                         '18'
                                        WHEN 33 THEN
                                         '18'
                                        WHEN 68 THEN
                                         '18'
                                        WHEN 30 THEN
                                         '19'
                                        WHEN 69 THEN
                                         '19'
                                        WHEN 31 THEN
                                         '20'
                                        WHEN 46 THEN
                                         '20'
                                        WHEN 6 THEN
                                         '21'
                                        WHEN 20 THEN
                                         '21'
                                        WHEN 41 THEN
                                         '21'
                                        WHEN 45 THEN
                                         '22'
                                        WHEN 73 THEN
                                         '22'
                                        WHEN 32 THEN
                                         '23'
                                        WHEN 70 THEN
                                         '24'
                                        WHEN 42 THEN
                                         '12'
                                        WHEN 66 THEN
                                         '17'
                                        WHEN 4 THEN
                                         '1'
                                        WHEN 18 THEN
                                         '1'
                                        WHEN 40 THEN
                                         '1'
                                        WHEN 63 THEN
                                         '12'
                                      END,
                                      '') codSituacao,
                             TO_CHAR(CASE
                                       WHEN MOBILIDADE_ISOLADA.CODSTATUS IN
                                            (2, 17, 39, 66) THEN
                                        (CASE
                                          WHEN SMATRICULA.DTMATRICULA < STURMA.DTINICIAL THEN
                                           STURMA.DTINICIAL
                                          ELSE
                                           SMATRICULA.DTMATRICULA
                                        END)
                                       ELSE
                                        MOBILIDADE_ISOLADA.DTALTERACAO
                                     END,
                                     'dd/mm/yyyy') DTALTMOB,

                             CASE
                               WHEN SMATRICPLCOMPL.RECMODIFIEDON >
                                    SMATRICPL.RECMODIFIEDON THEN
                                SMATRICPLCOMPL.RECMODIFIEDON
                               ELSE
                                SMATRICPL.RECMODIFIEDON
                             END DTMATRICPLMODIF,

                             MOBILIDADEDISCEJA.DTALTERACAO AS DTMOBDISCEJA,
                             TO_CHAR(SMATRICPLCOMPL.CMOBEST, 'dd/mm/yyyy') CMOBEST

                      --select *
                        FROM dda_bi.ODS_SMATRICPL SMATRICPL
                       INNER JOIN dda_bi.ODS_SMATRICULA SMATRICULA
                          ON SMATRICULA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
                         AND SMATRICULA.IDPERLET = SMATRICPL.IDPERLET
                         AND SMATRICULA.RA = SMATRICPL.RA
                         and smatricpl.flag_atual = 1
                         and smatricula.flag_atual = 1
                      -- and smatricula.id_ods_smatricula > -1
                       INNER JOIN dda_bi.ODS_STURMADISC STURMADISC
                          ON STURMADISC.CODCOLIGADA = SMATRICULA.CODCOLIGADA
                         AND STURMADISC.IDTURMADISC = SMATRICULA.IDTURMADISC
                      --  and sturmadisc.flag_atual = 1
                      --and ODS_STURMADISC.ID_ODS_STURMADISC > -1
                      /*INNER JOIN dda_bi.ods_GCOLIGADA GCOLIGADA
                       ON GCOLIGADA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
                      and gcoligada.flag_atual = 1*/
                      --   and gcoligada.id_ods_gcoligada > -1
                       INNER JOIN dda_bi.ODS_SHABILITACAOFILIAL SHABILITACAOFILIAL
                          ON SHABILITACAOFILIAL.CODCOLIGADA =
                             SMATRICPL.CODCOLIGADA
                         AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL =
                             SMATRICPL.IDHABILITACAOFILIAL
                         and SHABILITACAOFILIAL.FLAG_ATUAL = 1
                      --    and shabilitacaofilial.id_ods_shabilitacaofilial > -1
                       INNER JOIN dda_bi.ODS_SHABILITACAO SHABILITACAO
                          ON SHABILITACAO.CODCOLIGADA =
                             SHABILITACAOFILIAL.CODCOLIGADA
                         AND SHABILITACAO.CODCURSO =
                             SHABILITACAOFILIAL.CODCURSO
                         AND SHABILITACAO.CODHABILITACAO =
                             SHABILITACAOFILIAL.CODHABILITACAO
                         and SHABILITACAO.FLAG_ATUAL = 1
                      --   and shabilitacao.id_ods_shabilitacao > -1
                        LEFT JOIN dda_bi.ODS_SHABILITACAOCOMPL SHABILITACAOCOMPL
                          ON SHABILITACAOCOMPL.CODCOLIGADA =
                             SHABILITACAO.CODCOLIGADA
                         AND SHABILITACAOCOMPL.CODCURSO =
                             SHABILITACAO.CODCURSO
                         AND SHABILITACAOCOMPL.CODHABILITACAO =
                             SHABILITACAO.CODHABILITACAO
                         and SHABILITACAOCOMPL.FLAG_ATUAL = 1
                      --   and SHABILITACAOCOMPL.ID_ODS_SHABILITCOMPL > -1
                       INNER JOIN dda_bi.ODS_GFILIAL GFILIAL
                          ON GFILIAL.CODCOLIGADA = SMATRICPL.CODCOLIGADA
                         AND GFILIAL.CODFILIAL = SMATRICPL.CODFILIAL
                         and GFILIAL.Flag_Atual = 1
                      -- and GFILIAL.ID_ODS_GFILIAL > -1
                       INNER JOIN dda_bi.ODS_SCURSO SCURSO
                          ON SCURSO.CODCOLIGADA =
                             SHABILITACAOFILIAL.CODCOLIGADA
                         AND SCURSO.CODCURSO = SHABILITACAOFILIAL.CODCURSO
                         and SCURSO.Flag_Atual = 1
                      -- and SCURSO.Id_Ods_Scurso > -1
                       INNER /*LEFT OUTER*/
                        JOIN dda_bi.ODS_SCURSOCOMPL SCURSOCOMPL
                          ON SCURSO.CODCOLIGADA = SCURSOCOMPL.CODCOLIGADA
                         AND SCURSO.CODCURSO = SCURSOCOMPL.CODCURSO
                         and SCURSOCOMPL.Flag_Atual = 1
                      --  and SCURSOCOMPL.ID_ODS_SCURCOMPL > -1
                       INNER JOIN dda_bi.ODS_STURMA STURMA
                          ON STURMA.CODCOLIGADA = SMATRICPL.CODCOLIGADA
                         AND STURMA.CODFILIAL = SMATRICPL.CODFILIAL
                         AND STURMA.CODTURMA = STURMADISC.CODTURMA
                         AND STURMA.IDPERLET = SMATRICPL.IDPERLET
                         and STURMA.Flag_Atual = 1
                      --  and STURMA.Id_Ods_Sturma > -1
                        LEFT JOIN dda_bi.ODS_STURMACOMPL STURMACOMPL
                          ON STURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
                         AND STURMA.CODFILIAL = STURMACOMPL.CODFILIAL
                         AND STURMA.CODTURMA = STURMACOMPL.CODTURMA
                         AND STURMA.IDPERLET = STURMACOMPL.IDPERLET
                         and STURMACOMPL.Flag_Atual = 1
                      --   and STURMACOMPL.Id_Ods_Sturmacompl > -1

                       inner join dda_bi.ods_sfilial sfilial
                          on sfilial.codcoligada = sturma.codcoligada
                         and sfilial.codfilial = sturma.codfilial
                         and sfilial.flag_atual = 1
                      --  and sfilial.id_ods_sfilial > -1

                       inner /*left outer*/
                        join dda_bi.ods_stipocurso stipocurso
                          on stipocurso.codcoligada = scurso.codcoligada
                         and stipocurso.codtipocurso = scurso.codtipocurso
                         and stipocurso.flag_atual = 1
                      -- and stipocurso.id_ods_stipocurso > -1

                       inner join dda_bi.ods_sturno sturno
                          on sturno.codcoligada =
                             shabilitacaofilial.codcoligada
                         and sturno.codturno = SHABILITACAOFILIAL.CODTURNO
                         and sturno.flag_atual = 1
                      --  and sturno.id_ods_sturno > -1

                       inner join dda_bi.ods_sstatus sstatus
                          on sstatus.codcoligada = smatricula.codcoligada
                         and sstatus.codstatus = smatricula.codstatus
                         and sstatus.flag_atual = 1
                      --  and sstatus.id_ods_sstatus > -1

                        left outer join dda_bi.ods_smotivoaltmat SMOTIVOALTMAT
                          on smotivoaltmat.CODCOLIGADA =
                             SMATRICPL.CODCOLIGADA
                         AND smotivoaltmat.CODMOTIVO =
                             SMATRICPL.CODMOTIVOTRANSFERENCIA
                         and smotivoaltmat.FLAG_ATUAL = 1
                      --  and  SMOTIVOALTMAT.Id_Ods_Smotivoaltmat > -1

                       INNER JOIN dda_bi.ODS_SPLETIVO SPLETIVO
                          ON SPLETIVO.CODCOLIGADA = STURMA.CODCOLIGADA
                         AND SPLETIVO.IDPERLET = STURMA.IDPERLET
                         and SPLETIVO.Flag_Atual = 1
                      --   and SPLETIVO.ID_ODS_SPLETIVO > -1
                      /* LEFT JOIN dda_bi.ODS_GCCUSTO GCCUSTO
                       ON GCCUSTO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA
                      AND GCCUSTO.CODCCUSTO = SHABILITACAOFILIAL.CODCCUSTO
                      and GCCUSTO.Flag_Atual = 1*/
                      --   and GCCUSTO.ID_ODS_GCCUSTO > -1
                       INNER /*left outer*/
                        JOIN dda_bi.ODS_SGRADE SGRADE
                          ON SGRADE.CODCOLIGADA =
                             SHABILITACAOFILIAL.CODCOLIGADA
                         AND SGRADE.CODCURSO = SHABILITACAOFILIAL.CODCURSO
                         AND SGRADE.CODHABILITACAO =
                             SHABILITACAOFILIAL.CODHABILITACAO
                         AND SGRADE.CODGRADE = SHABILITACAOFILIAL.CODGRADE
                         and SGRADE.Flag_Atual = 1
                      --  and sgrade.id_ods_sgrade > -1
                       INNER JOIN dda_bi.ODS_SMATRICPLCOMPL SMATRICPLCOMPL
                          ON SMATRICPL.CODCOLIGADA =
                             SMATRICPLCOMPL.CODCOLIGADA
                         AND SMATRICPL.IDPERLET = SMATRICPLCOMPL.IDPERLET
                         AND SMATRICPL.RA = SMATRICPLCOMPL.RA
                         AND SMATRICPL.IDHABILITACAOFILIAL =
                             SMATRICPLCOMPL.IDHABILITACAOFILIAL
                         and SMATRICPLCOMPL.Flag_Atual = 1
                      --    and SMATRICPLCOMPL.Id_Ods_Smatcplcompl > -1
                      /* LEFT JOIN dda_bi.ODS_GCONSIST EMPRESA
                       ON EMPRESA.CODCOLIGADA = SMATRICPLCOMPL.CODCOLIGADA
                      AND EMPRESA.CODTABELA = 'SEMPRESA'
                      AND EMPRESA.CODCLIENTE = SMATRICPLCOMPL.EMPRESA
                      and EMPRESA.FLAG_ATUAL = 1*/
                      --    and EMPRESA.Id_Ods_Gconsist > -1
                       INNER JOIN dda_bi.ODS_SALUNO SALUNO
                          ON SALUNO.CODCOLIGADA = SMATRICPL.CODCOLIGADA
                         and saluno.flag_atual = 1
                         AND SALUNO.RA = SMATRICPL.RA
                      --    and saluno.id_ods_saluno > -1
                       INNER JOIN dda_bi.ODS_SALUNOCOMPL SALUNOCOMPL
                          ON SALUNO.CODCOLIGADA = SALUNOCOMPL.CODCOLIGADA
                         AND SALUNO.RA = SALUNOCOMPL.RA
                         and SALUNOCOMPL.Flag_Atual = 1
                      --   and SALUNOCOMPL.Id_Ods_Salunocompl > -1
                       INNER JOIN dda_bi.ODS_SPESSOA SPESSOA
                          ON SPESSOA.CODIGO = SALUNO.CODPESSOA
                         and SPESSOA.Flag_Atual = 1
                      --   and SPESSOA.Id_Ods_Spessoa > -1
                       INNER JOIN dda_bi.ODS_PPESSOA PPESSOA
                          ON PPESSOA.CODIGO = SALUNO.CODPESSOA
                         and PPESSOA.Flag_Atual = 1
                      --  and PPESSOA.Id_Ods_Ppessoa > -1
                        LEFT JOIN dda_bi.ODS_PPESSOA MAE
                          ON MAE.CODIGO = SPESSOA.CODPESSOAMAE
                         and MAE.Flag_Atual = 1
                      --  and MAE.ID_ODS_PPESSOA > -1
                        LEFT JOIN dda_bi.ODS_PPESSOA PAI
                          ON PAI.CODIGO = SPESSOA.CODPESSOAPAI
                         and PAi.Flag_Atual = 1
                      --  and pai.id_ods_ppessoa > -1
                        LEFT JOIN dda_bi.ODS_ZSCAEMUNICIPIO ZSCAEMUNICIPIO
                          ON UPPER(ZSCAEMUNICIPIO.MUNICIPIO) =
                             UPPER(PPESSOA.CIDADE)
                         AND ZSCAEMUNICIPIO.UF = PPESSOA.ESTADO
                         and ZSCAEMUNICIPIO.Flag_Atual = 1
                      --  and ZSCAEMUNICIPIo.Id_Ods_Zscaemunicipio > -1
                        LEFT JOIN dda_bi.ODS_FCFO RESPLEGAL
                          ON RESPLEGAL.CODCOLIGADA = SALUNO.CODCOLCFO
                         AND RESPLEGAL.CODCFO = SALUNO.CODCFO
                         and RESPLEGAL.Flag_Atual = 1
                      --  and RESPLEGAL.Id_Ods_Fcfo > -1
                      /*LEFT JOIN dda_bi.ODS_GCONSIST EMPRESATURMA
                       ON EMPRESATURMA.CODCOLIGADA = STURMACOMPL.CODCOLIGADA
                      AND EMPRESATURMA.CODTABELA = 'SEMPRESA'
                      AND EMPRESATURMA.CODCLIENTE = STURMACOMPL.EMPRESAP
                      and EMPRESATURMA.Flag_Atual = 1*/
                      --   and EMPRESATURMA.Id_Ods_Gconsist > -1-------------------------------------------
                       INNER JOIN dda_bi.ODS_ZSCAEMOBILIDADE_ISOLADA MOBILIDADE_ISOLADA
                          ON MOBILIDADE_ISOLADA.CODCOLIGADA =
                             SMATRICPL.CODCOLIGADA
                         AND MOBILIDADE_ISOLADA.RA = SMATRICPL.RA
                         AND MOBILIDADE_ISOLADA.IDHABILITACAOFILIAL =
                             SMATRICPL.IDHABILITACAOFILIAL
                         AND MOBILIDADE_ISOLADA.IDPERLET = SMATRICPL.IDPERLET
                            -- and MOBILIDADE_ISOLADA.Flag_Atual = 1
                         and MOBILIDADE_ISOLADA.ID_ODS_ZSCAEMOB_ISOLADA > -1
                        LEFT JOIN dda_bi.ODS_ZSCAEMOBILIDADE_RECSABERES MOBILIDADE_RECSABERES
                          ON nvl(MOBILIDADE_RECSABERES.CODCOLIGADA,
                                 SMATRICPL.CODCOLIGADA) =
                             SMATRICPL.CODCOLIGADA
                         AND MOBILIDADE_RECSABERES.RA = SMATRICPL.RA
                         AND MOBILIDADE_RECSABERES.IDHABILITACAOFILIAL =
                             SMATRICPL.IDHABILITACAOFILIAL
                         AND MOBILIDADE_RECSABERES.idperlet =
                             SMATRICPL.IDPERLET
                            --  and MOBILIDADE_RECSABERES.Flag_Atual = 1
                         and MOBILIDADE_RECSABERES.Id_Ods_Zscaemob_Recsaberes > -1
                        LEFT JOIN (SELECT ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                                         ZSCAEMOBILIDADE_DISCIPLINA.RA,
                                         ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                                         ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET,
                                         MAX(ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO) AS DTALTERACAO

                                    FROM dda_bi.ODS_ZSCAEMOBILIDADE_DISCIPLINA ZSCAEMOBILIDADE_DISCIPLINA

                                   WHERE ZSCAEMOBILIDADE_DISCIPLINA.DTALTERACAO BETWEEN

                                         v_DATA_INICIAL AND v_DATA_FINAL
                                        --   and ZSCAEMOBILIDADE_DISCIPLINA.Flag_Atual = 1
                                     and ZSCAEMOBILIDADE_DISCIPLINA.Id_Ods_Zscaemob_Disc > -1

                                   GROUP BY ZSCAEMOBILIDADE_DISCIPLINA.CODCOLIGADA,
                                            ZSCAEMOBILIDADE_DISCIPLINA.RA,
                                            ZSCAEMOBILIDADE_DISCIPLINA.IDHABILITACAOFILIAL,
                                            ZSCAEMOBILIDADE_DISCIPLINA.IDPERLET

                                  ) MOBILIDADEDISCEJA
                          ON MOBILIDADEDISCEJA.CODCOLIGADA =
                             SMATRICPL.CODCOLIGADA
                         AND MOBILIDADEDISCEJA.RA = SMATRICPL.RA
                         AND MOBILIDADEDISCEJA.IDHABILITACAOFILIAL =
                             SMATRICPL.IDHABILITACAOFILIAL
                         AND MOBILIDADEDISCEJA.IDPERLET = SMATRICPL.IDPERLET

                       WHERE SMATRICPL.CODCOLIGADA = 2 --GCOLIGADA.CODCOLIGADA = 2
                         AND SMATRICULA.TIPODISCIPLINA = 'E'
                         AND MOBILIDADE_ISOLADA.CODSTATUS NOT IN
                             (1, 16, 37, 38, 65, 13, 74)
                         AND (MOBILIDADE_ISOLADA.CODSTATUS NOT IN (4, 18, 40) OR
                             (MOBILIDADE_ISOLADA.DTALTERACAO >
                             v_DATA_INICIAL AND
                             MOBILIDADE_ISOLADA.DTALTERACAO >=
                             ADD_MONTHS(TO_DATE('01/' ||
                                                  TO_CHAR(STURMA.DTINICIAL,
                                                          'MM') || '/' ||
                                                  (TO_CHAR(STURMA.DTINICIAL,
                                                           'YYYY')),
                                                  'DD/MM/YYYY'),
                                          1)))
                         and sturma.dtinicial is not null) TAB1

               GROUP BY CODCOLIGADA,
                        IDHABILITACAOFILIAL,
                        CODTURMA,
                        codFinanciamento,
                        CODCOLIGADA_MATRICPL,
                        TIPOGRAT,
                        IDPERLET,
                        RA,
                        CODPESSOA,
                        EBEP,
                        CODSTATUS1,
                        CODSTATUSRES,
                        CATEGORIA,
                        CODTURNO,
                        CODFILIAL,
                        CODCURSO,
                        CODGRADE,
                        CNPJEMPRESA,
                        CR,
                        NATURALIDADE,
                        nome,
                        DTNASCIMENTO,
                        NACIONALIDADE,
                        cep,
                        RUA,
                        NUMERO,
                        BAIRRO,
                        ESTADO,
                        CIDADE,
                        PAIS,
                        TELEFONE1,
                        TELEFONE2,
                        TELEFONE3,
                        BAIXARENDA,
                        GRATUIDADE,
                        RECMODIFIEDON_SMATRICPL,
                        DTMATRICULA,
                        Descricao,
                        CODCCUSTO_TURMA,
                        DTTURMAMODIF,
                        CODCCUSTO_HABIL,
                        CODCCUSTOL,
                        CODCOLIGADA_STUCPL,
                        datEfetivacaoMatricula,
                        codSituacao,
                        DTALTMOB,
                        DTMATRICPLMODIF,

                        DTMOBDISCEJA,
                        datInicio,
                        datTermino,
                        NVL(CASE
                              WHEN codSituacao IN ('1', '17', '24') THEN
                               datEfetivacaoMatricula
                              WHEN codSituacao IN ('11', '12', '13') THEN
                               datTermino
                              ELSE
                               COALESCE(CMOBEST, DTALTMOB)
                            END,
                            '')) FN_SCAE
       WHERE (((EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DTALTMOB, 'dd/mm/yyyy')) =
             v_MES_S AND
             EXTRACT(YEAR FROM TO_DATE(FN_SCAE.DTALTMOB, 'dd/mm/yyyy')) =
             v_ANO_S) AND
             TO_DATE(FN_SCAE.DATINICIO, 'dd/mm/yyyy') <= v_DATA_FINAL) OR
             (((EXTRACT(MONTH FROM FN_SCAE.DTTURMAMODIF) = v_MES_S AND
             EXTRACT(YEAR FROM FN_SCAE.DTTURMAMODIF) = v_ANO_S) AND
             (TO_DATE(FN_SCAE.DATINICIO, 'dd/mm/yyyy') <= v_DATA_FINAL AND
             TO_DATE(FN_SCAE.DATTERMINO, 'dd/mm/yyyy') >=
             v_DATA_INICIAL)) OR
             ((EXTRACT(MONTH FROM FN_SCAE.DTMATRICPLMODIF) = v_MES_S AND
             EXTRACT(YEAR FROM FN_SCAE.DTMATRICPLMODIF) = v_ANO_S) AND
             (TO_DATE(FN_SCAE.DATINICIO, 'dd/mm/yyyy') <= v_DATA_FINAL AND
             TO_DATE(FN_SCAE.DATTERMINO, 'dd/mm/yyyy') >=
             v_DATA_INICIAL))) OR
             ((EXTRACT(MONTH FROM TO_DATE(FN_SCAE.DATINICIO, 'dd/mm/yyyy')) =
             v_MES_S AND
             EXTRACT(YEAR FROM TO_DATE(FN_SCAE.DATINICIO, 'dd/mm/yyyy')) =
             v_ANO_S)) OR
             ((EXTRACT(MONTH FROM FN_SCAE.DTMOBDISCEJA) = v_MES_S AND
             EXTRACT(YEAR FROM FN_SCAE.DTMOBDISCEJA) = v_ANO_S)));
    commit;

   Exception
        When Others Then
          Pla_Gera_Log_Bi_Prc( p_erro_sql   => SQLERRM
                             , p_msg        => 'Erro na carga ODS_TABELAS_SGE_ISOLADAS_TMP'
                             , p_tab        => 'ODS_TABELAS_SGE_ISOLADAS_TMP'
                             , p_ctb_pre_id => 0
                             , p_tipo       => 'INSERIR' );
   END;


    v_ENTRADA_MES := v_ENTRADA_MES + 1;

  END LOOP;

END;



-- rodar analyze nas tabelas

undef tab_owner;
undef table_name;

select 'Begin '||chr(10)||' dbms_stats.gather_table_stats(ownname => ''' || owner ||
        ''', tabname => ''' || table_name ||
        ''', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE, method_opt => '' FOR ALL COLUMNS SIZE AUTO '', cascade => TRUE,degree=>DBMS_STATS.AUTO_DEGREE, no_invalidate=>false);' ||
        chr(10) || 'End;' || chr(10) || '/'
  from dba_tables
 where owner like upper('&tab_owner')
   and table_name like upper('&table_name')
/


Begin 
 dbms_stats.gather_table_stats(ownname => 'DDA_BI', tabname => 'ODS_TABELAS_SGE_ISOLADAS_TMP', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE, method_opt => ' FOR ALL COLUMNS SIZE AUTO ', cascade => TRUE,degree=>DBMS_STATS.AUTO_DEGREE, no_invalidate=>false);
End;
/

-- para a atualizacao do municipio do aluno na fat_educacao, para o projeto da evasão foi criada uma proc

select encontrar_cod_municipio('Novo Hamburgo','RS',93542540) from dual;

-- essa proc é passada no novo mapeamento da dim_alunos. Tb foi criada outro map para ods_ppessoa_cep


-- busca todas as tabelas do owner
select * from all_tables a where lower(a.owner) = '&owner';

select * from v$parameter where name like 'nls%'

-- tabelas e constriants
SELECT DISTINCT c_pk.table_name table_name, CAST(a.column_name AS   
         VARCHAR(100)) as MainColumnName, a.constraint_name, a.position,     
         a.table_name as r_table_name, c_pk.constraint_name r_pk,            
         CAST((SELECT ax.column_name FROM all_cons_columns ax                
         WHERE ax.owner = c_pk.owner                                         
               AND ax.constraint_name = c_pk.constraint_name                 
               AND ax.position = a.position) as VARCHAR(100)) as column_name 
    FROM all_cons_columns a                                                  
    INNER JOIN all_constraints c ON a.owner = c.owner                        
                          AND a.constraint_name = c.constraint_name          
    INNER JOIN all_constraints c_pk ON c.r_owner = c_pk.owner                
                             AND c.r_constraint_name = c_pk.constraint_name  

   WHERE c.constraint_type = 'R'                                           
   --  AND a.table_name = '%s'      
   and c.OWNER = 'DDA_BIDW'
                                         
  ORDER BY                                                                   
        table_name, constraint_name, position
        
 


SELECT a.table_name, CAST(a.column_name AS VARCHAR(100)) as
       column_name, a.constraint_name, a.position,                           
       c_pk.table_name r_table_name,  c_pk.constraint_name r_pk,             
       CAST((SELECT ax.column_name FROM all_cons_columns ax                  
       WHERE ax.owner = c_pk.owner                                           
             AND ax.constraint_name = c_pk.constraint_name                   
             AND ax.position = a.position) as VARCHAR(100)) as MainColumnName
  FROM all_cons_columns a                                                    
  JOIN all_constraints c ON a.owner = c.owner                                
                        AND a.constraint_name = c.constraint_name            
  JOIN all_constraints c_pk ON c.r_owner = c_pk.owner                        
                           AND c.r_constraint_name = c_pk.constraint_name    
 WHERE c.constraint_type = 'R'                                             
  -- AND c_pk.table_name = ''%s''  
 -- and c.OWNER = 'DDA_BIDW'                                            
ORDER BY                                                                     
      table_name, constraint_name, position
        
        
        
select * from all_cons_columns

select * from all_constraints


select 
a.table_name||' ('|| 
rtrim(max(decode(c.position,1,c.column_name))||','|| 
max(decode(c.position,2,c.column_name))||','|| 
max(decode(c.position,3,c.column_name))||','|| 
max(decode(c.position,4,c.column_name)),',')||') referencia '|| 
b.table_name||' ('|| rtrim(max(decode(d.position,1,d.column_name))||','|| 
max(decode(d.position,2,d.column_name))||','|| 
max(decode(d.position,3,d.column_name))||','|| 
max(decode(d.position,4,d.column_name)),',')||')' relacionamentos 
from 
user_constraints a, 
user_constraints b, 
user_cons_columns c, 
user_cons_columns d 
where 
a.r_constraint_name=b.constraint_name and 
a.constraint_name=c.constraint_name and 
b.constraint_name=d.constraint_name and 
a.constraint_type='R' and 
b.constraint_type in ('P', 'U') 
group by a.table_name, b.table_name 
order by 1;


select 
r.owner, 
r.table_name, 
r.constraint_name 
from 
user_constraints r, 
user_constraints o 
where 
r.r_owner = o.owner and 
r.r_constraint_name = o.constraint_name and 
o.constraint_type in ('P','U') and 
r.constraint_type = 'R' and 
o.table_name = 'DIM_CLIENTES';



SET show off feedback off ver off echo off 
SET PAGESIZE 80 
COL COLUMNS FORMAT A60 
accept TABELA prompt "TABLE NAME : " 
break on tipo 
SELECT 
'PAI' TIPO 
, A.OWNER
, ( SELECT TABLE_NAME FROM ALL_CONSTRAINTS WHERE CONSTRAINT_NAME = A.R_CONSTRAINT_NAME AND OWNER=A.R_OWNER) TABELA 
, B.COLUMNS 
, A.R_CONSTRAINT_NAME 
FROM ALL_CONSTRAINTS A 
, ( SELECT 
      A.OWNER
    , A.TABLE_NAME 
    , A.CONSTRAINT_NAME 
    , MAX(DECODE(POSITION, 1,      CNAME,NULL)) || 
      MAX(DECODE(POSITION, 2,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 3,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 4,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 5,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 6,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 7,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 8,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 9,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,10,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,11,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,12,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,13,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,14,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,15,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,16,', '||CNAME,NULL)) COLUMNS 
    FROM (SELECT OWNER,
                 SUBSTR(COLUMN_NAME,1,30) CNAME, 
                 SUBSTR(TABLE_NAME,1,30) TABLE_NAME, 
                 SUBSTR(CONSTRAINT_NAME,1,30) CONSTRAINT_NAME, 
                 POSITION 
            FROM ALL_CONS_COLUMNS) A, 
         ALL_CONSTRAINTS B 
    WHERE A.CONSTRAINT_NAME = B.CONSTRAINT_NAME 
      AND A.OWNER           = B.OWNER
      AND B.CONSTRAINT_TYPE = 'R' 
    GROUP BY A.OWNER, A.TABLE_NAME, A.CONSTRAINT_NAME ) B 
WHERE A.TABLE_NAME = upper('&TABELA')
  AND A.OWNER           = B.OWNER
  AND A.CONSTRAINT_TYPE ='R' 
  AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME 
UNION 
SELECT 
  'FILHO' TIPO 
, A.OWNER
, A.TABLE_NAME  TABELA
, B.COLUMNS 
, A.CONSTRAINT_NAME 
FROM ALL_CONSTRAINTS A 
, ( SELECT 
      A.OWNER
    , A.TABLE_NAME 
    , A.CONSTRAINT_NAME, 
      MAX(DECODE(POSITION, 1,      CNAME,NULL)) || 
      MAX(DECODE(POSITION, 2,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 3,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 4,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 5,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 6,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 7,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 8,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION, 9,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,10,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,11,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,12,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,13,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,14,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,15,', '||CNAME,NULL)) || 
      MAX(DECODE(POSITION,16,', '||CNAME,NULL)) COLUMNS 
    FROM (SELECT OWNER,
                 SUBSTR(COLUMN_NAME,1,30) CNAME, 
                 SUBSTR(TABLE_NAME,1,30) TABLE_NAME, 
                 SUBSTR(CONSTRAINT_NAME,1,30) CONSTRAINT_NAME, 
                 POSITION 
            FROM ALL_CONS_COLUMNS) A, 
         ALL_CONSTRAINTS B 
    WHERE A.CONSTRAINT_NAME = B.CONSTRAINT_NAME 
      AND A.OWNER           = B.OWNER
      AND B.CONSTRAINT_TYPE = 'R' 
    GROUP BY A.OWNER, A.TABLE_NAME, A.CONSTRAINT_NAME ) B 
WHERE A.R_CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM ALL_CONSTRAINTS WHERE TABLE_NAME = upper('&&TABELA')
AND CONSTRAINT_TYPE ='P') 
  AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME 
  AND A.OWNER           = B.OWNER
ORDER BY TIPO DESC, TABELA, COLUMNS
/ 
clear breaks 
set feedback on 
set ver on 
SET PAGESIZE 20


-- tratamento CPF

select count(distinct d.cpf) --'cliente',c.*,lpad(replace(replace(c.mascara,'/',''),'-',''),11,0), lpad(d.cpf,11,0),'aluno', d.* 
from dim_clientes c, dim_alunos d
where lpad(replace(replace(c.mascara,'/',''),'-',''),11,0) = lpad(d.cpf,11,0)
--and c.nome = 'MARCIO JULIANO BORBA DOS SANTOS'



SELECT *--COUNT(*)
FROM DEV_ODI_REPO.SNP_SESSION X
WHERE X.SESS_NAME LIKE '%BI_CARGA_ETAPA%'  
AND X.SESS_BEG >=  TRUNC(SYSDATE) 
AND X.SESS_BEG <= TRUNC(SYSDATE)+1   
AND  X.SESS_STATUS  = 'R'
AND ROWNUM<=1
ORDER BY X.SESS_STATUS DESC

-- realizado inconsistente

select * from vw_mon_sesi_unidades -- grade, turma, curso, filial, ra
select "Nome Filial", count(*) from vw_mon_sesi_unidades
group by "Nome Filial"

WITH erros AS
(
SELECT *
  FROM (
    SELECT err.codColigada AS codColigada
          ,err.id AS consulta_id
          ,err.descricao
          ,err.descricao_completa
          ,CASE err.tipo
            WHEN 'co' THEN 'Campos Requeridos'
            WHEN 'rn' THEN 'Regra de Negócio'
           END AS tipo_erro
          ,col.posicao
      ,col.nome
          ,agr.nome AS agrupamento
      FROM mon$consulta err
           LEFT JOIN MON$CONSULTA_COLUNAS col
                ON (col.consulta_id = err.id)
           LEFT JOIN mon$agrupamento agr
                ON (agr.id = err.agrupamento_id)
    WHERE AGR.NOME IN ('ALUNO','TURMA','TURMADISCIPLINA','ETAPA','MATRICULA','MATRICULADISCIPLINA')
        AND (err.codColigada IS NULL OR err.codColigada = 2)) t
PIVOT
(MAX(nome) FOR posicao IN (1 nome_1, 2 nome_2, 3 nome_3, 4 nome_4, 5 nome_5, 6 nome_6, 7 nome_7, 8 nome_8, 9 nome_9)
)
)
SELECT DADOS.ID, dados.exec_id
      ,to_char(mex.data_execucao, 'dd/mm/yyyy hh24:mi:ss') AS "Data Execução"
      ,erros.tipo_erro AS "Tipo Erro"
      ,erros.agrupamento AS "Nível do Erro"
      ,erros.consulta_id||' - '||erros.descricao AS "Origem Problema"
      ,erros.descricao_completa AS "Dica p/ Correção"
      ,scur.codCurso||' - '||scur.nome AS "Curso"
      ,sgrad.codGrade||' - '||sgrad.descricao AS "Grade"
      ,stur.codturma AS "Código da Turma"
      ,stur.nome AS "Nome da Turma"
      ,dados.codFilial$ AS "CodFilial"
      ,gfil.nomefantasia AS "Nome Filial"
      ,dados.modalidade$ AS "Modalidade"
      ,salu.ra AS RA
      ,ppes.nome AS "Nome Aluno"
      ,ltrim(CASE WHEN erros.nome_1 IS NOT NULL THEN erros.nome_1||' - '||nvl(dados.valor_1, 'vazio') END
      ||CASE WHEN erros.nome_2 IS NOT NULL THEN ' | '||erros.nome_2||' - '||nvl(dados.valor_2, 'vazio') END
      ||CASE WHEN erros.nome_3 IS NOT NULL THEN ' | '||erros.nome_3||' - '||nvl(dados.valor_3, 'vazio') END
      ||CASE WHEN erros.nome_4 IS NOT NULL THEN ' | '||erros.nome_4||' - '||nvl(dados.valor_4, 'vazio') END
      ||CASE WHEN erros.nome_5 IS NOT NULL THEN ' | '||erros.nome_5||' - '||nvl(dados.valor_5, 'vazio') END
      ||CASE WHEN erros.nome_6 IS NOT NULL THEN ' | '||erros.nome_6||' - '||nvl(dados.valor_6, 'vazio') END
      ||CASE WHEN erros.nome_7 IS NOT NULL THEN ' | '||erros.nome_7||' - '||nvl(dados.valor_7, 'vazio') END
      ||CASE WHEN erros.nome_8 IS NOT NULL THEN ' | '||erros.nome_8||' - '||nvl(dados.valor_8, 'vazio') END
      ||CASE WHEN erros.nome_9 IS NOT NULL THEN ' | '||erros.nome_9||' - '||nvl(dados.valor_9, 'vazio') END, ' |')
      AS "Campos Envolvidos"
  FROM erros
       JOIN mon$dados dados
         ON (erros.consulta_id = dados.consulta_id)
      JOIN mon$execucao mex
        ON (mex.id = dados.exec_id)
           LEFT JOIN RM.scurso scur
        ON (scur.codCurso = dados.codCurso$
        AND scur.codColigada = dados.codcoligada$)
           LEFT JOIN RM.smatricpl smatpl
        ON (smatpl.ra = dados.ra$
        AND smatpl.idHabilitacaoFilial = dados.idHabilitacaoFilial$
        AND smatpl.idPerlet = dados.idPerlet$
        AND smatpl.codColigada = dados.codColigada$)
       LEFT JOIN RM.saluno salu
        ON (salu.ra = dados.ra$
        AND salu.codColigada = dados.codColigada$)
           LEFT JOIN RM.ppessoa ppes
        ON (ppes.codigo = salu.codPessoa)
           LEFT JOIN RM.shabilitacaoFilial shabfil
        ON (shabfil.idHabilitacaoFilial = dados.idHabilitacaoFilial$
        AND shabfil.codColigada = dados.codColigada$)
           LEFT JOIN RM.sgrade sgrad
        ON (sgrad.codGrade = dados.codGrade$
        AND sgrad.codCurso = dados.codCurso$
        AND sgrad.codColigada = dados.codColigada$)
           LEFT JOIN RM.sturma stur
        ON (stur.codTurma = dados.codTurma$
        AND stur.codFilial = dados.codFilial$
        AND stur.idPerlet = dados.idPerlet$
        AND stur.codColigada = dados.codColigada$)
           LEFT JOIN RM.gfilial gfil
        ON (gfil.codFilial = dados.codFilial$
        AND gfil.codColigada = dados.codColigada$)
 WHERE dados.codcoligada$ = 2
   AND dados.erro_status = 1
   AND dados.dados_id_ref IS NULL;



select * from vw_mon_sesi_dr -- 

select * from mon$consulta
select * from mon$dados

-- matriculas remanescentes - aguardando mantovani
select sma.ra,sma.dtmatricula, scu.nome,stu.codturma,stu.dtinicial, stu.dtfinal, sst.codstatus, sst.descricao 
from rm.smatricpl sma join rm.sturma stu
on sma.codcoligada = stu.codcoligada
and sma.idperlet = stu.idperlet
and sma.codfilial = stu.codfilial
and sma.codturma = stu.codturma
inner join rm.sstatus sst
on sma.codcoligada = sst.codcoligada
and sma.codstatus = sst.codstatus
left join rm.shabilitacaoaluno sha
on sha.codcoligada = sma.codcoligada
and sha.idhabilitacaofilial = sma.idhabilitacaofilial
and sha.ra = sma.ra
left join rm.shabilitacaofilial shf
on shf.codcoligada = sha.codcoligada
and shf.idhabilitacaofilial = sha.idhabilitacaofilial
left join rm.sgrade sgr
on sgr.codcoligada = shf.codcoligada
and sgr.codcurso = shf.codcurso
and sgr.codhabilitacao = shf.codhabilitacao
and sgr.codgrade = shf.codgrade
left join rm.shabilitacao sh
on sh.codcoligada = sgr.codcoligada
and sh.codcurso = sgr.codcurso
and sh.codhabilitacao = sgr.codhabilitacao
left join rm.scurso scu
on scu.codcoligada = sh.codcoligada
and scu.codcurso = sh.codcurso
where sma.codstatus in (39,71,17,2)
and to_char(dtfinal,'YYYY') = '2019'
and sma.codcoligada = 2



--select * from rm.sstatus where descricao = 'Matriculado'
--or   descricao = 'Em Processo'


-- matriculas retroativas
select ra, codturma, dtinicial, dtfinal, descricao,
(case when to_char(/*to_date(*/dtmatricula/*&dt_matricula*//*,'dd/mm/yyyy')*/,'YYYYMM') >= to_char(to_date(dtinicial/*&dt_inicio*/,'dd/mm/yyyy'),'YYYYMM')
                                           then to_char(/*to_date(*/dtmatricula/*&dt_matricula*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                           else to_char(/*to_date(*/dtinicial/*&dt_inicio*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                      end )  data_granularidade_DIM_TEMPO ,

to_char(/*to_date(*/reccreatedon/*&dt_criacao*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                        DIM_ADICIONAL_Mês_Criacao ,
               
(case when to_char(/*to_date(*/reccreatedon/*&dt_criacao*//*,'dd/mm/yyyy')*/,'YYYYMM') > (case when to_char(/*to_date(*/dtmatricula/*&dt_matricula*//*,'dd/mm/yyyy')*/,'YYYYMM') >= to_char(/*to_date(*/dtinicial/*&dt_inicio*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                           then to_char(/*to_date(*/dtmatricula/*&dt_matricula*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                           else to_char(/*to_date(*/dtinicial/*&dt_inicio*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                      end )
                                           then 1
                                           else 0
                                      end ) Realizado_Retroativo 
                                      
                                     

from 

(
select sma.ra,sma.dtmatricula, scu.nome,stu.codturma,stu.dtinicial, stu.dtfinal, sst.codstatus, sst.descricao, sma.reccreatedon 
from rm.smatricpl sma join rm.sturma stu
on sma.codcoligada = stu.codcoligada
and sma.idperlet = stu.idperlet
and sma.codfilial = stu.codfilial
and sma.codturma = stu.codturma
inner join rm.sstatus sst
on sma.codcoligada = sst.codcoligada
and sma.codstatus = sst.codstatus
left join rm.shabilitacaoaluno sha
on sha.codcoligada = sma.codcoligada
and sha.idhabilitacaofilial = sma.idhabilitacaofilial
and sha.ra = sma.ra
left join rm.shabilitacaofilial shf
on shf.codcoligada = sha.codcoligada
and shf.idhabilitacaofilial = sha.idhabilitacaofilial
left join rm.sgrade sgr
on sgr.codcoligada = shf.codcoligada
and sgr.codcurso = shf.codcurso
and sgr.codhabilitacao = shf.codhabilitacao
and sgr.codgrade = shf.codgrade
left join rm.shabilitacao sh
on sh.codcoligada = sgr.codcoligada
and sh.codcurso = sgr.codcurso
and sh.codhabilitacao = sgr.codhabilitacao
left join rm.scurso scu
on scu.codcoligada = sh.codcoligada
and scu.codcurso = sh.codcurso
where (case when to_char(/*to_date(*/dtmatricula/*&dt_matricula*//*,'dd/mm/yyyy')*/,'YYYYMM') >= to_char(to_date(dtinicial/*&dt_inicio*/,'dd/mm/yyyy'),'YYYYMM')
                                           then to_char(/*to_date(*/dtmatricula/*&dt_matricula*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                           else to_char(/*to_date(*/dtinicial/*&dt_inicio*//*,'dd/mm/yyyy')*/,'YYYYMM')
                                      end )>= 201801/*sma.codstatus in (39,71,17,2)
and to_char(dtfinal,'YYYY') = '2018'*/
and sma.codcoligada = 2
)

--- funcao pivot oracle

SELECT *
  FROM (
    SELECT err.codColigada AS codColigada
          ,err.id AS consulta_id
          ,err.descricao
          ,err.descricao_completa
          ,CASE err.tipo
            WHEN 'co' THEN 'Campos Requeridos'
            WHEN 'rn' THEN 'Regra de Negócio'
           END AS tipo_erro
          ,col.posicao
      ,col.nome
          ,agr.nome AS agrupamento
      FROM mon$consulta err
           LEFT JOIN MON$CONSULTA_COLUNAS col
                ON (col.consulta_id = err.id)
           LEFT JOIN mon$agrupamento agr
                ON (agr.id = err.agrupamento_id)
    WHERE AGR.NOME IN ('ALUNO','TURMA','TURMADISCIPLINA','ETAPA','MATRICULA','MATRICULADISCIPLINA')
        AND (err.codColigada IS NULL OR err.codColigada = 2)) t
PIVOT
(MAX(nome) FOR posicao IN (1 nome_1, 2 nome_2, 3 nome_3, 4 nome_4, 5 nome_5, 6 nome_6, 7 nome_7, 8 nome_8, 9 nome_9)
)



--- pivot gerando XML


--Tipo XML
--No exemplo anterior, foi necessário especificar os códigos de estado válidos para state_code:

for state_code in ('NY','CT','NJ','FL','MO')

--Para isso, os valores presentes na coluna state_code devem ser conhecidos com antecedência. Se os valores disponíveis não são conhecidos, como a consulta é criada?

--Há outra cláusula na operação pivot, XML, que permite gerar a saída reordenada como código XML no qual é possível incluir uma cláusula especial, ANY, em lugar de valores literais. Segue um exemplo:

select * from (
   select times_purchased as "Purchase Frequency", state_code
   from customers t
)
                               
pivot xml
(
   count(state_code)
    
                              
for state_code in (any)
)
order by 1
/

/*A saída é apresentada em formato CLOB (objeto grande de caracteres), portanto, antes de executar a consulta, é conveniente conferir que tenha sido alocado um valor grande a LONGSIZE.

SQL> set long 99999

Há duas diferenças claras (marcadas em negrito) entre esta consulta e a operação pivot original. Primeiramente, foi especificada uma cláusula, pivot xml, em lugar de usar somente o operador pivot. Assim, a saída tem formato XML. Segundo, a cláusula FOR inclui for state_code in (any) em lugar de uma extensa lista de valores possíveis para state_code. A notação em XML permite usar a palavra-chave ANY, para assim evitar a necessidade de digitar os valores de state_code. Os dados de saída são apresentados assim:

Purchase Frequency STATE_CODE_XML
         ------------------ --------------------------------------------------
                 1 <PivotSet><item><column name = "STATE_CODE">CT</co
                   lumn><column name = "COUNT(STATE_CODE)">165</colum
                   n></item><item><column name = "STATE_CODE">NY</col
                   umn><column name = "COUNT(STATE_CODE)">33048</colu
                   mn></item></PivotSet>

                 2 <PivotSet><item><column name = "STATE_CODE">CT</co
                   lumn><column name = "COUNT(STATE_CODE)">179</colum
                   n></item><item><column name = "STATE_CODE">NY</col
                   umn><column name = "COUNT(STATE_CODE)">33151</colu
                   mn></item></PivotSet>
 
... etc. ...
*/

--unpivot oracle

SELECT * FROM TABELA
)unpivot(CONTEUDO_CAMPO FOR NOMES_CAMPO IN (acomp_30 AS '30',acomp_60 AS '60', acomp_90 as '90', acomp_120 AS '120', acomp_150 AS '150', acomp_180 as '180'))

ex. (chapa, dataadmissao, acomp_30, acomp_60, etc (sao os campos data da tabela) entao conteudo_campo pode ser o nome para o conteudo dessas colunas, ex. datas_xx e dentro do in são os valores que serao representados para cada coluna no formato de linha


-- resolver problema de group by

select * from inf_trustedzone.fat_carteira_credito where (contrato, mob) in (select contrato,max(mob) as mob from inf_trustedzone.fat_carteira_credito cart group by contrato

-- para resolver problema de duplicacao de codigo data em groupo by
-- tira o codigo do select e coloca data (anomes) depois pega o max data

-- sempre usar a metodologia CRISP-DM

- entendimento do negocio como se fosse para um retardado
  - montar uma simulacao em excel
- entendimento dos dados, select nas tabelas, entendimento dos campos e relacionamentos
  - montar um ER na mao das principais tabelas e seus relacionamentos e cardinalidades
  - alterar o notebook EDA 1.1 e usar para as tabelas (incluir group by para pegar se tem linhas repetidas. ex. dados diferente em datas (data sem hora) iguais por exemplo, que pode furar um join)
- simular via SQL ou spark a simulação em excel

--lock e kill synapse

select * from sys.dm_pdw_lock_waits
kill 'SID74138'

Para subir arquivos grandes via azcopy local para azure

--logar no azcopy

.\azcopy login - entrar na pagina solicitada https://microsoft.com/devicelogin e colocar o codigo gerado para logar.

.\azcopy copy '2021-01-01_2021-01-31_1.parquet'  'https://dlprdbigdatav2.blob.core.windows.net/rodovias/raw/externals/<TOKEN SAS CRIADO>' --recursive=true

ex.:
.\azcopy copy '2021-01-01_2021-01-31_1.parquet'  'https://dlprdbigdatav2.blob.core.windows.net/rodovias/raw/externals/seed-rmbh_16072021/?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-07-26T10:38:18Z&st=2021-07-26T02:38:18Z&spr=https&sig=ZtR9zUxJnIK4b6rTdN4WHrrsE3kLfgf2mOixyacGQo8%3D' --recursive=true

--select no else case
SELECT DISTINCT CASE WHEN PFUNC.CODNIVELSAL IN '802' THEN 'Conselheiro'
ELSE (SELECT PTPFUNC.DESCRICAO from RM.PTPFUNC WHERE PTPFUNC.CODCLIENTE = PFUNC.CODTIPO) END  TIPOCOLABORADOR
FROM RM.PFUNC;

-- ao criar a dimensao, alem dos campos descritivos, a chave natural tb deve ser levada para poder fazer o join com a tabela que supostamente será a fato
-- ao criar a fato, deve-se fazer os joins com todas as tabelas e campos necessários para ligar as dimensoes
-- ao criar a tabela fato, deve-se levar as fks para poder ligar com as dimensoes
-- ao levar a dimensao para a fato, é feito um join da chave natural da dimensao com a fk da fato, ao encontrar a linha, a chave surrogate da dimensao é levada para a fato

-- problema do left join trazer mais linhas do que a tabela da esquerda

se a tabela da direita tiver duas correspondencias para uma da direita isso pode acontecer de trazer mais linhas

Table1                Table2
_______               _________
1                      2
2                      2
3                      5
4                      6

SELECT Table1.Id, Table2.Id FROM Table1 LEFT OUTER JOIN Table2 ON Table1.Id=Table2.Id

Resultados:

1,null
2,2
2,2
3,null
4,null

primeira coisa quando aumenta o numero de linhas em um join é se o numero de linhas antes e depois do join esta igual

depois verificar se as colunas do join estao corretas

depois verificar se os codigos de uma tabela sao iguais na outra e se em nenhuma delas
existe o mesmo codigo duplicado que pode multiplicar pela outra, principamente se nao tem dimensao com a mesma fk para mais de uma linha

verificar tb se nao existe nenhum vlr nulo nas colunas do join que pode matar a relacao

verificar tb se nao existe nenhum campo com tipos de dados diferentes que pode matar a relacao

